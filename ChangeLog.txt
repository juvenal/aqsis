2008-07-21 20:53  pgregory

	* tools/eqsl/eqsl.fl: Temporary fix for launching of piqsl from
	  eqsl under Windows, not by any means a perfect solution, but it
	  makes it work for 1.4.

2008-07-21 19:08  ltatkinson

	* release-notes/1.4/summary-1.4.txt: Corrected Massive reference in
	  'Known Issues' list for 1.4.

2008-07-21 13:53  c42f

	* content/ribs/scenes/fisheye/fisheye.rib: Make fisheye scene
	  render to a tiff with transparent background to emphasize
	  the usable area.

2008-07-21 13:47  c42f

	* CMakeLists.txt, cmake/macros.cmake: Relax minimum required cmake
	  version to 2.4.6.
	  
	  * This required removing the IF(IS_ABSOLUTE ...) construct which
	  is only
	  avaliable in 2.4.8 and replacing it with a rather kludgy macro,
	  CHECK_PATH_ABSOLUTE(). (Kludgyness is mostly restricted to inside
	  the
	  macro.)

2008-07-21 13:15  c42f

	* content/ribs/scenes/fisheye/README.txt,
	  content/ribs/scenes/fisheye/envmap.rib,
	  content/ribs/scenes/fisheye/fisheye.rib,
	  content/ribs/scenes/fisheye/fisheye_projection.sl,
	  content/ribs/scenes/fisheye/lights.rib,
	  content/ribs/scenes/fisheye/render.bat,
	  content/ribs/scenes/fisheye/render.sh,
	  content/ribs/scenes/fisheye/scene.rib,
	  content/ribs/scenes/fisheye/world.rib: Fix svn properties to set
	  native line-endings and the excutable bit for render.sh

2008-07-21 12:56  ltatkinson

	* content/ribs/scenes/fisheye,
	  content/ribs/scenes/fisheye/README.txt,
	  content/ribs/scenes/fisheye/envmap.rib,
	  content/ribs/scenes/fisheye/fisheye.rib,
	  content/ribs/scenes/fisheye/fisheye_projection.sl,
	  content/ribs/scenes/fisheye/lights.rib,
	  content/ribs/scenes/fisheye/render.bat,
	  content/ribs/scenes/fisheye/render.sh,
	  content/ribs/scenes/fisheye/scene.rib,
	  content/ribs/scenes/fisheye/world.rib,
	  content/ribs/scenes/fisheye_projection: Revised new 'fisheye'
	  example to be more in-line with existing 'content'.

2008-07-21 11:59  c42f

	* content/ribs/scenes/fisheye_projection,
	  content/ribs/scenes/fisheye_projection/README.txt,
	  content/ribs/scenes/fisheye_projection/environment_faces.rib,
	  content/ribs/scenes/fisheye_projection/environment_lights.rib,
	  content/ribs/scenes/fisheye_projection/environment_scene.rib,
	  content/ribs/scenes/fisheye_projection/environment_world.rib,
	  content/ribs/scenes/fisheye_projection/fisheye.rib,
	  content/ribs/scenes/fisheye_projection/fisheye_projection.sl,
	  content/ribs/scenes/fisheye_projection/render.bat,
	  content/ribs/scenes/fisheye_projection/render.sh: Add
	  fisheye_projection example scene. See the README.txt for details.

2008-07-21 11:58  ltatkinson

	* release-notes/1.4/summary-1.4.txt, tools/eqsl/eqsl.fl: * Updated
	  eqsl to *not* provide verbose logging by default.
	  * Updated the 'Known Issues' list within 1.4 release notes.

2008-07-21 09:39  c42f

	* CMakeLists.txt: Make sure that a CMake-2.4.8 is used for the
	  build. Any earlier version will
	  result in an error due to the use of the IF(IS_ABSOLUTE)
	  construct, so make it
	  a fatal error to try using an earlier version.

2008-07-21 01:36  c42f

	* CMakeLists.txt, cmake/macros.cmake, cmake/platform/linux.cmake:
	  Fix a build bug: DEFAULT_DISPLAYPATH was not getting correctly
	  updated when
	  CMAKE_INSTALL_PREFIX changed. This was due to DEFAULT_DISPLAYPATH
	  being a
	  cmake cache variable.
	  
	  * Introduced a macro SET_WITH_PATH_PREFIX which sets a variable
	  to an input
	  path, prepending a path prefix if the input path isn't absolute.
	  
	  * Used SET_WITH_PATH_PREFIX to resolve the issues in the main
	  cmake file.
	  
	  * Small cleanup in linux.cmake - it had special-purpose code for
	  this which can
	  be replaced with SET_WITH_PATH_PREFIX.

2008-07-20 21:57  c42f

	* CMakeLists.txt, displays/display/CMakeLists.txt: Make sure that
	  libdisplay is built, even in the absence of fltk. If not, then
	  aqsis is left crippled without a "file", "tiff", "zfile" or
	  "shadow" display
	  driver.
	  
	  The fix was simple - just enable the AQSIS_NO_FLTK macro in the
	  source when
	  AQSIS_USE_FLTK is false.

2008-07-20 21:16  pgregory

	* shadercompiler/shadervm/shadervm.cpp,
	  thirdparty/pdiff/CompareArgs.cpp: * Fix a compile problem with
	  the internal PerceptualDiff codebase, not sure how this compiled
	  before.
	  * Fix a regression to the array initialisation code, the change
	  in #2302 caused an error in the initialisation of array arguments
	  that weren't colors, vectors or matrices. The result was that the
	  first value of the array was duplicated across the whole array.

2008-07-20 11:07  c42f

	* renderer/render/patch.cpp: Bugfix #2022216: bicubic patches
	  sometimes cause bad_alloc exception
	  
	  This was due to integer overflow in the dicable check when
	  rendering with
	  rather high resolutions. This caused the patch to be diced at a
	  very high
	  resolution, leading to an out-of-memory exception.
	  
	  The solution was to modify the dicable check (a little kludgy,
	  but minimally
	  invasive for the 1.4 release) and add some extra code to avoid
	  overflow.
	  
	  Thanks to Paul for pointing out the fix.

2008-07-20 08:47  cgtobix

	* aqsistypes/cellnoise_test.cpp, aqsistypes/matrix_test.cpp,
	  aqsistypes/noise1234_test.cpp, aqsistypes/noise_test.cpp,
	  aqsistypes/spline_test.cpp, aqsistypes/vector2d_test.cpp,
	  aqsistypes/vector4d_test.cpp: Removed the OSX-specific workaround
	  for unit testing.

2008-07-20 03:38  c42f

	* aqsistypes/aqsismath_test.cpp: Add forgotten test case for
	  Aqsis::log2() function.

2008-07-19 04:31  c42f

	* displays/d_exr/CMakeLists.txt, texturing/texlib/CMakeLists.txt:
	  Correct cmake error when OpenEXR cannot be found and
	  AQSIS_USE_OPENEXR is not set.
	  
	  This was due to using
	  INCLUDE_DIRECTORIES(${AQSIS_OPENEXR_INCLUDE_DIR}) when
	  AQSIS_OPENEXR_INCLUDE_DIR had been set to a "not found" value.

2008-07-18 21:25  c42f

	* AUTHORS: Modify formatting of authors list to use spaces rather
	  than tabs for
	  consistency across platforms.

2008-07-18 14:21  pgregory

	* cmake/platform/macosx.cmake, displays/piqsl/CMakeLists.txt,
	  displays/piqsl/piqsldisplay.cpp, tools/eqsl/eqsl.fl: * Fix a
	  problem with the construction of the displays and shaders
	  arguments to aqsis, they didn't need the extra quoting. That
	  quoting is only needed from the shell to distinguish separate
	  arguments that may have spaces. As these arguments are separated
	  by the very nature of being supplied as an array, it was
	  unnecessary and meant the value being set in aqsis incorrectly
	  retained the quotes.
	  * Make piqsldisplay try the Bundle executable folder if it can't
	  find piqsl on the PATH. This was necessary as when run as an .app
	  from the Finder, the PATH is not likely to be setup to point to
	  the Bundle executable directory.

2008-07-18 00:16  ltatkinson

	* AUTHORS: Revised AUTHORS file again as previous commit effected
	  spacing on other platforms. :-s

2008-07-18 00:11  ltatkinson

	* AUTHORS, distribution/macosx/bundle/create_bundle.sh.in.cmake:
	  Corrected formatting of AUTHORS file under OS X as spacing was
	  variable.

2008-07-17 13:37  c42f

	* shadercompiler/slxargs/CMakeLists.txt: Ensure that the aqsis
	  slx.h header is installed.

2008-07-17 08:26  ltatkinson

	* distribution/macosx/bundle/CMakeLists.txt, tools/eqsl/eqsl.fl:
	  Improvement to eqsl searchpath usage under OS X, thanks to help
	  of pgregory, though 'displays' and 'shaders' paths are still not
	  found yet.

2008-07-17 08:24  cgtobix

	* distribution/macosx/bundle/create_bundle.sh.in.cmake: Exclude
	  *.bat and CMake-related files from beeing distributed in the
	  DMG's.

2008-07-17 06:46  cgtobix

	* distribution/macosx/bundle/create_bundle.sh.in.cmake: Exclude
	  *.bat and CMake-related files from beeing distributed in the
	  DMG's.

2008-07-16 23:43  c42f

	* shadercompiler/slparse/parser.yy: Bugfix #2010788: "RSL functions
	  fail to correctly convert return value"
	  
	  During typechecking, function return values were not being
	  correctly cast to
	  the function return type.
	  
	  * The solution was to add a CqParseNodeCast to the AST in the
	  return statement.
	  This required introducing a stack of pointers to the currently
	  parsed
	  function definition so that the correct type was known for the
	  cast.
	  
	  * Improve error reporting for invalid return statements so that
	  it does the
	  right thing in the case of void function returns.
	  
	  * Cleaned up usage of the closely related
	  functionReturnCountStack so that
	  pushing and popping of the stacks are done within the actions of
	  a single
	  grammar rule (function_definition) rather than pushed inside
	  function_declaration and popped within function_definition.

2008-07-16 21:33  pgregory

	* renderer/render/ri.cpp, shadercompiler/shadervm/shadervm.cpp: *
	  Fix the recent commit related to preparing shaders instantiated
	  from RiProcedurals.
	  There were two problems.
	  1. The InitialiseParameters call was modifying the stored
	  arguments in place when it had to tranform them, meaning that if
	  a stored shader was used in multile passes, the transformation
	  would be repeated.
	  2. The check for whether a shader had been instantiated while
	  performing a render was invalid, it was resulting in a true case
	  if the "multipass" option was completely unset, which is invalid.
	  This hasn't been tested on the Massive content yet to ensure it
	  doesn't regress, this will be tested at the next available
	  opportunity.

2008-07-16 11:24  ltatkinson

	* CMakeLists.txt, distribution/linux/rpm/aqsis.spec.in.cmake:
	  Corrected oversight in previous SPEC commit as CMake was not
	  allowing the overriding of certain variables at build-time.

2008-07-16 10:14  ltatkinson

	* distribution/linux/rpm/aqsis.spec.in.cmake: Fixed issue regarding
	  duplicate 'display' path prefix within Linux SPEC (RPM) file.

2008-07-16 09:56  ltatkinson

	* cmake/platform/linux.cmake, distribution/linux/CMakeLists.txt,
	  distribution/linux/aqsis.desktop, distribution/linux/aqsis.xml,
	  distribution/linux/aqsl.desktop,
	  distribution/linux/aqsltell.desktop,
	  distribution/linux/rpm/aqsis.spec.in.cmake,
	  distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi.in.cmake: Modified Linux desktop
	  integration further to IRC conversation with package maintainer.

2008-07-15 22:22  ltatkinson

	* release-notes/1.4/summary-1.4.txt: Removed OS X 'Finder' blocking
	  entry from Aqsis 1.4 'Known Issues' list, as cgtobix has now
	  fixed this.

2008-07-15 20:03  ltatkinson

	* cmake/platform/windows.cmake,
	  distribution/win/nsis/setup.nsi.in.cmake: Added missing escape
	  characters for Windows-specific CMake config and corrected
	  related installer (NSIS).

2008-07-15 19:37  cgtobix

	* distribution/macosx/bundle/bundle_config.applescript: Some
	  cleanup

2008-07-15 19:12  cgtobix

	* distribution/macosx/bundle/bundle_config.applescript: Fix the
	  double icon issue on OSX.

2008-07-15 15:21  pgregory

	* renderer/render/renderer.cpp, renderer/render/ri.cpp,
	  shadercompiler/shadervm/shadervm.cpp: * Change the way shaders
	  coming in from a procedural are initialised, it was previously
	  prepping the shader before the arguments had been assigned, now
	  it preps after in ri.cpp.

2008-07-15 15:06  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake: Fixed issue
	  introduced in previous commit, which would (incorrectly) stop
	  building on non_Linux platforms.

2008-07-15 13:54  ltatkinson

	* content/CMakeLists.txt, distribution/linux/CMakeLists.txt,
	  tools/mpdump/CMakeLists.txt: Added missing files from previous
	  commit!

2008-07-15 13:43  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake, cmake/platform/windows.cmake,
	  distribution/win/nsis/setup.nsi.in.cmake: Revised content/example
	  generation, further to earlier commit, should now be *much*
	  cleaner.

2008-07-15 12:16  cgtobix

	* distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/bundle_config.applescript: This fixes
	  the issue with eqsl locking Finder while running on OSX.

2008-07-15 11:25  ltatkinson

	* distribution/linux/aqsis.desktop, distribution/linux/aqsis.sh,
	  distribution/linux/aqsl.sh, distribution/linux/aqsltell.sh:
	  Modified Linux desktop scripts, now output is correctly generated
	  within the current working directory rather than $HOME.

2008-07-14 15:28  ltatkinson

	* content/ribs/features/blobby, content/ribs/scenes/sci_volumes,
	  misc, misc/blobby, misc/sci_volumes: Aqsis content/example
	  cleanup.

2008-07-14 12:57  ltatkinson

	* release-notes/1.4/summary-1.4.txt: Updated Aqsis 1.4 'Summary'
	  file with 'Known Issues' section.

2008-07-14 12:24  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/windows.cmake,
	  content/ribs/scenes/sci_volumes/README.txt: Added build-time
	  support for render-time usage of AIR DBO (procedural),
	  complementing other recent DSO efforts.

2008-07-13 08:25  ltatkinson

	* distribution/linux/rpm/aqsis.spec.in.cmake: Corrected oversight
	  in Linux SPEC (RPM) file following recent changes.

2008-07-12 19:01  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake, cmake/platform/windows.cmake: Fixed
	  breakage introduced in previous commit, plus revised example
	  generation (now platform-specific).

2008-07-12 13:24  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  distribution/linux/rpm/aqsis-Fedora_8.spec.in.cmake,
	  distribution/linux/rpm/aqsis.spec.in.cmake,
	  distribution/win/nsis/setup.nsi.in.cmake: Moved example content
	  generation to main CMake file, including freedesktop files.

2008-07-12 08:51  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake, cmake/platform/windows.cmake,
	  distribution/win/nsis/setup.nsi.in.cmake: Moved 3rd-party DSO
	  support to main CMake file, using new build-time variables
	  (enabled by default).

2008-07-11 23:03  ltatkinson

	* CMakeLists.txt, distribution/win/nsis/setup.nsi.in.cmake: Added
	  build (and installer) support for Massive, enabled by default.

2008-07-11 20:50  pgregory

	* renderer/render/procedural.h: * Fix for #1653097, the Bound()
	  function for CqRiProcedural wasn't correctly adjusting the bound
	  for transformation motion, as per all other primitives.

2008-07-11 07:28  pgregory

	* tools/eqsl/eqsl.fl: * Fix for #2010470, eqsl now buffers the
	  output from the tool and processes it a line at a time, ensuring
	  the progress regexp matches properly.
	  * Also fixed a problem where clicking in the console page while
	  running a tool would result in changing the insert position, and
	  thus all subsequent output to the console would end up inserted
	  into the previous output.

2008-07-10 16:39  pgregory

	* renderer/render/options.cpp, renderer/render/ri.cpp: Fix for
	  #1988031, the Dof settings were in fact being reset between
	  frames, but Aqsis was keeping some cached information that
	  wasn't. Now moved the cache generation from the RiDepthOfField
	  call to the CqOptions::InitialiseCamera function where it
	  belongs.

2008-07-10 16:02  c42f

	* renderer/render/polygon.cpp: Bugfix #2012035: "polygons and
	  derivatives: Du, Dv, du and dv are incorrect"
	  
	  This bug was due to the awkward non grid-aligned surface
	  coordinates which the
	  RISpec says are assigned to polygons. Instead we choose to
	  violate the
	  standard here and make u and v grid-aligned. This avoids
	  littering all
	  derivative calculation code with special cases for grids arising
	  from polygons.

2008-07-10 05:52  c42f

	* rib/ri2rib/dictionary.cpp, rib/ri2rib/dictionary.h,
	  rib/ri2rib/output.cpp, rib/ri2rib/output.h: Supplementary bugfix:
	  #1924103 "facevertex storage class not recognized by libri2rib"
	  
	  Adding facevertex support to libri2rib was not as simple as
	  recognising
	  "facevertex" in variable declarations. We also need to deal with
	  parameters of
	  type facevertex; in particular we need to know their lengths of
	  facevertex
	  parameter arrays.
	  
	  * Make the CqOutput::allocSize() and CqOutput::printPL()
	  functions take a
	  parameter for the facevertex array length.
	  
	  * Update all primitives which make use of facevertex class
	  variables to use the
	  new version of printPL().
	  
	  * Fix related bugs in CqOutput::RiPolygonV() and
	  CqOutput::RiGeneralPolygonV()
	  in which the uniform and facevarying array lengths were mixed up.

2008-07-10 00:24  pgregory

	* renderer/render/procedural.cpp: Fix for #1885265, Win32
	  RiProcRunProgram now redirects the child stderr to a duplicate
	  handle to the parent's stderr, so we not only don't crash, but
	  see the stderr on our console.

2008-07-09 22:45  pgregory

	* rib/ri2rib/inlineparse.cpp: Change error message in ri2rib
	  declaration parser, as it is used to parse both inline and
	  explicit declaration strings.

2008-07-09 22:40  pgregory

	* rib/ri2rib/dictionary.h, rib/ri2rib/inlineparse.cpp: * Add a fix
	  for #1924103, ri2rib (and hence miqser) should now recognise
	  facevertex as a valid class.

2008-07-09 17:59  pgregory

	* shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/typecheck.cpp: * Fix the previous commit
	  related to bug #1852035, the heck wasn't working for the case of
	  assignment at declaration.

2008-07-09 07:14  pgregory

	* shadercompiler/slparse/typecheck.cpp: * Added a fix for #1852035,
	  trying to assign a varying value to a uniform variable will now
	  give a compile error.

2008-07-08 21:00  pgregory

	* renderer/render/procedural.cpp: When a RunProgram procedural
	  can't resolve the executable in the procedural searchpaths, try
	  executing it plain, and rely on the PATH to find it. Should fix
	  #2012011 without affecting previous operation.

2008-07-08 16:54  c42f

	* displays/display/display.cpp: Add some checking to the
	  zframebuffer display mode to prevent it getting
	  confused when asked to display "rgb" data. (Attempting to display
	  rgb data
	  with the zframebuffer led to a crash.)
	  
	  Also clean up some usage of sizes for the PtDspy* types.

2008-07-08 15:22  pgregory

	* renderer/render/procedural.cpp, renderer/render/rifile.h: * Fix
	  for bug #2012011, RunProgram procedural should now be found in
	  the "procedural" searchpath.

2008-07-08 14:50  c42f

	* release-notes/1.4/summary-1.4.txt: Minor edits to the changelog
	  for accuracy:
	  - "Support gamma option in make texture functions." This is
	  deprecated anyway
	  with aqsistex, so removed it.
	  - "Implement RiClippingPlane support. #1883032" Is slighly
	  misleading, since
	  we now recognize the call, but don't do anything with it except
	  issue a
	  warning. I changed this enhancement to a bugfix.
	  
	  Also spell-checked the file.

2008-07-08 14:29  c42f

	* release-notes/1.4/summary-1.4.txt: * Reformat summary of
	  aqsis-1.4 changes

2008-07-08 10:32  pgregory

	* renderer/render/procedural.cpp: * Added a fix for #2012013, now
	  test for the existence of a DSO based on the supplied name before
	  appending the shared library extension and trying that.

2008-07-07 14:24  pgregory

	* shadercompiler/shadervm/dsoshadeops.cpp: Remove extra output that
	  can cause problems in slxargs/aqsltell.

2008-07-07 12:13  pgregory

	* cmake/platform/windows.cmake: * Correct a type from #2255 on
	  Windows, the windows library was mistakenly typed in as "ws3_32",
	  instead of "ws2_32".

2008-07-06 21:13  pgregory

	* release-notes/1.4/summary-1.4.txt: Reorder so that the changes
	  are listed most recent last, as the list was built from the log.

2008-07-06 20:29  pgregory

	* release-notes, release-notes/1.4,
	  release-notes/1.4/summary-1.4.txt: Add some release information,
	  basic summry of the changes since 1.2, more notes should be
	  added.

2008-07-06 15:10  c42f

	* aqsistypes/CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake, cmake/platform/windows.cmake,
	  texturing/texlib/CMakeLists.txt: Try to fix an odd build failure
	  on gentoo, as reported at
	  http://bugs.gentoo.org/show_bug.cgi?id=230171
	  
	  We currently link to the dl library for dlopen(), dlclose() etc
	  for each
	  executable separately, but there doesn't seem to be a good reason
	  for doing so.
	  Instead I've chosen to link aqsistypes with the dl library; that
	  dependency
	  should then carry through to any executables which need it. This
	  was done by
	  introducing a variable - AQSISTYPES_SYSTEM_LINKLIBS - and adding
	  dl to it in
	  the platform-specific cmake files. Also I cleaned up a similar
	  WIN32-specific
	  library using the same variable.

2008-07-06 09:26  c42f

	* shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/parser.yy: Bugfix 1892279: "missing
	  default shader instance vars should be an error"
	  
	  * Added an error call in the appropriate place when a lack of
	  defaults is
	  detected.
	  
	  * Made a new function, Error(message, line) to be used when the
	  autodetected
	  line number used by yyerror() is not good enough. This often the
	  case
	  when additional errors are detected by user code embedded in a
	  production
	  rather than directly by the parser itself. The appropriate line
	  number is
	  then often accessible in the AST.
	  
	  * Removed the global ParseSucceeded variable, since it is no
	  longer used
	  anywhere.

2008-07-05 13:32  c42f

	* shadercompiler/slparse/parser.yy: Bugfix: A return statement
	  outside an RSL function (ie, in a shader body)
	  should trigger an error, but didn't.

2008-07-04 08:30  c42f

	* aqsistypes/matrix2d.h: Fix an not-quite-correct assertion in
	  CqMatrix2D::eigenvalues(). While
	  secondTerm >= 0 mathematically, there are cases when this is not
	  quite true due
	  to small numerical errors.

2008-07-04 08:28  c42f

	* tools/eqsl/eqsl.fl: * Bugfix: eqsl crashed after clearing console
	  history.
	  This was due to incorrectly calling the Fl_Group::clear()
	  function of the
	  console window - this delets all child widgets rather than
	  clearing the text.
	  The correct action is to set the text to the empty string:
	  m_outputConsole->buffer()->text("").
	  
	  * Fix several compiler warnings about unused variables and
	  comparisons between
	  signed and unsigned integers in eqsl.cxx.

2008-07-04 05:42  c42f

	* renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ndspy.h:
	  Bugfix #1762662: "Aqsis interprets RiQuantize incorrectly"
	  
	  Aqsis was selecting the data format to be passed to displays (one
	  of PtDspy*)
	  incorrectly - integer types were only used for special values of
	  "one" in the
	  RiQuantize call. Instead, the RISpec suggests that integer types
	  should always
	  be used, except in the special case where "one" == 0.
	  
	  I've also preempted several other bugs by making sure that
	  ddmanager.cpp uses
	  the PtDspy* types consistently, rather than assuming things like
	  sizeof(long) == 4 (this is actually false on platforms like amd64
	  + gcc).
	  
	  Finally, a small bugfix change to ndspy.h, to ensure that
	  PtDspySigned8 is
	  actually a *signed* char. (char may in fact be signed _or_
	  unsigned according
	  to the C standard.)

2008-07-03 14:16  c42f

	* aqsistypes/pool.h: Make sure a huge memory leak in CqPool is
	  plugged for all g++ compiler versions.
	  
	  Originally I observed the issue (see comments in code) with g++
	  version 3.4,
	  but not with 4.1; I imagined that it was possibly a very subtle
	  compiler bug
	  which had been fixed in version 4. Now I have observed the leak
	  with g++-4.2
	  as well, so it seems safest to enable the fix for all versions of
	  gcc.

2008-07-02 07:09  pgregory

	* renderer/render/renderer.cpp: * Fix a problem with the
	  initialisation of shader arguments for shaders created within a
	  RiProcedural.
	  - Since the inclusion of multipass rendering (for autoshadows),
	  shader arguments aren't initialised until the start of rendering,
	  this is to ensure that the appropriate coordinate systems are
	  properly setup for the pass being rendered. The arguments are all
	  initialised just before the render pass begins. This however is a
	  problem for dynamic content generated during the render by a
	  RiProcedural. The same problem occurs with geometry, which by
	  default goes into a world storage, unless generated during
	  rendering, in which case it fasttracks straight into the
	  pipeline. The same is now true of created shaders, if we're
	  rendering a pass, all shaders get their arguments initialised
	  immediately upon creation.

2008-07-01 08:57  pgregory

	* displays/piqsl/framebuffer.cpp: * Apply a simple fix for
	  #1978314.
	  - Now, when resizing the canvas, the window will resize larger
	  (but not smaller) if necessary to accommodate the new image size,
	  up to 90% of the screen size.

2008-06-30 20:39  pgregory

	* renderer/aqsis/aqsis.cpp: * Make sure a missing file reports an
	  error, and returns a non-zero error code, and some very minor
	  cleanups to the error message reporting.

2008-06-30 14:02  c42f

	* renderer/render/micropolygon.cpp, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/quadrics.cpp,
	  renderer/render/quadrics.h, renderer/render/surface.cpp,
	  renderer/render/surface.h: Bugfix #1737642: Sides causes odd
	  lighting (actually due to orientation problems)
	  
	  This bug was due not to lighting, but to the incorrect
	  orientation of the
	  surface normals for spheres, cylinders and disks when the current
	  transforation
	  changed the handedness. Due to the special way that the normals
	  for quadrics
	  are computed in *object* space, we shouldn't explicitly flip the
	  normals based
	  on the handedness of the current transformation. The only reason
	  to flip the
	  normals is if the *current orientation* says to do so.
	  
	  * Make sure the normals are correctly flipped in
	  CqQuadric::DiceAll().
	  
	  * Remove the CanGenerateNormals() and GenerateGeometricNormals()
	  functions,
	  since they are obsoleted by a more general and efficient
	  mechanism inside
	  DiceAll(). The only place these were called was for the sphere,
	  cylinder and
	  disk. Since the old mechanism was broken, all three of these
	  gprims suffered
	  from incorrectly flipped normals under handedness-changing
	  transformations.

2008-06-30 08:36  pgregory

	* shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm2.cpp: * Apply a fix for
	  #2005026. The shader compiler assumes that an external DSO
	  shadeop will have a return, which is reasonable as it's not
	  currently possible to determine for sure at compile time. So if
	  the return isn't used, it will be 'drop'ped. The shader loading
	  code was assuming this wasn't the case, and injecting a drop if a
	  non void DSO was used where the return was ignored, this is no
	  longer necessary. Also, the SO_external VM shadeop was deleting
	  the return value if the DSO was a void function, this is no
	  longer valid, an external DSO must always push a result value,
	  which will be either used, or 'drop'ped by the compiler generated
	  drop shadeop.

2008-06-29 17:22  ltatkinson

	* distribution/linux/rpm/CMakeLists.txt,
	  distribution/linux/rpm/aqsis.spec.in.cmake: Revised Linux RPM
	  generation script (SPEC) to be more generic, still needs a few
	  small tweaks; comments inside file.

2008-06-29 11:02  ltatkinson

	* displays/piqsl/piqsl.cpp,
	  distribution/win/nsis/setup.nsi.in.cmake,
	  renderer/aqsis/aqsis.cpp, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  texturing/teqser/teqser.cpp: Made the following minor updates:
	  * Revised -h/-help page of all binaries for better consistency.
	  * Added DarkSim 'SimbiontRM' support to Windows installer (NSIS).

2008-06-28 23:05  pgregory

	* renderer/render/procedural.cpp, rib/ri2rib/output.cpp: * Another
	  fix for #1888251.
	  * Make sure CqProcedural doesn't try to call the split function
	  if it is null.
	  * Fix the ri2rib mapping name for RunProgram, was mistakenly
	  ReadProgram.

2008-06-28 22:18  pgregory

	* aqsistypes/file.cpp, aqsistypes/file.h,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/dsoshadeops.h: Generalised the code that
	  processes a searchpath list, so that it can be used by the DSO
	  shadeop code as well as the file opening code, hopefully will
	  address the issue in bug #2005018, untested yet on Win32.

2008-06-27 14:37  pgregory

	* renderer/render/procedural.cpp, rib/rib2/bdec.cpp,
	  rib/rib2/scanner.ll: Some more fixes to the handling of
	  termination conditions for RunProgram procedurals, highlighted by
	  trying to get Massive to work.
	  
	  * Now a single "\377" returned from a procedural will work.
	  * Handles various combinations of "\377" in and out of a comment.
	  * The only problem that we're aware of that is outstanding is the
	  case of "#\377" as the terminator, as the parser will look for a
	  "\n" to finish the comment, and stall waiting for one.

2008-06-26 13:38  c42f

	* displays/d_xpm/aspXpm.cpp, displays/d_xpm/xpm.cpp: More standard
	  header fixes for gcc-4.3

2008-06-26 09:59  pgregory

	* renderer/render/procedural.cpp, rib/rib2/bdec.cpp,
	  rib/rib2/parser.yy, rib/rib2/scanner.ll: * Apply some fixes to
	  the Windows implementation of RiProcRunProgram. The code wouldn't
	  work in the case where a procedural was called multiple times
	  with different values.
	  
	  - Still doesn't seem to work with the Massive run_program.exe,
	  but we're looking at that.

2008-06-25 22:42  pgregory

	* rib/ri2rib/ri.cpp: More fixes against bug #1888251. Now error
	  functions and procedurals are differentiated by simple side
	  effects. As these functions are never actually called, what
	  happens in them shouldn't matter.

2008-06-25 15:51  c42f

	* shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/vardef.h: Bugfix #1992808: Bad USES values
	  when compiling shaders using wildcard
	  
	  * This bug was due to the global standard variable name array
	  being used to
	  hold the usage count of the standard variables. The use counts of
	  the
	  standard variables weren't being reset after compiling each file.
	  The way we
	  deal with symbols in the parser seems to be rather a weakness...

2008-06-25 14:33  ltatkinson

	* tools/eqsl/eqsl.fl: Updated 'eqsl' so it defaults to the current
	  working directory when looking for files (before any selections
	  are made/remembered).

2008-06-24 23:39  ltatkinson

	* distribution/win/nsis/setup.nsi.in.cmake: Updated Windows
	  installer (NSIS) to include required MSVC runtime.

2008-06-24 23:29  c42f

	* shadercompiler/shaderexecenv/shaderexecenv.h: Fix some
	  "comparison between signed and unsigned integer expressions"
	  warnings
	  in the debug build at lines 710 and 725.
	  
	  I could have fixed these warnings using some static_cast()s, but
	  although the
	  indices m_diff* are logically positive, the odd properties of
	  unsigned types
	  make them less than ideal in most cases.

2008-06-24 14:40  c42f

	* CMakeLists.txt, cmake/modules/FindTinyXML.cmake,
	  displays/piqsl/CMakeLists.txt, thirdparty/tinyxml/CMakeLists.txt,
	  thirdparty/tinyxml/export.cmake, thirdparty/tinyxml/link.cmake,
	  thirdparty/tinyxml/local.cmake: Add facility to link to an
	  external version of the tinyxml library at request
	  of Fedora packager (Nicolas Chauvet)
	  
	  * Add option AQSIS_USE_EXTERNAL_TINYXML, defaulting to OFF. If
	  turned on,
	  requests that the build system look for an external version of
	  TinyXML.
	  * Create a FindTinyXML script to find the library
	  * Create thirdparty/tinyxml/link.cmake which automatically adds
	  the tinyxml lib
	  to the LINKLIBS variable, but only if we're using an external
	  version of the
	  lib.
	  * Modify thirdparty/tinyxml/local.cmake so that TINYXML_SRCS and
	  TINYXML_HDRS
	  are only set when we're using the internal tinyxml library.

2008-06-23 23:57  pgregory

	* rib/ri2rib/ri.cpp: Fix for bug #1888251, apply Chris' patch to
	  differentiate the placeholder filter functions, VC's optimiser
	  was identifying the various filters as identical and replacing
	  them all with a single instance of the function, meaning the code
	  that identifies the filter by it's function address was failing.

2008-06-23 13:30  c42f

	* renderer/ddmanager/ddmanager.cpp: Minor cleanup to fix a C-string
	  comparison warning pointed out by WHiTeRaBBiT
	  on the aqsis forum.
	  
	  This fixes an artifact introduced during the partial refactoring
	  of the
	  ddmanager during the SOC DSM work.

2008-06-23 13:12  c42f

	* shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/slparse/funcdef.cpp: Remove most remaining uses of
	  the SO_DuType and SO_DvType functions.
	  
	  * This refactor is designed to alleviate problems with du or dv
	  being equal to
	  zero by replacing the SO_DuType by diffU and SO_DvType by diffV
	  where
	  possible. This caused a previous problem with the surface
	  coordinates of
	  RiPolygons.
	  
	  * Some use of SO_DuType and SO_DvType remain in fenvironment2 and
	  cenvronment2,
	  but fixing these caused regressions indicating a bug in the
	  current code.
	  The matter is a bit subtle and requires more analysis so I've
	  deferred fixing
	  it until aqsistex replaces the current environment sampling code.
	  
	  * Introduce derivU and derivV functions to replace SO_D[uv]Type
	  by calling
	  through to diffU and diffV.
	  
	  * Remove many EnvVars dependencies for the derivative-related
	  shader functions.
	  Most were obsoleted by avoiding the usage of SO_D[uv]Type, while
	  a few were
	  unnecessary since USEing EnvVars_du implies USEing EnvVars_u for
	  eg.

2008-06-22 19:41  pgregory

	* renderer/render/bucket.h, renderer/render/imagebuffer.cpp: * Add
	  some additional output information when a primitive causes an
	  eyesplit failure.
	  * Added some extra logic to the comparison function used for
	  inserting primitives into the depth sorted list. It is entirely
	  possible for primitives being put into the list to not have a
	  cached raster bound, as primitives that cross the epsilon plane,
	  cannot have a raster bound calculated. The code now checks for
	  this, but should pass through with no penalty in the common case.

2008-06-22 14:49  c42f

	* CMakeLists.txt, displays/piqsl/CMakeLists.txt,
	  renderer/aqsis/CMakeLists.txt, rib/miqser/CMakeLists.txt,
	  shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  texturing/teqser/CMakeLists.txt, tools/eqsl/CMakeLists.txt: Fix
	  for linux packaging to allow safe removal of the install rpath
	  
	  We always need a build-time rpath (or LD_LIBRARY_PATH hack) to
	  enable aqsl to
	  compile the standard shaders at build time. This means that it's
	  not possible
	  to turn off the rpath entirely with CMAKE_SKIP_RPATHS.
	  Nevertheless, this is
	  desirable for linux packaging. It's relatively messy to set the
	  LD_LIBRARY_PATH in a system-independent way, so I opted for doing
	  things via
	  the build-time rpath.
	  
	  * Consolidate INSTALL_RPATH stuff into the main cmake file by
	  simply setting
	  the global variable CMAKE_INSTALL_RPATH.
	  * Introduce a new cache variable, AQSIS_USE_RPATH. Setting this
	  to OFF will
	  enable linux packagers to rely on the system linker path rather
	  than
	  compiled-in paths.
	  * Make sure that the CMAKE_SKIP_RPATHS variable isn't settable by
	  the user - it
	  will break the build.

2008-06-22 05:23  c42f

	* cmake/modules/FindBoost.cmake: Refactor FindBoost.cmake to
	  introduce two new cmake cache variables,
	  AQSIS_BOOST_LIB_SUFFIX and AQSIS_BOOST_LIB_PREFIX. These make it
	  easier to
	  override the boost library names when the automatic mechanism
	  doesn't find
	  them.

2008-06-21 22:05  pgregory

	* renderer/render/cubiccurves.cpp, renderer/render/imagebuffer.cpp,
	  renderer/render/linearcurves.cpp, renderer/render/nurbs.cpp,
	  renderer/render/patch.cpp, renderer/render/points.h,
	  renderer/render/quadrics.cpp, renderer/render/surface.cpp,
	  renderer/render/surface.h: * Change the code that checks for a
	  forced eyesplit, is more conservative and results now in better
	  handling of primitives that cross the eyeplane. Now only checks
	  that the min depth is behind the epsilon plane.

2008-06-21 06:58  c42f

	* aqsistypes/CMakeLists.txt, argparse/CMakeLists.txt,
	  cmake/platform/linux.cmake, cmake/platform/macosx.cmake,
	  cmake/platform/windows.cmake, displays/piqsl/CMakeLists.txt,
	  renderer/aqsis/CMakeLists.txt, renderer/render/CMakeLists.txt,
	  rib/miqser/CMakeLists.txt, rib/ri2rib/CMakeLists.txt,
	  shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  shadercompiler/shadervm/CMakeLists.txt,
	  shadercompiler/slxargs/CMakeLists.txt,
	  texturing/teqser/CMakeLists.txt, texturing/texlib/CMakeLists.txt,
	  thirdparty/pdiff/CMakeLists.txt, tools/eqsl/CMakeLists.txt:
	  Remove the RENDERENGINEDIR and STATICLIBDIR build variables,
	  since they're no longer necessary.
	  
	  * RENDERENGINEDIR: This was an artifact from the old scons build
	  system where
	  we needed a way of installing shared libs into different
	  locations depending
	  on platform, but couldn't use libdir since it was used for other
	  purposes.
	  The cmake INSTALL() command knows the difference between dll and
	  non-dll
	  platforms, so this is no longer necessary.
	  
	  * STATICLIBDIR: We no longer install any static libs, except on
	  windows where
	  people probably won't care about simply putting them in LIBDIR.

2008-06-21 05:16  c42f

	* CMakeLists.txt, aqsistypes/aqsis.h,
	  aqsistypes/posix/aqsis_compiler.h, argparse/CMakeLists.txt,
	  argparse/link.cmake, renderer/render/ri.cpp: Various fixes to
	  improve linux packaging (at request of fedora guys)
	  
	  * Incorporate a patch by Nicolas Chauvet (kwizart) which makes
	  aqsis link the
	  argument parsing library as a shared library on posix.
	  
	  * Rename the "argparse" library to "aqsisargparse" to avoid
	  possible name
	  ambiguity, since the argparse library will be installed into the
	  system lib
	  directory on linux. I needed to put libaqsisargparse.so into the
	  lib
	  directory since then the system linker then finds it by default.
	  It's
	  technically possible to place it elsewhere, but this appears to
	  break
	  conventions, and will be a pain for linux packagers.
	  
	  * Add a cmake option "AQSIS_MAIN_CONFIG_NAME" to allow the name
	  of aqsisrc to
	  be set to something else at build time if necessary. To
	  facilitate this I
	  needed to make the AQSIS_XSTR() macro avalible on all platforms
	  so I moved it
	  from posix/aqsis_compiler.h to aqsis.h. This seemed to be better
	  than
	  duplicating it or putting it in aqsis_types.h.

2008-06-19 19:55  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  distribution/linux/rpm/CMakeLists.txt,
	  distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake,
	  distribution/win/info.rc.in.cmake,
	  distribution/win/nsis/CMakeLists.txt,
	  distribution/win/nsis/setup.nsi.in.cmake, version.h.in.cmake:
	  Revised some Aqsis-specific CMake variables to be used
	  through-out the project, including the various package
	  scripts/templates.

2008-06-19 19:09  pgregory

	* interfaces/ilightsource.h, interfaces/ishaderexecenv.h,
	  renderer/render/imagers.cpp, renderer/render/lights.cpp,
	  renderer/render/lights.h, renderer/render/micropolygon.cpp,
	  renderer/render/micropolygon.h, renderer/render/points.h,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp: Fix for bug #1989897 -
	  Particle Problem
	  
	  There were various causes of the crash in this bug report, all
	  revolving around the shaderexecenv and the custom grid used for
	  points primitives. The relationship between the number shading
	  points and the number of micropolygons is different for points,
	  but the shaderexecenv was making some assumptions, when
	  calculating derivatives, about the structure of the grid.tex
	  
	  Applied fixes to the appropriate deriviative calculations to take
	  into accound if the grid comes from a points primitive.

2008-06-19 16:49  c42f

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/windows.cmake: Fix the problem with SYSCONFDIR and
	  DEFAULT_RC_PATH on linux.
	  * SYSCONFDIR is only relative to CMAKE_INSTALL_PREFIX when
	  SYSCONFDIR is not an
	  absolute path. This was overlooked previously and was causing
	  difficulties
	  when aqsis tried to find aqsisrc in DEFAULT_RC_PATH but
	  SYSCONFDIR was an
	  absolute path.
	  * Removed some other system-dependent defines from the main cmake
	  file into the
	  windows platform file.

2008-06-19 16:01  c42f

	* CMakeLists.txt, texturing/texlib/CMakeLists.txt: Make FLTK and
	  OpenEXR optional at build time by introducing AQSIS_USE_FLTK and
	  AQSIS_USE_OPENEXR cmake variables.
	  * This is slightly different behaviour from before - you can now
	  turn off
	  these libraries, even if they would otherwise be autodetected.
	  However, they
	  default to on, so the default behaviour should be the same as
	  before.
	  * Also fix a bug in the main CMakeLists.txt, introduced by change
	  2210 - the
	  version numbers were being set after they were needed inside
	  cmake/platform/linux.cmake

2008-06-19 15:08  c42f

	* cmake/platform/linux.cmake: Remove stripping of files for the
	  linux tgz package.

2008-06-19 14:38  c42f

	* CMakeLists.txt, cmake/macros.cmake, cmake/modules/FindJPEG.cmake:
	  Major refactoring of main CMakeLists.txt file - categorized all
	  commands into
	  sections and wrote/updated comments

2008-06-16 21:31  pgregory

	* shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h: Rollback changeset
	  #2200 as discussed during meeting 20080615.

2008-06-16 21:28  pgregory

	* shadercompiler/shaderexecenv/shadeops_math.cpp: Rollback
	  changeset #2202, as discussed durin the meeting 20080615.

2008-06-15 14:56  c42f

	* CMakeLists.txt: Make pdiff optional at build-time.
	  * This makes sense, since most users will not want to build and
	  install pdiff by
	  default - only developers will be interested in using it when
	  running the RTS.
	  * To select pdiff for bulding, view the advanced options, and set
	  the variable
	  USE_PDIFF to ON.

2008-06-14 09:44  ltatkinson

	* Doxyfile, README: Added missing BMP display driver to Doxyfile
	  (Doxygen).

2008-06-13 12:13  ltatkinson

	* displays/display/display.cpp, texturing/texlib/bake.cpp,
	  version.h.in.cmake: Revised comment/description string (tag) used
	  when generating TIFF files, to make the system more uniform;
	  "Aqsis Renderer".
	  
	  Would benefit from using global define as some sections still use
	  hardcoded strings (not ideal).

2008-06-13 11:09  ltatkinson

	* distribution/win/nsis/setup.nsi.in.cmake: Remove (over-looked)
	  'Plugin' searchpath instance from Windows installer package.

2008-06-12 16:22  ltatkinson

	* displays/piqsl/piqsl_ui.fl,
	  distribution/macosx/bundle/CMakeLists.txt: Two small updates...
	  - Updated OSX bundle (DMG) to include *all* display drivers.
	  - Revised image filetype support (chooser dialog) within piqsl.

2008-06-12 14:14  c42f

	* shadercompiler/shaderexecenv/shadeops_math.cpp: Cleanups to
	  revision 2200 to make it compile on linux
	  * The build was broken on linux because abs() is the integer
	  version. Replaced
	  with std::fabs.
	  * Use an anonomous namespace for local functions instead of
	  static keyword.
	  This is generally good practise, since it's a uniform method of
	  hiding not
	  only auxilary functions but classes etc. Yes, it looks a little
	  ugly; sorry
	  that's the fault of the C++ standard ;-)
	  * Remove some unneeded header files
	  * Rename the function log2 into logBase. log2 suggests the base-2
	  logarithm
	  which is very misleading.
	  * Make sure all math functions from cmath use the std::
	  qualifier. This makes
	  it clearer where they're coming from, particularly since we're
	  mixing them
	  with some of our own functions.

2008-06-12 12:52  joron

	* displays/d_xpm/CMakeLists.txt: d_xpm doesn't need tiff library
	  neither zlib ; simplified version of cmakelists.txt is possible

2008-06-12 12:42  joron

	* shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h: Simplify the math
	  operations to reduce the amount of the cut&paste
	  I add few helpers functions in shaderexecenv.h to help to
	  code/speed when
	  we implement math operations shadeops.
	  Basically the idea some function will know when a varying or
	  uniform parameter is passed to it and later it will take the
	  shorter way to fill the result... along the way it will only call
	  the function/routine with the minimum possible way... eg if you
	  send sqrt() to uniform variable the result will call only once
	  the sqrt() and assign other it will call on all the varying
	  paramter. one, two, three parameters are supported.

2008-06-12 12:37  joron

	* CMakeLists.txt: Add support for both d_xpm, pdiff

2008-06-12 12:33  joron

	* thirdparty/pdiff/CMakeLists.txt: Adjust the cmakelist to be able
	  to build it.

2008-06-12 12:32  joron

	* displays/d_xpm/CMakeLists.txt: Add the CmakeLists.txt for
	  building the d_xpm display driver.

2008-06-10 09:45  ltatkinson

	* aqsisrc.in.cmake, displays/display/display.cpp: Renamed all
	  instances of 'oldframebuffer' to 'legacyframebuffer' for clarity.

2008-06-09 12:36  c42f

	* displays/piqsl/piqsldisplay.cpp: Make sure the ack document is
	  deleted to avoid a (very minor) memory leak

2008-06-09 11:47  ltatkinson

	* CMakeLists.txt, aqsisrc.in.cmake: Removed (now redundant)
	  PLUGIN_PATH entries from 'aqsisrc' file, further to the previous
	  'Plugin Removal' commit.

2008-06-09 10:31  c42f

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake, cmake/platform/windows.cmake,
	  renderer/aqsis/aqsis.cpp, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/converter.cpp,
	  renderer/render/converter.h, renderer/render/ri.cpp,
	  renderer/render/texturemap_old.cpp,
	  renderer/render/texturemap_old.h, rib/rib2/librib.cpp: Remove all
	  mention of the now-deprecated plugin path handling, including
	  AQSIS_PLUGIN_PATH, "searchpath" "plugin", and DEFAULT_PLUGIN_PATH
	  * "searchpath" "plugin" was only set, never used. Therefore the
	  different ways
	  of setting it were removed: 1) from the aqsis command line, 2)
	  from the
	  environment variable AQSIS_PLUGIN_PATH.
	  * DEFAULT_PLUGIN_PATH was only in use in two places; one was the
	  old texturemap
	  class in CqTextureMap::Convert() which was no longer used (now
	  removed). The
	  other was for finding dynamic blob objects (DBOs). The DBO search
	  path has
	  now been set equal to the procedural searchpath instead, in
	  agreement with
	  the AIR renderer from which we inherited the DBO stuff. This is
	  also much
	  more flexible.
	  * Removed the CqConverter class - it was used only by
	  CqTextureMap::Convert()
	  which no longer exists as of this commit.
	  * Rename some member variables of CqBlobby to use the standard m_
	  naming
	  convention.

2008-06-09 00:24  c42f

	* displays/d_sdcWin32/interface.c, displays/piqsl/displayhelpers.c,
	  thirdparty/aqiv/getopt.c, thirdparty/aqiv/iv.c,
	  thirdparty/aqiv/sgigt.c, thirdparty/dbo_plane/dbo_plane.c,
	  thirdparty/maketextures/maketextures.c: Add "svn:eol-style
	  native" property to remaining source files from which it was
	  forgotten.
	  * This should fix kwizart's first linux packaging problem.

2008-06-08 23:34  c42f

	* AUTHORS, README, ReleaseNotes: Small updates to the README file
	  etc for Aqsis-1.4
	  * Update ReleaseNotes for Aqsis-1.4. Probably needs more work.
	  * Added my contribution to Aqsis-1.4 to the AUTHORS file.

2008-06-08 13:53  c42f

	* renderer/render/ri.cpp: * Fix a std::exception (or possible crash
	  on other platforms?) which occurs
	  whenever environment variable substitution is invoked, but the
	  requested
	  variable is not found. In that case getenv() returns NULL, which
	  is an
	  invalid pointer to construct a std::string from.

2008-06-08 09:58  pgregory

	* aqsistypes/win32/socket_system.cpp, displays/piqsl/piqsl.cpp,
	  displays/piqsl/piqsldisplay.cpp: Fix for bug #1978293 "piqsl
	  skips last buckets".
	  * Added an acknowledge requirement to the close message, so that
	  DspyImageClose won't return (and subsequently allow aqsis to
	  exit) until piqsl has acknowledged receipt of the close message.
	  * Added error message reporting to the recvData function of the
	  CqSocket implementation to report the proper error message when a
	  recv call fails. (Only implemented on Windows thus far).

2008-06-07 13:17  c42f

	* shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/slparse/funcdef.cpp: * Fix a bug reported by
	  Michel Joron on svn which was causing a crash when
	  rendering the smoky.rib test scene.
	  * The bug was exposed (but not created) by the new method for
	  calculating du
	  and dv, introduced in svn revision 2178. Because RiPolygons have
	  unnatural
	  (u,v) surface coordinates, u and v don't vary directly along the
	  primary grid
	  directions as is the usual case. This means that the Du() and
	  Dv() functions
	  are broken for RiPolygons (and, in fact have never worked). I
	  will submit a
	  bug report about this behaviour.
	  * The bug was due to the area() function returning 0 in the
	  shader, with
	  subsequent indexing of a spline with a 0/0 == NaN, causing a
	  crash. I've
	  fixed the area function to use a more robust and efficient method
	  for
	  calculating the area, not based on using du and dv at all.

2008-06-07 10:06  c42f

	* displays/piqsl/image.cpp, displays/piqsl/piqsl.cpp: * Fix piqsl
	  crash on book save when image names included directories.
	  * Rearrange fix committed in previous change (r2181) for clarity

2008-06-07 09:21  c42f

	* displays/piqsl/piqsl.cpp: * Fix a bug which caused piqsl to crash
	  on startup if another instance was
	  already bound to the piqsl port.

2008-06-02 15:38  c42f

	* renderer/render/micropolygon.cpp: Bugfix #1829764: shader
	  variables du,dv have wrong value
	  The bug was due to du and dv being set to 1 by default. This is
	  just wrong;
	  they should really be the increments in u and v across the grid,
	  otherwise the
	  normalization of dPdu etc. will come out completely wrong.
	  * Modify du and dv to be just the first differences of u and v on
	  the grid; the
	  code assumes du and dv are effectively uniform (this was checked
	  and is
	  currently a good assumption).
	  * Much refactoring to CqMicropolygon::Shade() to increase code
	  clarity.
	  * Removed code using the "render", "spline" option to set du &
	  dv. The new
	  code effectively uses (a more efficient version of) that code by
	  default.

2008-05-31 07:34  c42f

	* aqsistypes/ri_types.h, aqsistypes/riparamlist.h, rib/api/ri.h,
	  texturing/texlib/maketexture.h: Remove some redundent typedefs
	  now that we have ri_types.h available for inclusion.
	  Also move a forgotten typedef from ri.h into ri_types.h

2008-05-28 22:12  pgregory

	* renderer/render/procedural.cpp, renderer/render/procedural.h:
	  Move the definition of the RiProcDelayedReadArchive,
	  RiProcDynamicLoad, RiProcFree and RiProcRunProgram functions out
	  of the Aqsis namespace so they get exported properly. Should help
	  to fix bug #1883900.

2008-05-27 12:27  c42f

	* displays/piqsl/piqsl.cpp: Tweak piqsl usage text to reflect the
	  fact that it can open more than just TIFF files.

2008-05-27 12:19  c42f

	* displays/piqsl/piqsl.cpp: Add -h option to piqsl for uniformity
	  with the other Aqsis tools.

2008-05-26 23:50  c42f

	* displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h: *
	  Update key shortcuts to make them more logical. keypad +/- now
	  zooms, CTRL +
	  keypad +/- now changes image levels. The mouse scrollwheel can
	  now be used
	  for the both these things as well.
	  * Work around zooming problem which enabled piqsl to use an
	  unlimited amount of memory
	  This is a simple workaround - it just put a cap on the toatal
	  number of
	  pixels in the zoomed image. A proper fix for this problem is to
	  have an
	  image widget which generates the visible part of the zoomed image
	  on the
	  fly...

2008-05-26 11:48  c42f

	* distribution/win/nsis/setup.nsi.in.cmake: Make sure the
	  win32-specific headers for aqsistypes are installed.
	  This oversight became apparent when fixing bug #1888255 since
	  ri.h now depends
	  on aqsis_compiler.h.

2008-05-24 14:07  c42f

	* rib/ri2rib/ascii.cpp, rib/ri2rib/ascii.h, rib/ri2rib/binary.cpp,
	  rib/ri2rib/binary.h, rib/ri2rib/output.cpp, rib/ri2rib/output.h:
	  Bugfix 1888255: "Standard basis symbols missing from ri2rib on
	  Windows"
	  (The core of this bug was fixed in revision 2159.)
	  * Updated ri2rib such that the standard bases are recognized and
	  printed as
	  strings rather than arrays for RiBasis.
	  * Some const-correctness fixes to facilitate the changes.

2008-05-23 16:01  c42f

	* aqsistypes/posix/aqsis_compiler.h, aqsistypes/ri_types.h,
	  aqsistypes/win32/aqsis_compiler.h,
	  renderer/ddmanager/export.cmake, renderer/ddmanager/ndspy.h,
	  rib/api/ri.h, shadercompiler/shadervm/shadeop.h,
	  shadercompiler/slxargs/slx.h: Use the aqsis compiler and
	  system-detection machinary for C API headers.
	  * slx.h, shadeop.h, ndspy.h and ri.h were updated to depend on
	  aqsis_compiler.h. This means that our system and
	  compiler-dependent stuff
	  can be done in a single location.
	  * Move RI_SHARE and SLXARGS_SHARE into aqsis_compiler.h
	  * Consolidate win32 dllexport macros for ndspy.h and shadeop.h
	  * Move typedefs out of ri.h and into a new file,
	  aqsistypes/ri_types.h. This
	  will remove the need to redundently redefine the standard RI
	  types in various
	  places outside of the core lib which have no access to ri.h.
	  * Various small cleanups to header files for uniformity and
	  readability.

2008-05-23 13:58  c42f

	* ChangeLog.txt, aqsistypes/aqsismath.h,
	  aqsistypes/aqsismath_test.cpp, aqsistypes/cellnoise_test.cpp,
	  aqsistypes/color_test.cpp, aqsistypes/exception.cpp,
	  aqsistypes/execute.h, aqsistypes/matrix2d.h,
	  aqsistypes/matrix2d_test.cpp, aqsistypes/matrix_test.cpp,
	  aqsistypes/memorysentry.cpp, aqsistypes/memorysentry.h,
	  aqsistypes/multitimer.cpp, aqsistypes/multitimer.h,
	  aqsistypes/noise1234_test.cpp, aqsistypes/noise_test.cpp,
	  aqsistypes/posix/execute_system.cpp,
	  aqsistypes/posix/multitimer_system.cpp,
	  aqsistypes/posix/multitimer_system.h,
	  aqsistypes/posix/socket_system.cpp,
	  aqsistypes/posix/socket_system.h, aqsistypes/riparamlist.cpp,
	  aqsistypes/riparamlist.h, aqsistypes/smartptr.h,
	  aqsistypes/socket.h, aqsistypes/spline_test.cpp,
	  aqsistypes/vector2d_test.cpp, aqsistypes/vector3d_test.cpp,
	  aqsistypes/vector4d_test.cpp,
	  aqsistypes/win32/execute_system.cpp,
	  aqsistypes/win32/multitimer_system.cpp,
	  aqsistypes/win32/multitimer_system.h,
	  aqsistypes/win32/socket_system.cpp,
	  aqsistypes/win32/socket_system.h, coding_standard/codestyle.cpp,
	  coding_standard/codestyle.h,
	  content/ribs/scenes/sci_volumes/README.txt,
	  content/ribs/scenes/sci_volumes/src/array3d.h,
	  content/ribs/scenes/sci_volumes/src/sample_vol_shadeops.cpp,
	  content/ribs/scenes/sci_volumes/src/volumesampler.cpp,
	  content/ribs/scenes/sci_volumes/src/volumesampler.h,
	  displays/d_sdcBMP/ReadMe.txt, displays/d_sdcBMP/d_sdcBMP.cpp,
	  displays/d_sdcWin32/ReadMe.txt,
	  displays/d_sdcWin32/d_sdcWin32.cpp,
	  displays/d_sdcWin32/d_sdcWin32.h, displays/piqsl/book.cpp,
	  displays/piqsl/book.h, displays/piqsl/bookbrowser.cpp,
	  displays/piqsl/bookbrowser.h,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/displayserverimage.h,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/piqsl.cpp, displays/piqsl/piqsl.h,
	  displays/piqsl/piqslbase.cpp, displays/piqsl/piqslbase.h,
	  displays/piqsl/piqsldisplay.cpp, distribution/linux/aqsis.xml,
	  distribution/linux/rpm/CMakeLists.txt,
	  distribution/macosx/bundle/CMakeLists.txt,
	  distribution/win/nsis/CMakeLists.txt, interfaces/ibound.h,
	  interfaces/ioptions.h, interfaces/iparameter.h,
	  renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/bunny.cpp, renderer/render/bunny.h,
	  renderer/render/cubiccurves.cpp, renderer/render/filters.cpp,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h,
	  renderer/render/linearcurves.cpp, renderer/render/lookuptable.h,
	  renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h, renderer/render/ri_debug.h,
	  rib/miqser/CMakeLists.txt, rib/miqser/miqser.cpp,
	  rib/rib2/rib2_common.h,
	  shadercompiler/codegenvm/codegengraphviz.cpp,
	  shadercompiler/codegenvm/codegengraphviz.h,
	  shadercompiler/codegenvm/parsetreeviz.cpp,
	  shadercompiler/codegenvm/parsetreeviz.h,
	  shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shadervm/shadeopmacros.h,
	  shadercompiler/shadervm/shadervm_common.h,
	  texturing/texlib/CMakeLists.txt, texturing/texlib/bake.cpp,
	  texturing/texlib/bake.h, texturing/texlib/cachedfilter.cpp,
	  texturing/texlib/cachedfilter.h,
	  texturing/texlib/channelinfo.cpp, texturing/texlib/channelinfo.h,
	  texturing/texlib/channellist.cpp, texturing/texlib/channellist.h,
	  texturing/texlib/channellist_test.cpp,
	  texturing/texlib/dummyshadowsampler.h,
	  texturing/texlib/dummytexturesampler.cpp,
	  texturing/texlib/dummytexturesampler.h,
	  texturing/texlib/ewafilter.cpp, texturing/texlib/ewafilter.h,
	  texturing/texlib/exrinputfile.cpp,
	  texturing/texlib/exrinputfile.h,
	  texturing/texlib/filtersupport.h,
	  texturing/texlib/filtertexture.h,
	  texturing/texlib/iimagechannel.h,
	  texturing/texlib/imagechannel.cpp,
	  texturing/texlib/imagechannel.h,
	  texturing/texlib/imagechannel_test.cpp,
	  texturing/texlib/imagefiletype.h,
	  texturing/texlib/ishadowsampler.cpp,
	  texturing/texlib/ishadowsampler.h,
	  texturing/texlib/itexinputfile.cpp,
	  texturing/texlib/itexinputfile.h,
	  texturing/texlib/itexoutputfile.cpp,
	  texturing/texlib/itexoutputfile.h,
	  texturing/texlib/itexturesampler.cpp,
	  texturing/texlib/itexturesampler.h,
	  texturing/texlib/itiledtexinputfile.cpp,
	  texturing/texlib/itiledtexinputfile.h,
	  texturing/texlib/magicnumber.cpp, texturing/texlib/magicnumber.h,
	  texturing/texlib/magicnumber_test.cpp,
	  texturing/texlib/maketexture.cpp, texturing/texlib/maketexture.h,
	  texturing/texlib/mipmap.h, texturing/texlib/mipmaplevelcache.h,
	  texturing/texlib/mipmaptexturesampler.h,
	  texturing/texlib/mixedimagebuffer.cpp,
	  texturing/texlib/mixedimagebuffer.h,
	  texturing/texlib/mixedimagebuffer_test.cpp,
	  texturing/texlib/randomtable.cpp, texturing/texlib/randomtable.h,
	  texturing/texlib/sampleaccum.h, texturing/texlib/samplequad.cpp,
	  texturing/texlib/samplequad.h,
	  texturing/texlib/samplequad_test.cpp,
	  texturing/texlib/samplevector.h,
	  texturing/texlib/shadowsampler.cpp,
	  texturing/texlib/shadowsampler.h,
	  texturing/texlib/texexception.h,
	  texturing/texlib/texfileattributes.h,
	  texturing/texlib/texfileheader.cpp,
	  texturing/texlib/texfileheader.h,
	  texturing/texlib/texfileheader_test.cpp,
	  texturing/texlib/texturebuffer.h,
	  texturing/texlib/texturecache.cpp,
	  texturing/texlib/texturecache.h,
	  texturing/texlib/texturesampleoptions.cpp,
	  texturing/texlib/texturesampleoptions.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h,
	  texturing/texlib/tiffdirhandle_test.cpp,
	  texturing/texlib/tifffile_test.h,
	  texturing/texlib/tiffinputfile.cpp,
	  texturing/texlib/tiffinputfile.h,
	  texturing/texlib/tiffinputfile_test.cpp,
	  texturing/texlib/tiffoutputfile.cpp,
	  texturing/texlib/tiffoutputfile.h,
	  texturing/texlib/tifftest_examples.cpp,
	  texturing/texlib/tilearray.h,
	  texturing/texlib/tiledanyinputfile.cpp,
	  texturing/texlib/tiledanyinputfile.h,
	  texturing/texlib/tiledtiffinputfile.cpp,
	  texturing/texlib/tiledtiffinputfile.h,
	  texturing/texlib/wrapmode.h, thirdparty/aqiv/sgigt.h,
	  thirdparty/dbo_plane/ScottI.txt, thirdparty/dbo_plane/implicit.h,
	  thirdparty/pdiff/CompareArgs.cpp, thirdparty/pdiff/CompareArgs.h,
	  thirdparty/pdiff/LPyramid.cpp, thirdparty/pdiff/LPyramid.h,
	  thirdparty/pdiff/Metric.cpp, thirdparty/pdiff/Metric.h,
	  thirdparty/pdiff/PerceptualDiff.cpp, thirdparty/pdiff/README.txt,
	  thirdparty/pdiff/RGBAImage.cpp, thirdparty/pdiff/RGBAImage.h,
	  thirdparty/pdiff/gpl.txt, tools/AqsisConfig/CMakeLists.txt,
	  tools/eqsl/CMakeLists.txt: Update many files with the
	  svn:eol-style "native" property.
	  * Having this property set means that the files will be checked
	  out using the
	  native line-endings characters of the appropriate platform.

2008-05-23 13:21  c42f

	* CMakeLists.txt, aqsistypes/noise1234.cpp, aqsistypes/noise1234.h,
	  aqsistypes/pool.h, argparse/CMakeLists.txt,
	  content/ribs/features/blobby/air/blobplane.rib,
	  content/ribs/scenes/microbe/microbe.rib,
	  displays/d_exr/dspyhlpr.c, displays/d_exr/dspyhlpr.h,
	  displays/d_sdcBMP/ReadMe.txt, displays/d_sdcBMP/d_sdcBMP.cpp,
	  displays/d_sdcBMP/d_sdcBMP.dsp, renderer/render/CMakeLists.txt,
	  rib/api/CMakeLists.txt, rib/api/apidebug.xsl, rib/rib2/parser.yy,
	  rib/rib2/scanner.ll, shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll,
	  thirdparty/dbo_plane/dbo_plane.c,
	  thirdparty/dbo_plane/implicit.h, thirdparty/pdiff/LPyramid.cpp,
	  thirdparty/pdiff/LPyramid.h, tools/AqsisConfig/CMakeLists.txt,
	  version.h.in.cmake: Remove incorrectly attached svn:executable
	  property from a bunch of source files.

2008-05-22 12:57  c42f

	* renderer/render/ri.cpp, rib/rib2/librib.h, rib/rib2/parser.yy,
	  rib/rib2/scanner.ll, rib/rib2ri/librib2ri.cpp,
	  rib/rib2ri/librib2ri.h: Bugfix #1883032: ClippingPlane is not
	  recognized by Aqsis
	  This bug was simply due to an oversight in the RIB parser -
	  ClippingPlane
	  wasn't recognized as a valid token.
	  * Implemented ClippingPlane in the RIB parser and interface.
	  * Modified the RiClippingPlane call to produce an "unimplemented
	  feature"
	  warning

2008-05-21 10:59  ltatkinson

	* README, rib/ri2rib/COPYING_LGPL: Correct licensing info for
	  'libri2rib' as it is different to the main toolsuite (LGPL rather
	  than GPL).

2008-05-20 14:14  pgregory

	* aqsistypes/CMakeLists.txt, renderer/render/CMakeLists.txt,
	  rib/ri2rib/CMakeLists.txt,
	  shadercompiler/shadervm/CMakeLists.txt,
	  shadercompiler/slxargs/CMakeLists.txt,
	  texturing/texlib/CMakeLists.txt: Switch the order of VERSION and
	  SOVERSION target properties, as we were using them in the wrong
	  way.

2008-05-18 15:05  c42f

	* renderer/render/cubiccurves.cpp, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/linearcurves.cpp: Merge
	  CqCubicSplineGroup::Transform() and
	  CqLinearSplineGroup::Transform()
	  since they can share a common algorithm. The algorithm is a
	  translation of the
	  rather convoluted original version into something much simpler,
	  slightly more
	  correct, and applicable to both curve group types. Note that the
	  new algorithm
	  is still not completely correct, but is an improvment and
	  simplification.

2008-05-18 14:10  c42f

	* renderer/render/cubiccurves.cpp, renderer/render/curves.h,
	  renderer/render/ri.cpp: Bugfix #1102597, #1851789, #1851795.
	  These bugs were all semi-related
	  - it made sense to fix them together.
	  
	  #1851795 Power basis curves don't render correctly
	  * The cause of this bug was twofold:
	  1) We have to transform into the bezier basis immediately before
	  performing
	  arbitrary affine transformations. Translating the control points
	  of a power
	  basis spline in the same way you'd translate bezier control
	  points is
	  invalid! A special property of most of the standard bases (the
	  first three
	  rows of the basis matrix sum to 0) meant that this wasn't visible
	  except in
	  the power basis case, and probably also in the Hermite basis.
	  2) Homogeneous coordinates were being incorrectly transformed in
	  the basis
	  transformation ("P" is always stored in homog. coords.). The same
	  special
	  property mentioned above again meant that this wasn't visible in
	  the
	  most commonly used bases.
	  
	  #1851789 Curves with homogeneous coordinates don't render
	  properly
	  * See point 2 above.
	  
	  #1851795 Vertex variables on curves are not correctly
	  interpolated
	  * Only the position variable "P" was previously a candidate for
	  spline basis
	  transformations. All "vertex" class variables now undergo the
	  basis change.
	  
	  Main changes:
	  * All variables of type "vertex" are now immediately converted to
	  the bezier
	  basis when CqCubicCurvesGroup::AddPrimitiveVariable() is called.
	  This
	  changes a number of things significantly, so the bounding,
	  splitting and
	  transformation functions needed significant rewriting. These
	  should now be
	  somewhat faster as well as more correct.
	  * Make sure that ProcessPrimitiveVariables() fully constructs all
	  primitive
	  variables before passing them into
	  CqSurface::AddPrimitiveVarible()

2008-05-17 00:52  c42f

	* interfaces/ishader.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/shaders.h,
	  shadercompiler/shadervm/shadeopmacros.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp: * Make sure that the
	  shaderVM checks the compiled shader version in
	  LoadProgram(), and throws an error if the version doesn't match
	  the current
	  aqsis executable. This will be important for the upcoming release
	  because
	  several things have changed in the shader stack code and USES
	  variable.
	  Changes to the USES variable can cause random crashes if not
	  detected.
	  * Refactor error handling in LoadProgram() so that the render
	  continues on
	  error - an XqBadShader exception is thrown and caught instead of
	  calling
	  exit(1)
	  * Remove many macros from shadervm.h and into shadeopmacros.h
	  (for the more
	  general ones) or to just before the location at which they're
	  used
	  (SPLINE* and TEXTURE* were put into shadervm2.cpp)
	  * Modify IqShader::Clone to return a boost::shared_ptr instead of
	  a raw
	  unmanaged pointer to the cloned shader.
	  * Minor cleanups to ri.cpp and renderer.cpp to remove dead code.

2008-05-17 00:41  c42f

	* renderer/render/CMakeLists.txt: * Set the aqsislib cmake target
	  output name to "aqsis" so that we revert back to
	  the old naming for the core renderer lib (libaqsis.so on linux).

2008-05-15 23:57  c42f

	* shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp: Bugfix #1734817. "Error in
	  the compilation of the conditional operator"
	  This bug was mostly due to an error in the shaderVM code
	  generator for
	  conditional expressions, (cond ? true_stmt : false_stmt), which
	  didn't
	  correctly set the running state while evaluating true_stmt and
	  false_stmt -
	  this part was fixed in revision 2123.
	  * Add tests for whether the state is currently running to all
	  shaderVM
	  shadeops. This means that while a shader is not running, stack
	  management is
	  still performed but the shadeops don't try to manipulate the
	  shader data at
	  all. This fixes the original bug test case.
	  * Add an m_isRunning variable to CqShaderExecEnv so that
	  m_runningState.Count()
	  isn't called repeatedly for every single shadeop.
	  * Minor cleanups to the CqShaderExecEnv constructor.
	  * Fix a somewhat unrelated bug which cropped up during testing -
	  SO_JNZ as used
	  by the code generator wasn't acting precisely as expected. This
	  resulted in
	  the else clause of some if() conditionals being run even when no
	  SIMD
	  elements were currently running. The fix involved replacing both
	  occurances
	  of the shadop pair RS_JNZ,RS_INVERSE in the code generator with
	  the pair
	  RS_INVERSE,RS_JZ. The shadeops SO_RS_JNZ and SO_S_JNZ were
	  removed as being
	  unneeded and potentially misleading.

2008-05-13 15:23  c42f

	* texturing/texlib/tiffdirhandle.cpp: gcc-4.3 fixes. Remove static
	  storage class in favour of using anonymous namespaces

2008-05-13 14:32  c42f

	* aqsistypes/posix/execute_system.cpp, texturing/texlib/bake.cpp:
	  Fix more gcc-4.3 compiler warnings and errors.
	  * Remove the unnecessary use of strcpy() in bake.cpp
	  * Make sure we check for errors codes from fgets() and chdir()
	  * Cleanup posix/execute_system.cpp to remove commented out
	  windows-specific stuff.

2008-05-13 12:11  c42f

	* aqsistypes/vector2d.h: Minor change to #includes to make sure
	  gcc-4.3 is happy.
	  - The standard headers in gcc-4.3 have been aggressivly optimized
	  in terms of
	  removing nonstandard #includes - this is the reason for the
	  error.

2008-05-12 15:14  c42f

	* shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shadervm/shadervm1.cpp: First stage of bugfix
	  #1734817:
	  * Make sure that running states are used when evaluating the true
	  and false
	  parts of the conditional expression statement. This avoids most
	  problems
	  with code in one of the branches being executed with side effects
	  when it
	  should not be. However, it doesn't fix the original bug report!
	  * Reorder the expected order of stack arguments to SO_merge*.
	  This greatly
	  simplifies the necessary code, and the conditional expression is
	  the only
	  place SO_merge* is used in any case.

2008-05-12 15:05  c42f

	* aqsistypes/bitvector.cpp, aqsistypes/bitvector.h,
	  interfaces/ishaderexecenv.h,
	  shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervm1.cpp: * Make CqBitVector
	  const-correct (refactor in preparation for bufix 1734817)
	  This change means we can be sure that the bitvector obtained from
	  CqShaderExecEnv::RunningState() isn't used to modify the running
	  state
	  indirectly. This would allow us to cache some properties of the
	  running
	  state if necessary.
	  * Make CqShaderExecEnv::RunningState() const-correct; lots of
	  corresponding
	  trivial changes to the shaderexecenv and shaderVM.
	  * Introduce IqShaderExecEnv::IsRunning() which at the moment is
	  equivilant to
	  computing CqShaderExecEnv::RunningState().Count() != 0 but may be
	  cached in
	  future.
	  * Indenting cleanups to CqShaderExecEnv::SO_pmix and
	  CqShaderExecEnv::SO_vmix.
	  * Cache running state in SO_jz and SO_jnz to avoid calling the
	  virtual function
	  RunningState() quite so often.

2008-05-12 10:31  minty

	* shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/slparse/libslparse.cpp: Partial fix for multiple
	  file compilation.
	  The USES value is still incorrect.

2008-05-12 00:20  ltatkinson

	* cmake/platform/linux.cmake: Revised naming convention used when
	  generating source tarballs, to be more consistent with Linux.

2008-05-11 11:47  c42f

	* renderer/render/lath.h, renderer/render/subdivision2.cpp: Bugfix
	  #1896870: discontinuous facevertex variables on SDS were rendered
	  incorrectly. This was mostly fixed a while ago, but comparisons
	  with 3delight
	  showed different behaviour. After further investigation, it's not
	  obvious how
	  to obtain the 3delight behaviour, and ours looks better anyway.
	  * Tweak the discontinuity test used for edges when performing
	  subdivision. The
	  new version is somewhat faster.
	  * Add some more extensive documentation on the use of CqLath to
	  represent the
	  topological structure of a mesh.

2008-05-11 01:59  c42f

	* texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffinputfile.cpp: Bugfix #1673833: Implement
	  generic RGBA TIFF reading for unusual TIFF formats
	  (eg, planar tiffs). This should allow aqsis to read nearly any
	  TIFF format; it
	  will produce a warning if it has to fall back to the generic
	  code.

2008-05-09 10:58  ltatkinson

	* distribution/linux/rpm/aqsis-Fedora_8.spec.in.cmake: Corrected
	  some entries within the Linux SPEC (RPM) file.

2008-05-09 00:16  c42f

	* aqsistypes/random.cpp, aqsistypes/smartptr.h: * Fix a bug in
	  CqRandom::RandomInt(Range) which caused numbers
	  0 <= N <= Range to be generated with the endpoints having lower
	  probability.
	  The intention of the function (according to the documentation) is
	  for a
	  uniform distribution on the range 0 <= N < Range.
	  * Minor changes to some naming in smartptr.h

2008-05-08 15:16  c42f

	* texturing/texlib/shadowsampler.cpp,
	  texturing/texlib/texturebuffer.h, texturing/texlib/tilearray.h:
	  Reimplement stochastic filtering for tiled textures
	  * Created a tiled stochastic support iterator. The support
	  iterator chosen
	  appears to be significantly faster than a naive approach based on
	  direct
	  indexing of the array; with direct indexing, the relevant tile
	  has to be
	  recomputed each time.
	  * Re-enable the use of a stochastic support in the shadow
	  sampler.

2008-05-08 10:18  pgregory

	* tools/eqsl/eqsl.fl: Another blind fix to the MacOSX issues.

2008-05-08 08:40  pgregory

	* tools/eqsl/eqsl.fl: Temporary fix to the eqsl stuff under MacOSX,
	  just to get it building again. Needs attention asap.

2008-05-07 23:34  pgregory

	* tools/eqsl/eqsl.fl: Temporary fix to the eqsl stuff under MacOSX,
	  just to get it building again. Needs attention asap.

2008-05-07 22:09  pgregory

	* distribution/win/info.rc.in.cmake,
	  renderer/render/imagebuffer.cpp: Revert #2092, as it seems to be
	  breaking the cropwindow support, will look into it after 1.4.
	  Fix the format of the Win32 versioninfo rc file, follow the
	  guidelines from the MSDN page descriging it's use at
	  http://msdn.microsoft.com/en-us/library/aa381058.aspx

2008-05-07 14:39  c42f

	* texturing/texlib/filtertexture.h,
	  texturing/texlib/texturebuffer.h, texturing/texlib/tilearray.h: *
	  Introduce an extra layer of typedefs for iterator types
	  * Templatize CqTextureTile::CqIterator to allow it to wrap any
	  iterator type
	  (for our purposes, both normal and stochastic iterators).

2008-05-07 13:44  pgregory

	* CMakeLists.txt, aqsistypes/posix/aqsis_compiler.h,
	  renderer/render/blobby.cpp, renderer/render/ri.cpp,
	  renderer/render/texturemap_old.cpp,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  shadercompiler/aqsltell/aqsltell.cpp: Modify the passing of
	  default paths under Posix builds. Apparently XCode on the Mac
	  complains at our escaping, so now we have explicit stringizing
	  macros for this purpose, see aqsistypes/posix/aqsis_compiler.h.

2008-05-07 10:08  ltatkinson

	* distribution/linux/rpm/CMakeLists.txt: Forgot to include new
	  'CMakeLists.txt' file further to my previous 'specpakage' commit.

2008-05-07 10:06  ltatkinson

	* CMakeLists.txt, distribution/linux/rpm/aqsis-Fedora_8.spec,
	  distribution/linux/rpm/aqsis-Fedora_8.spec.in.cmake,
	  distribution/win/info.rc.in.cmake,
	  distribution/win/nsis/setup.nsi.in.cmake: Added SVN revision info
	  to Windows DLLs/EXEs and created new CMake target for generating
	  Linux SPEC (RPM) files: 'specpackage'

2008-05-06 23:27  ltatkinson

	* CMakeLists.txt, aqsistypes/CMakeLists.txt,
	  argparse/CMakeLists.txt, cmake/platform/windows.cmake,
	  displays/d_exr/CMakeLists.txt, displays/d_sdcBMP/CMakeLists.txt,
	  displays/display/CMakeLists.txt, displays/piqsl/CMakeLists.txt,
	  distribution/win/application.ico,
	  distribution/win/application.rc.in.cmake,
	  distribution/win/icon.rc.in.cmake,
	  distribution/win/info.rc.in.cmake, distribution/win/mime.ico,
	  renderer/aqsis/CMakeLists.txt, renderer/render/CMakeLists.txt,
	  rib/miqser/CMakeLists.txt, rib/ri2rib/CMakeLists.txt,
	  shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  shadercompiler/shadervm/CMakeLists.txt,
	  shadercompiler/slxargs/CMakeLists.txt,
	  texturing/teqser/CMakeLists.txt, texturing/texlib/CMakeLists.txt,
	  tools/eqsl/CMakeLists.txt: Corrected previous efforts in
	  embedding resource files under the Windows platform, now all DLLs
	  and EXEs additionally contain version information (feature
	  request 1353215).

2008-05-06 16:01  c42f

	* texturing/texlib/tilearray.h: * Rearrange
	  CqTileArray<T>::CqIterator::operator++() to encourage the gcc-4.1
	  optimizer to inline it. This simply involved taking out the
	  rarely-used
	  parts of the function and putting them into a separate function,
	  nextTile().
	  This improves the performance *significantly*. Performance is now
	  much more
	  comparable to the previous non-tiled implementation.

2008-05-06 14:28  ltatkinson

	* cmake/platform/windows.cmake, displays/piqsl/CMakeLists.txt,
	  tools/eqsl/CMakeLists.txt: Just found a cleaner (and hopefully
	  universal) way to attach resources to Windows binaries, so
	  updated my previous commit accordingly - Doh!

2008-05-06 14:05  ltatkinson

	* CMakeLists.txt, cmake/platform/windows.cmake,
	  displays/piqsl/CMakeLists.txt,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/win/application.rc.in.cmake,
	  distribution/win/nsis/CMakeLists.txt,
	  distribution/win/nsis/setup.nsi.in.cmake,
	  tools/eqsl/CMakeLists.txt: Embed icon resources within Windows
	  binaries (eqsl and piqsl) and centralised some package-specific
	  variables.
	  
	  NOTE: The resource embedding *only* covers MSVC at present!

2008-05-06 07:23  c42f

	* texturing/texlib/CMakeLists.txt,
	  texturing/texlib/filtersupport.h,
	  texturing/texlib/ishadowsampler.cpp,
	  texturing/texlib/ishadowsampler.h,
	  texturing/texlib/itexinputfile.h,
	  texturing/texlib/itexturesampler.cpp,
	  texturing/texlib/itiledtexinputfile.cpp,
	  texturing/texlib/itiledtexinputfile.h,
	  texturing/texlib/mipmaplevelcache.h,
	  texturing/texlib/mipmaptexturesampler.h,
	  texturing/texlib/shadowsampler.cpp,
	  texturing/texlib/shadowsampler.h,
	  texturing/texlib/texturebuffer.h,
	  texturing/texlib/texturecache.cpp,
	  texturing/texlib/texturecache.h, texturing/texlib/tilearray.h,
	  texturing/texlib/tiledanyinputfile.cpp,
	  texturing/texlib/tiledanyinputfile.h,
	  texturing/texlib/tiledtiffinputfile.cpp,
	  texturing/texlib/tiledtiffinputfile.h: Implement deterministic
	  filtering for tiled texture arrays. (Stochastic
	  filtering is yet to be done, so this commit uses deterministic
	  filtering for
	  shadows too, which makes it a little slow. This should be fixed
	  tomorrow.)
	  * Finish implementation of CqTileArray and accompanying tile
	  class (no LRU tile
	  rejection yet; that's for after aqsis-1.4).
	  * Implement CqTileArray::CqIterator; an efficient pixel iterator
	  for tiled
	  data.
	  * Modified the tiled texture input file interface
	  (IqTiledTexInputFile) to make
	  it much more convenient to use; the interface is now a
	  random-access
	  interface for tiled data, with some (checked) assumptions about
	  uniformity of
	  the tiling representation in the different TIFF subimages.
	  Corresponding
	  changes to the tiff implementation of that interface.
	  * Add a class CqTiledAnyInputFile which wraps the IqTexInputFile
	  interface for
	  general access to texture files which aren't tiled.
	  * Minimal modification of CqMipmapLevelCache to work with tiled
	  arrays/input files
	  * Modify texture cache to work with the IqTiledTexInputFile
	  interface rather
	  than IqMultiTexInputFile
	  * Implement IqTextureSampler::open(const
	  boost::shared_ptr<IqTiledTexInputFile>& )

2008-05-05 18:17  ltatkinson

	* distribution/win/nsis/setup.nsi.in.cmake: Modified Windows
	  installer (NSIS) to update user's desktop to use 'eqsl' by
	  default, though a 'aqsis' commandline option is also available.
	  Also using missing application icon on desktop entries.

2008-05-05 17:52  pgregory

	* aqsistypes/matrix.cpp, aqsistypes/matrix.h, interfaces/ibound.h,
	  interfaces/isurface.h, renderer/render/blobby.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/cubiccurves.cpp, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/occlusion.cpp,
	  renderer/render/occlusion.h, renderer/render/patch.cpp,
	  renderer/render/patch.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.h,
	  renderer/render/quadrics.cpp, renderer/render/quadrics.h,
	  renderer/render/renderer.cpp, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h: Revert the merge of Beaker:BOC due to a
	  performance regression on non-DoF scenes. Reverted the changeset
	  #2086

2008-05-05 12:28  ltatkinson

	* distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi.in.cmake: Updated Windows
	  installer (NSIS) to use *correct* artwork and icon associations;
	  a way to embed the icons within the binaries directly would be
	  preferred ultimately (MSVC/MinGW).

2008-05-04 23:58  ltatkinson

	* cmake/modules/FindNSIS.cmake, cmake/platform/windows.cmake,
	  distribution/win/nsis/CMakeLists.txt,
	  distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi.in.cmake: Resolved both
	  non-expanding variables and NSIS executable detection regarding
	  recent Windows installer commit.

2008-05-04 18:01  ltatkinson

	* CMakeLists.txt, cmake/modules/FindNSIS.cmake,
	  cmake/platform/windows.cmake,
	  distribution/linux/rpm/aqsis-Fedora_8.spec,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/win/application.ico, distribution/win/header.bmp,
	  distribution/win/mime.ico, distribution/win/nsis/CMakeLists.txt,
	  distribution/win/nsis/header.bmp,
	  distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi,
	  distribution/win/nsis/setup.nsi.in.cmake,
	  distribution/win/nsis/template.xcf,
	  distribution/win/nsis/ttf-bitstream-vera-1.10.zip,
	  distribution/win/nsis/wizard-1.2.bmp,
	  distribution/win/nsis/wizard.bmp, distribution/win/template.xcf,
	  distribution/win/ttf-bitstream-vera-1.10.zip,
	  distribution/win/wizard-1.2.bmp, distribution/win/wizard-1.4.bmp,
	  distribution/win/wizard.bmp: Added custom Windows installer
	  (NSIS) target to CMake, 'winpackage', giving greater
	  functionality than the current/default CPACK solution; Though
	  both should work.

2008-05-03 23:25  c42f

	* texturing/texlib/tiffdirhandle.cpp: * Fix a stupid bug commited
	  in svn r2091 by reverting to the use of
	  std::memcpy in the stridedCopy() function. After a quick
	  measurement, it
	  turns out that this is much faster anyway.

2008-05-03 22:19  pgregory

	* renderer/render/imagebuffer.cpp: Fix some issues with the new
	  sampling code from Beaker that were causing some RTS crashes.
	  * Add some more checking on the validity of time information when
	  sampling MPs to ensure the sample indices are always within
	  range.
	  * Add missing view frustum culling to static MP sampling.
	  * Add additional crop window checks to the bucket selection code.

2008-05-03 10:57  c42f

	* displays/piqsl/image.cpp, texturing/texlib/exrinputfile.cpp,
	  texturing/texlib/itiledtexinputfile.h,
	  texturing/texlib/maketexture.cpp,
	  texturing/texlib/texfileattributes.h,
	  texturing/texlib/texfileheader.cpp,
	  texturing/texlib/texfileheader.h,
	  texturing/texlib/texfileheader_test.cpp,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h,
	  texturing/texlib/tiffdirhandle_test.cpp,
	  texturing/texlib/tiffoutputfile.cpp,
	  texturing/texlib/tilearray.h,
	  texturing/texlib/tiledtiffinputfile.cpp,
	  texturing/texlib/tiledtiffinputfile.h: * Remove the Attr::Width,
	  Attr::Height and Attr::ChannelList image file header
	  tag structs in favour of directly storing these required
	  attributes in the
	  header with specialized get/set methods. This makes sense for
	  cleanlyness
	  and efficiency, since they're assumed to be present in _every_
	  image file
	  header anyway.
	  * Make Attr::Compression and Attr::PixelAspectRatio no longer
	  required
	  attributes.
	  * Move the stridedCopy() function so that it can be used in a few
	  places.
	  * Modify some aspects of the tiled image interface to make them
	  more useful for
	  upcoming tiled array filtering implementation.
	  * WIP changes to tiled array class.

2008-05-02 06:56  pgregory

	* renderer/render/imagebuffer.cpp: Fix a problem in the new
	  sampling code, the MP culling wasn't culling an MP whose min edge
	  was *exactly* on the max edge of the bucket, or vice versa.

2008-05-01 14:32  c42f

	* renderer/render/imagebuffer.cpp, renderer/render/occlusion.cpp,
	  renderer/render/quadrics.cpp: * Fix some (spurrious) compiler
	  warnings about uninitialized variables and
	  comparing signed/unsigned ints.

2008-05-01 12:41  pgregory

	* aqsistypes/matrix.cpp, aqsistypes/matrix.h, interfaces/ibound.h,
	  interfaces/isurface.h, renderer/render/blobby.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/cubiccurves.cpp, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/occlusion.cpp,
	  renderer/render/occlusion.h, renderer/render/patch.cpp,
	  renderer/render/patch.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.h,
	  renderer/render/quadrics.cpp, renderer/render/quadrics.h,
	  renderer/render/renderer.cpp, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h: Merge current work from Beaker and
	  Beaker:BucketOverlapCache, revisions 1748:2085. This merge
	  includes work on both Beaker and B:BOC, the merge is from
	  branches/beaker/bucketoverlapcache, which was synced with
	  branches/beaker/aqsis, which in turn was synced with trunk/aqsis
	  prior to merge.

2008-05-01 09:26  pgregory

	* aqsistypes/riparamlist.h, tools/eqsl/eqsl.fl: * Fix a couple of
	  build issues under Win32.
	  The MS compiler doesn't like empty arrays, so removed the empty
	  renderViewerArgs from eqsl.
	  Make sure that the new CqRiParamList is properly exported.
	  

2008-04-30 14:59  c42f

	* texturing/texlib/CMakeLists.txt,
	  texturing/texlib/itexinputfile.h,
	  texturing/texlib/itiledtexinputfile.cpp,
	  texturing/texlib/itiledtexinputfile.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h,
	  texturing/texlib/tiffinputfile.cpp,
	  texturing/texlib/tiledtiffinputfile.cpp,
	  texturing/texlib/tiledtiffinputfile.h: * Flesh out tiled texture
	  input interface and add an implementation for reading
	  TIFF files.

2008-04-30 00:35  ltatkinson

	* tools/eqsl/eqsl.fl: Updated eqsl to support detection of aqsis
	  binary when running the OS X bundle, though it is broken at the
	  moment (not compiling).

2008-04-29 22:45  ltatkinson

	* cmake/platform/linux.cmake, cmake/platform/macosx.cmake,
	  distribution/linux/application.png,
	  distribution/linux/aqsis.desktop, distribution/linux/aqsis.sh,
	  distribution/linux/aqsis.xml, distribution/linux/aqsl.desktop,
	  distribution/linux/aqsl.sh, distribution/linux/aqsltell.desktop,
	  distribution/linux/aqsltell.sh, distribution/linux/eqsl.desktop,
	  distribution/linux/mime.png, distribution/linux/piqsl.desktop,
	  distribution/linux/rpm/aqsis-Fedora_8.spec,
	  distribution/linux/rpm/aqsis.spec: Added Linux desktop
	  integration with example RPM (SPEC) file for Fedora 8.

2008-04-29 13:57  c42f

	* shadercompiler/aqsl/aqslcomp.cpp: * Alias -h option to -help for
	  aqsl to be consistent with aqsis.
	  * Minor cleanups:
	  - remove some deprecated slpp stuff
	  - make sure indenting uses tabs

2008-04-27 23:51  c42f

	* texturing/texlib/itexturesampler.cpp,
	  texturing/texlib/texturebuffer.h,
	  texturing/texlib/tiffdirhandle.cpp, texturing/texlib/tilearray.h:
	  * Fix a bug in TIFF writing code: contrary to the docs on the
	  web, setting
	  TIFFTAG_PREDICTOR only works with specific image codecs, and this
	  was causing
	  a regression failure on Bug1031110.rib which uses the "packbits"
	  compression
	  scheme.
	  * Add some forgotten docs for CqTextureBuffer::begin*
	  * Start a refactor of the tile array class.

2008-04-27 14:25  c42f

	* texturing/texlib/ewafilter.cpp, texturing/texlib/ewafilter.h,
	  texturing/texlib/mipmaptexturesampler.h,
	  texturing/texlib/shadowsampler.cpp: * Refactor EWA filter weights
	  class into two classes which do different things:
	  One of the new classes is a factory class which does all the hard
	  computation
	  of the appropriate filter coefficients. The other is a very
	  simple filter
	  functor class, for evaulating 2D gaussian filters.

2008-04-27 11:37  c42f

	* texturing/texlib/CMakeLists.txt,
	  texturing/texlib/filtertexture.h,
	  texturing/texlib/randomtable.cpp, texturing/texlib/randomtable.h,
	  texturing/texlib/shadowsampler.cpp,
	  texturing/texlib/stochasticsuppiter.cpp,
	  texturing/texlib/stochasticsuppiter.h,
	  texturing/texlib/texbufsampler.h,
	  texturing/texlib/texturebuffer.h: Reimplement stochastic
	  filtering for shadows with tiled buffers in mind.
	  * Implement a stochastic pixel iterator for CqTextureBuffer.
	  * Move randomized QMC table class into randomtable.{h,cpp} and
	  remove the old
	  stochastic support iterators.
	  * Remove deprecated CqTexBufSampler sampling machinery

2008-04-27 09:04  c42f

	* texturing/texlib/CMakeLists.txt,
	  texturing/texlib/filtersupport.h,
	  texturing/texlib/filtertexture.h, texturing/texlib/mipmap.h,
	  texturing/texlib/mipmaptexturesampler.h,
	  texturing/texlib/texturebuffer.h: Major refactor of filtering for
	  texture buffers and wrap mode handling, with
	  future tiled texture buffers in mind.
	  * Introduce the notion of pixel iterators over an array, and an
	  implementation
	  of such for the CqTextureBuffer class. These should be an
	  efficient
	  abstraction for the optimal iteration order over a texture
	  buffer, including
	  tiled arrays.
	  * These changes deprecate CqTexBufSampler and the support
	  iterator concepts, at
	  least for deterministic filtering. Doing the same for stochastic
	  filtering
	  is the next step.

2008-04-25 19:42  ltatkinson

	* tools/eqsl/eqsl.fl: Revised the way eqsl finds other Aqsis
	  executables when using the bundle (OS X).

2008-04-25 12:19  ltatkinson

	* distribution/macosx/bundle/create_bundle.sh.in.cmake,
	  tools/eqsl/eqsl.fl: Fix small compiler issue in eqsl and revised
	  name for distributed text files within the bundle; after recent
	  testing on a minimalistic/vanilla system (both OS X).

2008-04-25 08:07  c42f

	* aqsistypes/riparamlist.cpp: * Add file forgotten from svn r2067

2008-04-25 01:22  c42f

	* aqsistypes/riparamlist.h, texturing/texlib/bake.cpp,
	  texturing/texlib/wrapmode.h: * Fix a bug in bake file generation
	  which caused the bottom and right rows of
	  pixels in baked textures to come out black
	  * Fix a bug in the CqRiParamList class which caused RtTokens such
	  as "float
	  bake" not to be recognized by the name "bake". The param list
	  class now does
	  some minimal parsing of such inline declarations.
	  * Remove the use of std::string::compare() in matching wrapmode
	  strings, and
	  replace with the more correct use of operator==(). Make sure
	  (this time)
	  to include the standard <string> header - this should fix the
	  associated
	  compilation error on windows.

2008-04-25 00:02  ltatkinson

	* tools/eqsl/eqsl.fl: Fix eqsl issue when calling external tools
	  directly from (OS X) the bundle, though aqsis will fail within
	  this context due to 'aqsisrc' environment set-up.

2008-04-24 01:28  c42f

	* texturing/texlib/maketexture.cpp, texturing/texlib/maketexture.h,
	  texturing/texlib/mipmap.h: * Improve the mipmap generation
	  abstraction by converting it into an input
	  iterator which iterates over the mipmap levels, generating each
	  successive
	  level when operator++ is used. This means that client code can
	  now use a
	  simple loop rather than defining a special destination object
	  with the
	  appropriate methods.

2008-04-23 11:07  ltatkinson

	* tools/eqsl/eqsl.fl: Added 'Clear Console' option to eqsl and
	  changed the default progress bar colour to light blue (similar to
	  Aqsis logo).

2008-04-23 07:35  pgregory

	* shadercompiler/aqsl/aqslcomp.cpp, tools/eqsl/eqsl.fl: Implement
	  non-blocking execution with redirection for the shader compiler
	  and render viewer tools. Also add -nocolor as an option to aqsl.

2008-04-22 15:51  pgregory

	* aqsistypes/win32/execute_system.cpp, tools/eqsl/eqsl.fl: Fix
	  win32 console redirection to make sure that the captured string
	  is null terminated before it is passed to the callback. Still
	  prints unnecessary <cr>'s, but I'll look into that later.

2008-04-20 21:28  pgregory

	* aqsistypes/posix/execute_system.cpp, tools/eqsl/eqsl.fl: Fix the
	  output console under. Now uses a Fl_Text_Display, which is more
	  appropriate for text output than a Fl_Browser. Posix now
	  redirects stderr properly too.

2008-04-20 09:31  pgregory

	* tools/eqsl/eqsl.fl: minor update to eqsl resizing, still not
	  working.

2008-04-20 00:20  pgregory

	* cmake/modules/FindBoost.cmake, tools/eqsl/CMakeLists.txt,
	  tools/eqsl/eqsl.fl: Initial work to provide a progress bar for
	  rendering in eqsl, only tested on win32 so far.

2008-04-17 12:51  joron

	* texturing/texlib/tiffdirhandle.cpp: Make sure break is between
	  the normal case of Unsigned int... and the default and exception
	  handling.

2008-04-17 12:35  c42f

	* shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: Add cleanups which
	  accumulated when constructing the bugfix in r2054:
	  * Fix (possibly major) memory leak in ~CqShaderVariableArray()
	  which meant that
	  array variables were not being correctly freed.
	  * Fix minor memory leak in CqShaderVM which caused
	  CqShaderVariables which were
	  allocated as shader arguments to not be freed.
	  * Move some code out of the shadervm.h header and into the
	  implementation file.
	  * Make CqShaderExecEnv non-copyable.

2008-04-17 11:49  c42f

	* shadercompiler/shadervm/shaderstack.h: * Make sure the
	  CqShaderStack::Drop() function calls Release() on the dropped
	  shader data to reclaim the memory. This was the cause of a
	  slowish memory
	  leak which nevertheless caused most complicated shaders on large
	  scenes to
	  consume huge amounts of memory.

2008-04-17 11:38  c42f

	* texturing/texlib/magicnumber.h: * Add missing include for
	  std::string. This worked on linux, since iosfwd
	  includes stringfwd on linux, but is nonstandard behaviour.
	  Apparently it's a
	  problem on windows - thanks to Michel Joron for noticing this :)

2008-04-16 13:34  c42f

	* texturing/texlib/channellist.h, texturing/texlib/imagefiletype.h,
	  texturing/texlib/itexinputfile.cpp,
	  texturing/texlib/magicnumber.cpp, texturing/texlib/magicnumber.h,
	  texturing/texlib/magicnumber_test.cpp,
	  texturing/texlib/maketexture.cpp,
	  texturing/texlib/texturebuffer.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h: * Make sure bake file detection
	  uses magic numbers rather than pattern matching
	  the filename.
	  * Clean up magic number code to make the interface much more easy
	  to use.
	  * Convert OpenEXR "half" data into float32 data before
	  mipmapping.
	  RiMakeTexture (and hence teqser) can now use OpenEXR files
	  directly.
	  * Implement copy constructor and assignment operators for
	  CqTextureBuffer.
	  These allow for conversion between various texture buffer
	  formats.
	  * Minor cleanups to various error messages for clarity.

2008-04-15 13:26  joron

	* texturing/texlib/maketexture.h: Add the magic directive to
	  export/import the makeTexture() new function.

2008-04-15 13:19  joron

	* renderer/render/ri.cpp: make sure the 2nd parameter respect the
	  declaration of makeTexture().

2008-04-14 22:10  pgregory

	* aqsistypes/posix/execute_system.cpp,
	  aqsistypes/win32/execute_system.cpp, tools/eqsl/eqsl.fl: Initial
	  implementation of the CqExecute method for eqsl under Linux.

2008-04-14 01:23  c42f

	* aqsistypes/bitvector.cpp, aqsistypes/bitvector.h,
	  aqsistypes/cellnoise.cpp, aqsistypes/cellnoise.h,
	  aqsistypes/color.cpp, aqsistypes/execute.h, aqsistypes/file.cpp,
	  aqsistypes/file.h, aqsistypes/list.h, aqsistypes/logging.cpp,
	  aqsistypes/logging.h, aqsistypes/logging_streambufs.h,
	  aqsistypes/lowdiscrep.cpp, aqsistypes/lowdiscrep.h,
	  aqsistypes/matrix.cpp, aqsistypes/matrix.h, aqsistypes/noise.cpp,
	  aqsistypes/noise.h, aqsistypes/noise1234.cpp,
	  aqsistypes/noise1234.h, aqsistypes/plugins.cpp,
	  aqsistypes/plugins.h, aqsistypes/pool.h,
	  aqsistypes/posix/aqsis_compiler.h,
	  aqsistypes/posix/file_system.cpp,
	  aqsistypes/posix/socket_system.cpp, aqsistypes/random.cpp,
	  aqsistypes/random.h, aqsistypes/socket.h, aqsistypes/spline.cpp,
	  aqsistypes/spline.h, aqsistypes/sstring.cpp,
	  aqsistypes/sstring.h, aqsistypes/vector2d.cpp,
	  aqsistypes/vector3d.cpp, aqsistypes/vector3d.h,
	  aqsistypes/vector4d.cpp, aqsistypes/vector4d.h,
	  aqsistypes/win32/aqsis_compiler.h,
	  aqsistypes/win32/execute_system.cpp,
	  aqsistypes/win32/file_system.cpp,
	  aqsistypes/win32/socket_system.cpp, displays/display/display.cpp,
	  displays/display/display.h, displays/piqsl/book.cpp,
	  displays/piqsl/book.h, displays/piqsl/bookbrowser.cpp,
	  displays/piqsl/bookbrowser.h,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/displayserverimage.h,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h,
	  displays/piqsl/image.h, displays/piqsl/piqsl.h,
	  displays/piqsl/piqslbase.cpp, displays/piqsl/piqslbase.h,
	  interfaces/iattributes.h, interfaces/ibound.h,
	  interfaces/iddmanager.h, interfaces/ilightsource.h,
	  interfaces/ioptions.h, interfaces/iparameter.h,
	  interfaces/iraytrace.h, interfaces/irenderer.h,
	  interfaces/ishader.h, interfaces/ishaderdata.h,
	  interfaces/ishaderexecenv.h, interfaces/isurface.h,
	  interfaces/itransform.h, renderer/ddmanager/ddmanager.cpp,
	  renderer/ddmanager/ddmanager.h, renderer/raytrace/raytrace.cpp,
	  renderer/raytrace/raytrace.h, renderer/render/attributes.cpp,
	  renderer/render/attributes.h, renderer/render/bilinear.h,
	  renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/bunny.cpp, renderer/render/bunny.h,
	  renderer/render/clippingvolume.h, renderer/render/condition.cpp,
	  renderer/render/condition.h, renderer/render/converter.cpp,
	  renderer/render/converter.h, renderer/render/csgtree.cpp,
	  renderer/render/csgtree.h, renderer/render/cubiccurves.cpp,
	  renderer/render/curves.cpp, renderer/render/curves.h,
	  renderer/render/environment_old.cpp, renderer/render/filters.cpp,
	  renderer/render/forwarddiff.h, renderer/render/genpoly.cpp,
	  renderer/render/genpoly.h, renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/imagers.cpp,
	  renderer/render/imagers.h, renderer/render/inlineparse.cpp,
	  renderer/render/inlineparse.h,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h, renderer/render/kdtree.h,
	  renderer/render/lath.cpp, renderer/render/lath.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/linearcurves.cpp,
	  renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/motion.h, renderer/render/mpdump.cpp,
	  renderer/render/mpdump.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/objectinstance.h,
	  renderer/render/occlusion.cpp, renderer/render/occlusion.h,
	  renderer/render/options.cpp, renderer/render/options.h,
	  renderer/render/parameters.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/plane.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.cpp,
	  renderer/render/procedural.h, renderer/render/quadrics.cpp,
	  renderer/render/quadrics.h, renderer/render/render.cpp,
	  renderer/render/render.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri_cache.h,
	  renderer/render/ri_debug.h, renderer/render/rifile.h,
	  renderer/render/shaders.cpp, renderer/render/shaders.h,
	  renderer/render/shadowmap_old.cpp, renderer/render/stats.cpp,
	  renderer/render/stats.h, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/symbols.cpp,
	  renderer/render/symbols.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h, renderer/render/texturemap_old.cpp,
	  renderer/render/texturemap_old.h, renderer/render/transform.cpp,
	  renderer/render/transform.h, renderer/render/trimcurve.cpp,
	  renderer/render/trimcurve.h, rib/ri2rib/ascii.cpp,
	  rib/ri2rib/ascii.h, rib/ri2rib/binary.cpp, rib/ri2rib/binary.h,
	  rib/ri2rib/context.cpp, rib/ri2rib/context.h,
	  rib/ri2rib/dictionary.cpp, rib/ri2rib/dictionary.h,
	  rib/ri2rib/error.cpp, rib/ri2rib/error.h,
	  rib/ri2rib/inlineparse.cpp, rib/ri2rib/inlineparse.h,
	  rib/ri2rib/options.h, rib/ri2rib/output.cpp, rib/ri2rib/output.h,
	  rib/ri2rib/outstream.cpp, rib/ri2rib/outstream.h,
	  rib/ri2rib/plstore.cpp, rib/ri2rib/plstore.h, rib/ri2rib/ri.cpp,
	  shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/dsoshadeops.h,
	  shadercompiler/shadervm/idsoshadeops.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/funcdef.h,
	  shadercompiler/slparse/icodegen.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/libslparse.h,
	  shadercompiler/slparse/optimise.cpp,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/typecheck.cpp,
	  shadercompiler/slparse/vardef.cpp,
	  shadercompiler/slparse/vardef.h,
	  texturing/texlib/itexturemap_old.h: * Remove the START_NAMESPACE,
	  END_NAMESPACE and USING_NAMESPACE macros since
	  there is absolutely no way that the current code would compile on
	  a compiler
	  without namespace support. In particular, boost uses namespace
	  extensively
	  and we now rely on boost quite heavily.

2008-04-14 01:20  c42f

	* tools/eqsl/CMakeLists.txt: * Set the rpath to make sure that eqsl
	  can find libaqsistypes.so.

2008-04-13 23:15  c42f

	* coding_standard/codestyle.cpp, coding_standard/codestyle.h: *
	  Update some of the coding conventions to use recently added
	  features and make
	  a few things a bit clearer. Remove the section on VC6
	  compatibility.

2008-04-13 23:05  c42f

	* aqsistypes/riparamlist.h, renderer/render/ri.cpp,
	  texturing/teqser/teqser.cpp, texturing/texlib/CMakeLists.txt,
	  texturing/texlib/bake.cpp, texturing/texlib/bake.h,
	  texturing/texlib/cachedfilter.cpp,
	  texturing/texlib/cachedfilter.h,
	  texturing/texlib/filterfunctor.h,
	  texturing/texlib/maketexture.cpp, texturing/texlib/maketexture.h,
	  texturing/texlib/mipmap.h, texturing/texlib/texfileattributes.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffoutputfile.cpp, texturing/texlib/wrapmode.h:
	  Make mipmapping for plain texture use the new code.
	  * Remove all plain texture mipmapping stuff from ri.cpp & call
	  rewritten version from maketexture.cpp
	  * Move bake file processing into aqsistex. Still needs some
	  cleanup, but
	  should function as it did before.
	  * Fix bug in tiled TIFF output. Images smaller than the tile size
	  should now work correctly.
	  * Make TIFF output code check for the existance of a CODEC before
	  trying to use it.
	  * Make sure TIFFTAG_ROWSPERSTRIP is not set for tile-based tiff
	  files.
	  * Remove filterfunctor.h since it seemed not very useful.
	  * Add a class for wrapping RI parameter lists in a more C++ like
	  manner.
	  * Remove gamma correction option from teqser (obsoleted by
	  changes to OpenEXR handling)

2008-04-13 00:08  pgregory

	* aqsistypes/execute.h, aqsistypes/win32/execute_system.cpp,
	  tools/eqsl/CMakeLists.txt, tools/eqsl/eqsl.fl: Fix Win32 version
	  of non-blocking/threaded operation with stdout redirection in
	  eqsl.
	  * Now uses a new class CqExecute in aqsistypes, only currently
	  defined for Win32, will be created for Posix next, and the code
	  in eqsl will then be common.

2008-04-11 15:18  cgtobix

	* distribution/macosx/bundle/create_bundle.sh.in.cmake: OS X Bundle
	  improvements.

2008-04-11 00:10  ltatkinson

	* distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/bundle_config.applescript,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake: Minor
	  (superficial) changes to OS X bundle, plus added missing LICENSE
	  file.

2008-04-10 09:40  c42f

	* texturing/texlib/filterfunctor.h,
	  texturing/texlib/tiffoutputfile.cpp: * Make filter functors use a
	  common base class in preparation for use in mipmap
	  downsampling. The filter evaluation functions don't really need
	  to be
	  inlined, since we cache them anyway and in other respects using
	  dynamic
	  polymorphism is much more convenient here.

2008-04-10 09:09  cgtobix

	* distribution/macosx/bundle/bundle_config.applescript: The eqsl
	  thread will now be detached from the config script.

2008-04-09 16:00  cgtobix

	* CMakeLists.txt, cmake/modules/FindOsacompile.cmake,
	  cmake/modules/FindXcodebuild.cmake,
	  distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/bundle_config.applescript,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake: More OS X
	  Bundle stuff. Added a new config script to automatically update
	  the environment PATH variable.

2008-04-09 14:28  pgregory

	* tools/eqsl/CMakeLists.txt, tools/eqsl/eqsl.fl: Initial work to
	  make eqsl non-blocking and to redirect stdout to the console tab.

2008-04-09 14:07  c42f

	* texturing/texlib/itexoutputfile.cpp,
	  texturing/texlib/itexoutputfile.h,
	  texturing/texlib/mipmaplevelcache.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h,
	  texturing/texlib/tiffoutputfile.cpp,
	  texturing/texlib/tiffoutputfile.h, texturing/texlib/wrapmode.h: *
	  Implement support for tiled texture output and output of multiple
	  subimages
	  in the CqTiffOutputFile class.
	  - CqTiffOutputFile now implements the IqMultiTexOutputFile
	  interface for
	  multiple subimage support
	  - The desire for tiled output is indicated by setting the
	  appropriate image
	  header attributes.
	  * Fix a *major* regression introduced by r2036 - the smallest
	  mipmap level was
	  being loaded instead of level 0 (!)

2008-04-09 00:35  c42f

	* texturing/texlib/CMakeLists.txt,
	  texturing/texlib/exrinputfile.cpp,
	  texturing/texlib/itexoutputfile.cpp,
	  texturing/texlib/itexoutputfile.h,
	  texturing/texlib/itiledtexoutputfile.cpp,
	  texturing/texlib/itiledtexoutputfile.h,
	  texturing/texlib/texfileattributes.h,
	  texturing/texlib/texfileheader.cpp,
	  texturing/texlib/texfileheader.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h,
	  texturing/texlib/tiffdirhandle_test.cpp,
	  texturing/texlib/tiffinputfile.cpp,
	  texturing/texlib/tiffoutputfile.cpp: * Remove tiled output
	  interfaces - they will be subsumed into a single texture
	  output interface which will do tiled output depending on a flag.
	  * Remove the redundent Attr::IsTiled flag in favour of testing
	  whether the
	  TileInfo structure is present.
	  * Remove TileWidth and TileHeight texture attributes in favour of
	  a single
	  TileInfo structure attribute.
	  * Add an erase() method to CqTexFileHeader for erasing unneeded
	  attributes.
	  * Other minor cleanups

2008-04-08 19:21  minty

	* aqsistypes/file.h, aqsistypes/posix/file_system.cpp,
	  aqsistypes/win32/file_system.cpp,
	  shadercompiler/aqsl/aqslcomp.cpp: Add manual CLI globbing for
	  win32
	  Fix shader compilation with missing EOL at end of file.

2008-04-08 13:32  ltatkinson

	* CMakeLists.txt, aqsisrc.in.cmake,
	  distribution/macosx/bundle/CMakeLists.txt: Updated both OS X
	  bundle and 'aqsisrc' configurations to support new variable
	  %NAME% path locations.

2008-04-08 11:45  cgtobix

	* distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake: More bundle
	  restructuring. Looks like we are getting there.

2008-04-08 10:18  cgtobix

	* distribution/macosx/bundle/Info.plist.in.cmake: Accidently
	  committed the change, so now reverting back to the original.

2008-04-08 10:13  cgtobix

	* distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake:
	  Restructuring of the Mac OS X Bundle.

2008-04-08 07:27  pgregory

	* renderer/render/ri.cpp: Implement feature request #1554173,
	  support %NAME% style environment variables in "searchpath"
	  RiOptions. Also clean up the string substitution for other
	  replacements too, still not great, but better.

2008-04-07 23:56  ltatkinson

	* tools/eqsl/eqsl.fl: Added Windows file execution support to
	  'eqsl' (though not quite working yet) and revised the
	  console/history interface, in preparation of 'Console' output
	  redirection.

2008-04-06 17:44  ltatkinson

	* renderer/aqsis/CMakeLists.txt: Removed (now deprecated) resource
	  fork process from the 'aqsis' binary, given 'piqsl' is now the
	  prefered framebuffer and the icon OS X displays is misleading
	  (potential confusion).

2008-04-06 17:35  ltatkinson

	* tools/eqsl/eqsl.fl: Modified 'eqsl' hot-keys to be more inline
	  with various HIG recommendations.

2008-04-06 09:48  ltatkinson

	* distribution/macosx/bundle/CMakeLists.txt: Added missing display
	  drivers to OS X bundle.

2008-04-04 15:28  ltatkinson

	* cmake/platform/macosx.cmake: As bundle generation is now
	  (pretty-much) working, disabled the default building of OS X
	  installers.

2008-04-04 15:11  ltatkinson

	* distribution/macosx/bundle/create_bundle.sh.in.cmake: Fixed OS X
	  bundle further to previous commit, now works though the $PATH
	  issue needs looking into (Tobi).

2008-04-04 12:12  cgtobix

	* distribution/macosx/bundle/create_bundle.sh.in.cmake: More
	  improvements to the Mac OS X bundle support.

2008-04-04 08:12  ltatkinson

	* CMakeLists.txt, cmake/platform/macosx.cmake,
	  distribution/macosx/application.icns,
	  distribution/macosx/bundle/Aqsis.icns,
	  distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/Info.plist,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake: Updated OS
	  X bundle script and related files, further to Tobi's work. Not
	  quite 100% correct yet!

2008-04-02 19:11  cgtobix

	* distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/aqsisrc,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake: Minor
	  improvements to the OS X bundle.

2008-04-02 14:08  c42f

	* texturing/texlib/CMakeLists.txt,
	  texturing/texlib/itexoutputfile.cpp,
	  texturing/texlib/itexoutputfile.h,
	  texturing/texlib/itiledtexoutputfile.cpp,
	  texturing/texlib/itiledtexoutputfile.h: * Create a tiled texture
	  output interface, quite similar to the scanline
	  interface.
	  * Minor cleanups to itexoutputfile.*

2008-04-01 23:37  ltatkinson

	* distribution/macosx/bundle/Aqsis.icns: Re-processed OS X
	  application icon using 'Icon Composer' to fix issue with
	  resolutions above 128x128 (pixels).

2008-03-30 00:34  ltatkinson

	* tools/eqsl/eqsl.fl: Modified 'eqsl' to execute commands within
	  the specified directory, as everything was being
	  rendered/compiled to the user's 'HOME' directory by mistake.
	  
	  Also made a few other small (structural) mods to the tool.

2008-03-29 12:54  ltatkinson

	* distribution/application-src.svg: Updated new application icon to
	  contain MIME (document) variation - Created with Inkscape 0.46.

2008-03-29 12:22  cgtobix

	* tools/AqsisConfig/AqsisConfig.xcodeproj/tobiassauerwein.pbxuser,
	  tools/AqsisConfig/AqsisConfig.xcodeproj/tobiassauerwein.perspective:
	  Removed unneccessary files from the xcode project.

2008-03-29 12:16  cgtobix

	* cmake/modules/FindXcodebuild.cmake, tools/AqsisConfig,
	  tools/AqsisConfig/AqsisConfig.applescript,
	  tools/AqsisConfig/AqsisConfig.xcodeproj,
	  tools/AqsisConfig/AqsisConfig.xcodeproj/default.pbxuser,
	  tools/AqsisConfig/AqsisConfig.xcodeproj/project.pbxproj,
	  tools/AqsisConfig/AqsisConfig.xcodeproj/tobiassauerwein.pbxuser,
	  tools/AqsisConfig/AqsisConfig.xcodeproj/tobiassauerwein.perspective,
	  tools/AqsisConfig/CMakeLists.txt,
	  tools/AqsisConfig/English.lproj,
	  tools/AqsisConfig/English.lproj/InfoPlist.strings,
	  tools/AqsisConfig/English.lproj/MainMenu.nib,
	  tools/AqsisConfig/English.lproj/MainMenu.nib/classes.nib,
	  tools/AqsisConfig/English.lproj/MainMenu.nib/data.dependency,
	  tools/AqsisConfig/English.lproj/MainMenu.nib/info.nib,
	  tools/AqsisConfig/English.lproj/MainMenu.nib/keyedobjects.nib,
	  tools/AqsisConfig/English.lproj/MainMenu~.nib,
	  tools/AqsisConfig/English.lproj/MainMenu~.nib/classes.nib,
	  tools/AqsisConfig/English.lproj/MainMenu~.nib/data.dependency,
	  tools/AqsisConfig/English.lproj/MainMenu~.nib/info.nib,
	  tools/AqsisConfig/English.lproj/MainMenu~.nib/keyedobjects.nib,
	  tools/AqsisConfig/Info.plist, tools/AqsisConfig/main.m: Mac OS X
	  configuration GUI for use with the bundle.

2008-03-29 12:14  cgtobix

	* CMakeLists.txt, cmake/platform/macosx.cmake,
	  distribution/macosx/bundle/CMakeLists.txt,
	  distribution/macosx/bundle/Info.plist.in.cmake,
	  distribution/macosx/bundle/aqsisrc,
	  distribution/macosx/bundle/create_bundle.sh.in.cmake: Initial Mac
	  OS X bundle support.

2008-03-27 14:38  ltatkinson

	* tools/eqsl/eqsl.fl: Added LUF (Last Used File) capability to
	  'eqsl', with RIB and SL directories treated independently -
	  Aiding file navigation speed for most (common) scenarios.

2008-03-27 12:12  ltatkinson

	* tools/eqsl/CMakeLists.txt: Modified 'eqsl' (CMake) to not produce
	  a parent console window when executed.

2008-03-27 11:46  ltatkinson

	* CMakeLists.txt, cmake/modules/FindResource.cmake,
	  displays/piqsl/CMakeLists.txt, renderer/aqsis/CMakeLists.txt,
	  tools/eqsl/CMakeLists.txt: Added automatic (CMAKE) generation of
	  necessary resource forks for GUI applications under OS X.

2008-03-26 23:17  c42f

	* shadercompiler/shadervm/shadervm1.cpp: * Fix a bug introduced in
	  commit 2008 - the RISpec says "An array element index
	  is a float expression which is rounded down to generate an
	  integer index".
	  The previous patch used rounding to convert to the integer rather
	  than taking
	  the floor().

2008-03-26 16:34  c42f

	* shadercompiler/shadervm/shadervm1.cpp: Fix bug #1812376 "SL array
	  indexing out of bounds crashes renderer"
	  * This bug was a very striaghtforward failure to do array bounds
	  checking in
	  SO_ipushv(). SO_ipop() had a more restricted version of the same
	  problem
	  which was also fixed.
	  * Removed some checks for ArrayLength() == 0, since these will
	  never be used
	  due to the way that ArrayEntry() is implemented (even for
	  non-array variables).

2008-03-26 14:20  ltatkinson

	* cmake/platform/macosx.cmake, tools/eqsl/CMakeLists.txt: Fixed
	  accidental linking break for 'eqsl' under OS X.

2008-03-26 13:53  ltatkinson

	* cmake/platform/linux.cmake, cmake/platform/macosx.cmake,
	  cmake/platform/windows.cmake, tools/eqsl/CMakeLists.txt: Revised
	  unnecessary CPACK 'Strip' (binary) execution under the Windows
	  platform and removed redundant entries within the 'eqsl' CMake
	  file(s).

2008-03-26 09:31  ltatkinson

	* AUTHORS, README, tools/eqsl/eqsl.fl: Added (missing) licensing
	  info to 'eqsl' and updated other documentation accordingly.

2008-03-26 00:31  ltatkinson

	* tools/eqsl/CMakeLists.txt, tools/eqsl/eqsl.fl: Fix 'eqsl' build
	  under Windows (missing Boost include(s)) and made some minor
	  superficial tweaks to the tool itself.

2008-03-25 23:11  ltatkinson

	* CMakeLists.txt, cmake/platform/macosx.cmake,
	  tools/eqsl/CMakeLists.txt, tools/eqsl/eqsl.fl: Added new 'eqsl'
	  tool the the (CMake) build system.

2008-03-25 15:45  ltatkinson

	* tools/eqsl/eqsl.fl: Added (missing) functionality to new 'eqsl'
	  tool, meaning it now works! - Still needs adding to CMake though.

2008-03-24 05:29  c42f

	* renderer/render/subdivision2.cpp: Fix bug [ 1896870 ] - "SDS with
	  facevertex variables not equal for different faces"
	  * This bug was caused by using the normal vertex subdivision for
	  facevertex
	  variables, even when the facevertex values around a vertex were
	  discontinuous. This fix involves noticing when discontinuities
	  exist, and
	  making sure that the involved edges or vertices are subdivided as
	  if they
	  are completely hard (creased).

2008-03-24 05:21  c42f

	* aqsistypes/aqsismath.h, aqsistypes/aqsismath_test.cpp,
	  aqsistypes/cellnoise_test.cpp, aqsistypes/color_test.cpp,
	  aqsistypes/matrix.cpp, aqsistypes/matrix_test.cpp,
	  aqsistypes/spline_test.cpp, aqsistypes/vector2d.h,
	  aqsistypes/vector2d_test.cpp, aqsistypes/vector3d.h,
	  aqsistypes/vector3d_test.cpp, aqsistypes/vector4d.h,
	  aqsistypes/vector4d_test.cpp: * Fix isClose() functions to use <=
	  rather than < for comparisons. If not, we
	  have the embarrasing property that isClose(0,0) returns false...
	  * Lots of refactoring to make floating point unit tests more
	  robust, and to
	  clean up the notation when using BOOST_CHECK_PREDICATE.

2008-03-24 04:23  c42f

	* aqsistypes/aqsismath.h, aqsistypes/aqsismath_test.cpp,
	  aqsistypes/color.h, aqsistypes/color_test.cpp,
	  aqsistypes/matrix.cpp, aqsistypes/matrix.h,
	  aqsistypes/matrix_test.cpp, aqsistypes/vector2d.h,
	  aqsistypes/vector2d_test.cpp, aqsistypes/vector3d.h,
	  aqsistypes/vector3d_test.cpp, aqsistypes/vector4d.h,
	  aqsistypes/vector4d_test.cpp: Add isClose() functions for all
	  commonly used types which are based on floating
	  point numbers (floats, vectors, matrices and colors).
	  * This allows for easy testing of "floating point equality" in
	  the face of
	  floating point roundoff errors. It's possible that we should
	  consider making
	  the == operator for some of these types use isClose() internally.
	  * Add unit tests for isClose()
	  * Add some docs for CqVector4D.

2008-03-23 19:19  ltatkinson

	* tools/eqsl, tools/eqsl/eqsl.fl: Initial check-in of 'eqsl'
	  (pronounced 'Excel'), a *basic* Aqsis GUI designed for fast
	  access to commonly-used tools.
	  
	  Currently this is just a UI (FLTK 'Fluid') commit, functionality
	  to follow soon.

2008-03-23 11:23  ltatkinson

	* distribution/macosx/bundle/aqsis.icns: Forgot to remove old OS X
	  icon, now no confusion.

2008-03-23 11:18  ltatkinson

	* distribution/macosx/bundle/Aqsis.icns: Updated OS X icon (.icns)
	  to reflect recent branding commit, including both 256x256 (Tiger)
	  and 512x512 (Leopard) variations.

2008-03-22 13:26  c42f

	* renderer/render/lath.h, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h: * Small refactorings in
	  subdivision2.cpp to make better use of templates
	  (removed 100 lines of code).
	  * Add some discriptive comments to the CqLath topology helper
	  class.

2008-03-21 15:39  c42f

	* renderer/render/subdivision2.cpp, renderer/render/subdivision2.h:
	  * Move a large chunk of implementation from the subdivision
	  header to
	  implementation file
	  * Make Subdivision2::Create{,Edge,Face}Vertex() functions
	  private.

2008-03-19 23:56  c42f

	* renderer/render/micropolygon.cpp: Improve smooth shading
	  interpolation by making the point on the interpolating
	  plane equal to the average of the values on the vertices. This
	  avoids any bias
	  toward any particular vertex for each micropolygon, improving
	  image quality in
	  some cases.

2008-03-19 16:53  c42f

	* renderer/render/cubiccurves.cpp, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/linearcurves.cpp,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/points.cpp, renderer/render/points.h,
	  renderer/render/surface.cpp, renderer/render/surface.h: Refactor
	  NaturalDice and NaturalSubdivide:
	  * Make better use of templates (removed 300 lines of code)
	  * Lots of implementation details removed from headers

2008-03-17 06:14  c42f

	* interfaces/iattributes.h, renderer/render/attributes.cpp,
	  renderer/render/imagebuffer.cpp, renderer/render/imagebuffer.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/occlusion.cpp, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/ri.cpp: Implement
	  "smooth" shading interpolation. The implementation is currently
	  rather limited, being restricted to
	  - Non-moving micropolygons (ie, won't work with motion blur)
	  - No depth of field (can be added somewhat easily).
	  - Ci and Oi output variables are the only ones interpolated.
	  AOV's still use
	  "constant" interpolation.
	  The extra features can be added, but the current implementation
	  already grows
	  outside the boundaries of the original design. Adding general
	  smooth shading
	  without a refactor is probably a waste of coding effort...

2008-03-14 14:50  ltatkinson

	* distribution/application-src.svg: Created (general) application
	  icon/badge for use on installers, artwork and other media used in
	  the promotion of Aqsis.

2008-03-13 11:48  ltatkinson

	* distribution/win/nsis/setup.nsi: Small update to Windows
	  installer (NSIS) to support querying of compiled shaders via
	  aqsltell.

2008-03-09 21:02  ltatkinson

	* cmake/modules/FindBoost.cmake: Updated Boost detection to
	  (explicitly) use 'static' libraries under Windows, as it seems
	  'dynamic' is otherwise favoured by default - Meaning our
	  automated daily builds should now be operational again!

2008-03-08 18:53  ltatkinson

	* content/ribs/features/layeredshaders/texmap.sl,
	  content/shaders/displacement/wavy.sl,
	  content/shaders/imager/filmgrain.sl,
	  content/shaders/surface/AqSMap.sl,
	  content/shaders/surface/DPProctext.h,
	  content/shaders/surface/cddiffract.h,
	  content/shaders/surface/cellnoisetest.sl,
	  content/shaders/surface/debug.sl,
	  content/shaders/surface/face_plastic.sl,
	  content/shaders/surface/randgrid.sl,
	  content/shaders/surface/show_N.sl,
	  content/shaders/surface/show_st.sl,
	  content/shaders/surface/sticky_texture.sl,
	  content/shaders/surface/uvtest.sl: Since moving to boost::wave
	  'aqsl' seems very picky regarding (now necessary)
	  carriage-returns at the end of shaders, so updated all effected
	  files accordingly.

2008-03-08 14:42  c42f

	* interfaces/ishaderexecenv.h,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/slparse/funcdef.cpp: * Fix some bugs in
	  derivatives as calculated via the deriv() RSL function by
	  completely reimplementing it in terms of the new diffU and diffV
	  functions.
	  - deriv(y,x) had twice the value it should have been for
	  variables y, x which
	  vary in both the u and v directions.
	  - deriv was numerically unstable whenever Du(x) or Dv(x) was very
	  small, but
	  nonzero.
	  * Remove SO_DerivType from the shader exec env interface file in
	  favour of
	  keeping it as a private method of the shader execution
	  environment.

2008-03-06 12:00  ltatkinson

	* cmake/modules/FindBoost.cmake: Fix oversight in CMake 'Advanced'
	  option recently added.

2008-03-06 09:56  ltatkinson

	* cmake/modules/FindBoost.cmake: Small change to Boost library
	  detection under Linux, reflecting the difference in naming.

2008-03-04 14:23  ltatkinson

	* aqsistypes/link.cmake: Fixed issue with aqsistypes not finding
	  the Boost include directory when building (tested under OS X).

2008-03-04 13:04  ltatkinson

	* cmake/modules/FindBoost.cmake: Fixed typo in previous 'Boost
	  Detection' commit and revised the library names (-mt) under
	  non-Windows platforms.

2008-03-04 12:41  ltatkinson

	* cmake/modules/FindBoost.cmake: Updated Boost detection to
	  acknowledge the versioning suffix often used on its files, which
	  is controllable via the new 'AQSIS_BOOST_VERSION_SUFFIX'
	  variable/argument (default set at 1.34).

2008-03-04 00:43  c42f

	* texturing/texlib/shadowsampler.cpp: * Make shadow filtering use
	  the internal "trunc" wrapmode so that artifacts are
	  avoided at the edges of shadowmaps.

2008-03-03 09:52  anteru

	* cmake/modules/FindBoost.cmake, cmake/modules/FindFLTK.cmake,
	  cmake/modules/FindJPEG.cmake, cmake/modules/FindTIFF.cmake,
	  cmake/modules/FindZLIB.cmake,
	  shadercompiler/shadervm/CMakeLists.txt: * allow compiling with
	  MSVC 9 (Visual Studio 2008)
	  * fixed: add_library shadervm was called twice

2008-03-02 14:38  c42f

	* texturing/texlib/sampleaccum.h, texturing/texlib/texbufsampler.h:
	  * Fix a potential bug in texture channel selection for shadow
	  sampling. This
	  problem would have resulted in strange results, and possibly a
	  segfault.

2008-03-02 14:11  c42f

	* shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  texturing/texlib/mipmaptexturesampler.h,
	  texturing/texlib/texturesampleoptions.cpp,
	  texturing/texlib/texturesampleoptions.h: * Factor the basic
	  options out of CqTextureSampleOptions and into
	  CqTextureSampleOptionsBase. Make a new class for
	  CqTextureSampleOptions.
	  * Add the "lerp" option to texture() to allow manual selection of
	  mipmap
	  interpolation if desired.

2008-03-02 11:40  c42f

	* aqsistypes/aqsis_types.h, renderer/ddmanager/ndspy.h,
	  texturing/texlib/channelinfo.h,
	  texturing/texlib/exrinputfile.cpp,
	  texturing/texlib/exrinputfile.h,
	  texturing/texlib/iimagechannel.h,
	  texturing/texlib/imagechannel.cpp,
	  texturing/texlib/imagechannel.h,
	  texturing/texlib/imagechannel_test.cpp,
	  texturing/texlib/itexinputfile.h,
	  texturing/texlib/itexoutputfile.h,
	  texturing/texlib/itexturesampler.cpp,
	  texturing/texlib/itiledtexinputfile.h,
	  texturing/texlib/mixedimagebuffer.cpp,
	  texturing/texlib/mixedimagebuffer.h,
	  texturing/texlib/mixedimagebuffer_test.cpp,
	  texturing/texlib/texturebuffer.h,
	  texturing/texlib/tiffdirhandle_test.cpp,
	  texturing/texlib/tiffinputfile.cpp,
	  texturing/texlib/tiffinputfile.h,
	  texturing/texlib/tiffinputfile_test.cpp,
	  texturing/texlib/tiffoutputfile.cpp: * Create some new integer
	  types of known bit-width for use in aqsis eg:
	  TqInt32, TqUint8. These are especially important for portability
	  of code
	  handling image channels of varying bit widths.

2008-03-02 10:08  c42f

	* aqsistypes/aqsismath.h, texturing/texlib/mipmaptexturesampler.h:
	  * Move log2() function out of mipmap texture sampler details, and
	  into
	  aqsismath. Will be useful in the near future for converting the
	  mipmapping
	  to use aqsistex.

2008-03-02 06:14  c42f

	* texturing/texlib/tiffdirhandle.cpp: * Relax pedantic checking of
	  TIFFTAG_ORIENTATION. This was preventing the
	  killeroo example from rendering. When the check is relaxed,
	  killeroo renders
	  fine, suggesting that the source textures have the expected
	  top-left
	  orientation, despite advertising otherwise via the
	  TIFFTAG_ORIENTATION tag.

2008-03-02 01:30  pgregory

	* aqsistypes/exception.h, aqsistypes/file.h,
	  cmake/modules/FindTIFF.cmake,
	  shadercompiler/shadervm/CMakeLists.txt,
	  texturing/texlib/imagechannel.h,
	  texturing/texlib/itexturemap_old.h,
	  texturing/texlib/texturesampleoptions.h,
	  texturing/texlib/wrapmode.h: A few fixes to the aqsistex merge to
	  get it working cleanly under Win32/MSVC8.
	  
	  * Added a SHARE declaration to "texFilterTypeFromString", and
	  "findFileInPath".
	  * Removed unnecessary SHAREing from "IqTextureMapOld",
	  "CqImageChannelTyped", and from the AQSIS_DECLARE_EXCEPTION
	  macro.
	  * libtiffxx is not a separate library under Win32, fix
	  FindTIFF.cmake to show this.
	  * Make shadervm link with aqsistex.
	  * Make the string comparisons explicit in wrapmode.h.

2008-03-01 15:31  c42f

	* texturing/texlib/texturesampleoptions.h: * Fix oversight in
	  default number of shadow samples. One sample looks
	  terrible per filter invocation looks terrible! The RTS should now
	  pass with
	  no significant regressions. Some RTS reference images need to be
	  updated.

2008-03-01 14:56  c42f

	* CMakeLists.txt, Doxyfile, aqsistypes/exception.h,
	  aqsistypes/file.cpp, aqsistypes/file.h, aqsistypes/lowdiscrep.h,
	  aqsistypes/matrix2d.h, aqsistypes/matrix2d_test.cpp,
	  aqsistypes/memorysentry.cpp, aqsistypes/memorysentry.h,
	  aqsistypes/posix/aqsis_compiler.h, aqsistypes/smartptr.h,
	  aqsistypes/win32/aqsis_compiler.h, cmake/modules/FindTIFF.cmake,
	  displays/piqsl/CMakeLists.txt,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/imagebuffer.cpp, displays/piqsl/imagebuffer.h,
	  displays/piqsl/imagebuffer_test.cpp,
	  displays/piqsl/imagechannel.cpp, displays/piqsl/imagechannel.h,
	  displays/piqsl/imagechannel_test.cpp, displays/piqsl/piqsl.cpp,
	  displays/piqsl/piqslbase.cpp, interfaces/irenderer.h,
	  interfaces/ishaderexecenv.h, interfaces/itexturemap.h,
	  renderer/render/CMakeLists.txt, renderer/render/blobby.cpp,
	  renderer/render/environment.cpp,
	  renderer/render/environment_old.cpp,
	  renderer/render/renderer.cpp, renderer/render/renderer.h,
	  renderer/render/ri.cpp, renderer/render/shadowmap.cpp,
	  renderer/render/shadowmap_old.cpp,
	  renderer/render/texturemap.cpp, renderer/render/texturemap.h,
	  renderer/render/texturemap_old.cpp,
	  renderer/render/texturemap_old.h,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/CMakeLists.txt,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slxargs/CMakeLists.txt, texturing/texlib,
	  texturing/texlib/CMakeLists.txt,
	  texturing/texlib/cachedfilter.cpp,
	  texturing/texlib/cachedfilter.h,
	  texturing/texlib/channelinfo.cpp, texturing/texlib/channelinfo.h,
	  texturing/texlib/channellist.cpp, texturing/texlib/channellist.h,
	  texturing/texlib/channellist_test.cpp,
	  texturing/texlib/dummyshadowsampler.h,
	  texturing/texlib/dummytexturesampler.cpp,
	  texturing/texlib/dummytexturesampler.h,
	  texturing/texlib/ewafilter.cpp, texturing/texlib/ewafilter.h,
	  texturing/texlib/export.cmake, texturing/texlib/exrinputfile.cpp,
	  texturing/texlib/exrinputfile.h,
	  texturing/texlib/filterfunctor.h,
	  texturing/texlib/filtersupport.h,
	  texturing/texlib/iimagechannel.h,
	  texturing/texlib/imagechannel.cpp,
	  texturing/texlib/imagechannel.h,
	  texturing/texlib/imagechannel_test.cpp,
	  texturing/texlib/imagefiletype.h,
	  texturing/texlib/ishadowsampler.cpp,
	  texturing/texlib/ishadowsampler.h,
	  texturing/texlib/itexinputfile.cpp,
	  texturing/texlib/itexinputfile.h,
	  texturing/texlib/itexoutputfile.cpp,
	  texturing/texlib/itexoutputfile.h,
	  texturing/texlib/itexturemap_old.h,
	  texturing/texlib/itexturesampler.cpp,
	  texturing/texlib/itexturesampler.h,
	  texturing/texlib/itiledtexinputfile.h,
	  texturing/texlib/link.cmake, texturing/texlib/magicnumber.cpp,
	  texturing/texlib/magicnumber.h,
	  texturing/texlib/magicnumber_test.cpp, texturing/texlib/mipmap.h,
	  texturing/texlib/mipmaplevelcache.h,
	  texturing/texlib/mipmaptexturesampler.h,
	  texturing/texlib/mixedimagebuffer.cpp,
	  texturing/texlib/mixedimagebuffer.h,
	  texturing/texlib/mixedimagebuffer_test.cpp,
	  texturing/texlib/sampleaccum.h, texturing/texlib/samplequad.cpp,
	  texturing/texlib/samplequad.h,
	  texturing/texlib/samplequad_test.cpp,
	  texturing/texlib/samplevector.h,
	  texturing/texlib/shadowsampler.cpp,
	  texturing/texlib/shadowsampler.h,
	  texturing/texlib/stochasticsuppiter.cpp,
	  texturing/texlib/stochasticsuppiter.h,
	  texturing/texlib/texbufsampler.h,
	  texturing/texlib/texexception.h,
	  texturing/texlib/texfileattributes.h,
	  texturing/texlib/texfileheader.cpp,
	  texturing/texlib/texfileheader.h,
	  texturing/texlib/texfileheader_test.cpp,
	  texturing/texlib/texturebuffer.h,
	  texturing/texlib/texturecache.cpp,
	  texturing/texlib/texturecache.h,
	  texturing/texlib/texturesampleoptions.cpp,
	  texturing/texlib/texturesampleoptions.h,
	  texturing/texlib/tiffdirhandle.cpp,
	  texturing/texlib/tiffdirhandle.h,
	  texturing/texlib/tiffdirhandle_test.cpp,
	  texturing/texlib/tifffile_test.h,
	  texturing/texlib/tiffinputfile.cpp,
	  texturing/texlib/tiffinputfile.h,
	  texturing/texlib/tiffinputfile_test.cpp,
	  texturing/texlib/tiffoutputfile.cpp,
	  texturing/texlib/tiffoutputfile.h,
	  texturing/texlib/tifftest_examples.cpp,
	  texturing/texlib/tilearray.h, texturing/texlib/wrapmode.h: Merge
	  aqsistex texture work into the trunk at revision 1954:
	  svn merge
	  https://aqsis.svn.sourceforge.net/svnroot/aqsis/trunk/aqsis
	  https://aqsis.svn.sourceforge.net/svnroot/aqsis/branches/texfiltering/aqsis
	  Some small mistakes were noticed and corrected before committing:
	  * changes to display/display.cpp were reverted.
	  * inclusion of M_PI in aqsistypes/aqsismath.h was reverted
	  * Accidental changes in interfaces/ilightsource and
	  renderer/render/lights.h
	  were reverted.
	  
	  
	  Major new features
	  ==================
	  * Extensible and centralized image file loading and saving.
	  * High quality anisotropic texture filtering based on EWA.
	  
	  In addition, there should be a significant speed boost for any
	  task involving
	  the sampling of plain textures.
	  
	  
	  Summary of changes by path:
	  ===========================
	  
	  interfaces/
	  -----------
	  * Minor changes to IqRenderer to support the new texture cache.
	  * removed IqTextureMap to texture library (will be deprecated.)
	  
	  displays/piqsl/
	  ---------------
	  * Made piqsl use the new file loading mechanism (Now supports all
	  texture
	  files recognised by aqsistex).
	  * Made piqsl support simple texture zooming (needs to be replaced
	  with a more
	  robust mechanism).
	  * Made piqsl support loading multiple images from the same
	  texture file.
	  * Removed several files into texture library.
	  
	  texturing/texlib/
	  ----------------
	  * The new texture library (libaqsistex)
	  * Major new features as above:
	  - Extensible and centralized image file loading capabilities.
	  - High quality anisotropic texture filtering based on EWA
	  * PCF shadow sampling
	  * Facilities for manipulating the mixed channel data coming out
	  of the Dspy interface.
	  * General mipmap downsampling
	  * Improved texture cache mechanism
	  
	  shadercompiler/
	  ---------------
	  * Completely rewritten texture shadeops for new interface and
	  efficiency
	  * New discrete difference operators for all the times when you
	  want
	  difference across a grid, not derivatives.
	  * Updated (more minimal) shader environment variable dependencies
	  for texture shadeops.
	  
	  aqsistypes/
	  -----------
	  * New matrix2d type to support EWA filtering
	  * findFileInPath() function to avoid unnecessary use of CqFile
	  * AQSIS_THROW macro for easing the throwing of exceptions and
	  encouraging
	  informative error messages.
	  
	  renderer/render/
	  ----------------
	  * Changes for use of the new texture interfaces.
	  * Moved old texture implementation to files with "_old" suffix to
	  emphasize
	  that they're deprecated.

2008-02-24 01:55  c42f

	* renderer/render/imagers.cpp, renderer/render/imagers.h: * Really
	  (fingers crossed) fix the bug referred to in svn revision 1934.
	  The
	  previous "fix" resulted in a crash according to a comment on IRC
	  by Michel
	  Joron. Imager shaders should now run on all the vertices of a
	  grid, rather
	  than leaving the bottom right of the grid uninitialized.

2008-02-22 02:04  c42f

	* renderer/render/bucket.h, renderer/render/imagers.cpp: * Fix bug
	  in imager shaders. Shading variables weren't being initialized
	  properly because the bottom and right vertices of every grid were
	  missed out.
	  The new texture library picked up the error since it uses
	  derivatives on the
	  grid to determine the filter region, and these were coming out
	  very large
	  near the uninitialized parts of the grid, resulting in huge
	  filter regions.

2008-02-21 21:38  c42f

	* build_tools/boostautotestmain.cpp: Update boost auto test macros
	  for boost-1.34.1. This update is needed to
	  cause main() to be generated for the tests, otherwise a linker
	  error occurs.

2008-02-20 17:56  joron

	* rib/rib2/parser.yy: Fix for bug # 1883043; strange it took the
	  number of matrices when it is not required at all. Later RiColor
	  calls were checking again the number of matrices it does not make
	  senses to me.
	  Air, 3delight and Pixie don't implanted at all RiColorSamples()
	  maybe it should stay not supported.

2008-02-20 11:16  pgregory

	* aqsisrc.in.cmake, displays/display/display.cpp: Switch to piqsl
	  as the default framebuffer. The original one is still available
	  as "oldframebuffer". You can switch back by redirecting
	  "framebuffer" to the main display library in aqsisrc, display has
	  been modified to recognise "framebuffer" and "oldframebuffer" as
	  the type for a framebuffer display.

2008-02-20 02:35  joron

	* renderer/render/bucket.cpp, renderer/render/bucket.h: Remove
	  unnecessary logging; and the useJitter is more descriptive than
	  bJitter.

2008-02-19 14:54  joron

	* renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/imagebuffer.cpp: Instead of computing the value
	  of bJitter (for each buckets) in PrepareBucket(); just let
	  imagebuffer.cpp to compute once per render and pass along that as
	  parameter to PrepareBucket().

2008-02-19 13:34  c42f

	* renderer/aqsis/aqsis.cpp: Improve renderer signal handling in an
	  attempt to avoid crashes.
	  * The calls to the Aqsis::log() formatting functions from inside
	  the
	  asynchronous signal handler were causing regular crashes or
	  indefinite
	  freezing when killing an aqsis process with SIGINT via CTRL-C (on
	  linux).
	  - This patch attempts to fix the problem by making the signal
	  handler more
	  minimal. It still invokes undefined behaviour, but in a more
	  localized
	  manner. The behaviour is "almost-defined" under POSIX and appears
	  to fix the
	  crashes ;-)

2008-02-18 19:41  ltatkinson

	* CMakeLists.txt: Further to the previous 'boost.wave' (aqsl)
	  commit, stopped the build system creating the unnecessary
	  'shadercompiler/slpp' directory.

2008-02-18 15:25  minty

	* cmake/modules/FindBoost.cmake,
	  shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/aqsl/aqslcomp.cpp, shadercompiler/slpp: Update
	  AQSL to use boost::wave for preprocessing.
	  Improves syntax error line number reporting in aqsl
	  Fixe multiple file compilation
	  Bug Fix #1182387 - Include directories don't follow the parent
	  file.

2008-02-17 07:07  c42f

	* renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/imagebuffer.cpp: Make sure the "jitter" option to
	  the stochastic hider is respected.
	  * When rendering shadow maps, it is useful to turn off jittering
	  of samples
	  to obtain a more smooth outline to the shadowed shapes.
	  * Other renderers (PRMan and 3delight at least) support this
	  option.

2008-02-17 01:54  c42f

	* renderer/render/micropolygon.cpp: * Add a check for edge
	  degeneracy before expanding grids in the anti grid-crack
	  hack. This prevents problems with degenerate grids, such as those
	  generated
	  near the poles of spheres.

2008-02-15 19:01  joron

	* rib/ri2rib/ascii.cpp: Fix for Bug [ 1891461 ] "Weird"
	  DepthOfField RIB output

2008-02-15 08:07  pgregory

	* renderer/render/procedural.cpp: Fix recent change to RunProgram
	  error checking to work properly on Linux.

2008-02-14 16:47  pgregory

	* renderer/render/procedural.cpp: Add some extra checking to the
	  procedural RunProgram code in case we can't successfully open the
	  input/output streams.
	  
	  This is to alleviate the problem with bug #1885272, which uses
	  nested calls to RunProgram, and so was running out of system file
	  handles. Not sure if there is a better fix than this, if not, the
	  bug will have to be closed as fixed, as best we can.

2008-02-14 15:11  pgregory

	* renderer/render/micropolygon.cpp, renderer/render/micropolygon.h:
	  * Fix #1746338
	  The backface culling code in CqMicroPolyGrid::Shade resulted in
	  one timeframe of a deforming grid being eliminated, and thus
	  crashing. As it happens, backface culling has to be done at a
	  different stage for deforming grids, so that only if an MP is
	  backface culled in all timeframes does it get removed.

2008-02-12 18:17  joron

	* renderer/render/micropolygon.cpp: Instead of keeping track of
	  CqVector4D in the spline interpolation; and since
	  the spline were refactor to be templates... I decide to keep
	  track of TqFloats
	  instead.

2008-02-12 16:37  c42f

	* renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  rib/rib2/librib.cpp: * Add a workaround for the grid cracking
	  problem. It works by expanding the
	  boundaries of every micropolygon grid by the amount specified in
	  a new attribute,
	  Attribute "aqsis" "uniform float expandgrids".
	  * This appears to work very well for opaque grids, usually
	  needing only a very
	  minor expansion (often between 0.1 and 0.01) to cover all visible
	  cracks.
	  * The hack has two major known drawbacks:
	  - It's completely unworkable for semitransparent surfaces, since
	  it causes
	  double hits in the region where the grids are exanded.
	  - It messes up "depthfilter" "midpoint" for the same reasons, so
	  shadows
	  generated with the technique will require a carefully selected
	  bias, as is
	  the case with "depthfilter" "min".

2008-02-12 15:39  pgregory

	* renderer/render/subdivision2.h: * Fix the recently reported
	  problem on the Aqsis forums related to the interpolation of
	  "facevertex" values on subdivision surfaces.
	  There were two problems, firstly, the handling of facevertex was
	  completely switched off, and due to the way the state machine
	  worked, they were being rendered as facevarying. Secondly, there
	  was an error in the code that checked for boundary edges, it was
	  inadvertently comparing the vertex index against the face vertex
	  index, which will not work.

2008-02-12 15:38  joron

	* rib/ri2rib/output.cpp: Fix for [ 1891457 ] RiBlobby() produces
	  invalid RIB

2008-02-12 13:41  pgregory

	* CMakeLists.txt: Define _USE_MATH_DEFINES in the Win32 build to
	  ensure that things like M_PI etc. are defined in math.h.

2008-02-10 05:45  c42f

	* shadercompiler/slparse/funcdef.cpp: * Add a partial fix for bug
	  1846441 - Crash with simple (malformed?) shader.
	  The problem was that the faceforward() function needs the
	  geometric normal,
	  Ng, but this requirement wasn't specified in the corresponding
	  CqFuncDef.
	  * This patch removes the crash, but the resulting image is
	  probably *not* what
	  is expected by the user. The supplied shader is probably
	  malformed and
	  should trigger a compiler error.

2008-02-10 04:50  c42f

	* renderer/render/cubiccurves.cpp, renderer/render/surface.cpp: *
	  Fix bug 1885910: "Sometimes aqsis doesn't render B-Splines Curves
	  correctly"
	  This bug was the result of aqsis incorrectly computing the
	  tangents to bezier
	  splines in CqCubicCurveSegment::CalculateTangent(), and as such
	  is really a
	  reoccurance of bug 1102605. The reoccurance happened because the
	  fix for
	  1102605 wasn't robust enough to small floating point numerical
	  errors when a
	  spline has repeated control points.
	  * Added regression test case for bug 1885910.
	  * A few small cleanups which were performed while fixing the bug
	  - Clean up the initialization list to the CqSurface constructor.
	  - Clean up some potential divide-by-zero bugs which were
	  implicated as part
	  of the cause of bug 1885910 in
	  CqCubicCurveSegment::SplitToPatch().

2008-02-09 12:32  c42f

	* renderer/ddmanager/ddmanager.cpp, renderer/render/imagebuffer.h:
	  * Make sure crop window resolution and offset are correct,
	  following a
	  discussion with Matthias on the mailing list.
	  * Minor additional cleanups in ddmanager as well to make it get
	  more of the
	  relevant data from the imagebuffer rather than reinterpreting the
	  RiOptions
	  independently.

2008-02-09 09:34  c42f

	* renderer/render/curves.cpp: * Fix bug which assumed that the
	  "limits" "gridsize" option consists of two
	  integers. In practise it's only one, so the second integer was
	  coming from
	  somewhere random in memory. Occasionally when the second integer
	  is 0 this
	  resulted in an infinite loop.
	  * Updated RTS reference image to reflect resulting (minor)
	  changes.

2008-02-09 08:49  c42f

	* aqsistypes/cellnoise.cpp: * Add forgotten inline qualifier to
	  permTableIndex() helper function. The
	  compiler would proably inline it anyway, but just to be sure...

2008-02-09 08:46  c42f

	* aqsistypes/cellnoise.cpp: * Fix cellnoise() bug - undefined
	  behaviour was invoked by a static cast from a
	  negative float to an unsigned integer. Fixed in favour of merely
	  implementation-defined behaviour ;-)

2008-02-09 07:21  c42f

	* aqsistypes/aqsis_types.h, aqsistypes/color.cpp,
	  displays/display/display.cpp, renderer/render/blobby.cpp,
	  renderer/render/bound.cpp, renderer/render/bucket.cpp,
	  renderer/render/filters.cpp, renderer/render/imagebuffer.cpp,
	  renderer/render/imagepixel.h, renderer/render/micropolygon.cpp,
	  renderer/render/nurbs.cpp, renderer/render/occlusion.cpp,
	  renderer/render/parameters.h, renderer/render/points.cpp,
	  renderer/render/quadrics.cpp, renderer/render/ri.cpp,
	  renderer/render/shadowmap.cpp, renderer/render/subdivision2.cpp,
	  renderer/render/texturemap.cpp, renderer/render/texturemap.h,
	  rib/rib2/parser.yy,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervm1.cpp: * Remove the function-like
	  macros MIN() and MAX(). Aqsis should now be free of
	  all global function-like macros.

2008-02-09 05:40  c42f

	* aqsistypes/aqsis_types.h, aqsistypes/aqsismath.h,
	  aqsistypes/aqsismath_test.cpp, aqsistypes/color.cpp,
	  aqsistypes/matrix.cpp, aqsistypes/random.cpp,
	  displays/display/display.cpp, renderer/ddmanager/ddmanager.cpp,
	  renderer/render/bucket.cpp, renderer/render/imagebuffer.cpp,
	  renderer/render/imagepixel.cpp, renderer/render/micropolygon.cpp,
	  renderer/render/nurbs.cpp, renderer/render/options.cpp,
	  renderer/render/patch.cpp, renderer/render/quadrics.cpp,
	  renderer/render/renderer.cpp, renderer/render/ri.cpp,
	  renderer/render/shadowmap.cpp, renderer/render/stats.cpp,
	  renderer/render/subdivision2.cpp, renderer/render/texturemap.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp: * Death to
	  "function" macros! This patch removes the FLOOR() CEIL() ROUND()
	  LERP() CLAMP() RAD() and DEG() function-like macros. Templated
	  functions
	  from aqsismath.h or the standard library cmath header are used as
	  replacements.
	  * aqsismath.h now includes <cmath>, but is otherwise relatively
	  lightweight.
	  It should probably be the standard file to include for future use
	  of math
	  functions.
	  * The MIN() and MAX() function-like macros are yet to be removed;
	  they're next.

2008-02-08 23:47  pgregory

	* renderer/render/options.cpp: Fix bug #1402331, the ScreenWindow
	  changes were being applied to the perspecive (camera to screen)
	  transformation incorrectly.

2008-02-06 22:03  pgregory

	* displays/display/display.cpp: Fix bug #1883048. The behaviour now
	  matches that of PRMan's framebuffer display (not 'it', we would
	  ideally make 'piqsl' match 'it'). If an origin is specified, but
	  the image is not cropped, it is ignored. If an origin is
	  specified, and the image is cropped it will be used (although
	  Aqsis will fill in the origin itself in this case, so manually
	  specifying the origin is pointless).

2008-02-05 13:40  pgregory

	* rib/rib2/parser.yy: Fix bug #1881123, implemented support for the
	  empty variant of the DepthOfField RIB request, resetting the DoF
	  settings to default, and thus turning off DoF processing.

2008-02-05 11:22  pgregory

	* interfaces/irenderer.h, renderer/ddmanager/ddmanager.cpp,
	  renderer/render/curves.h, renderer/render/imagebuffer.cpp,
	  renderer/render/lights.cpp, renderer/render/micropolygon.cpp,
	  renderer/render/nurbs.cpp, renderer/render/options.cpp,
	  renderer/render/patch.cpp, renderer/render/points.cpp,
	  renderer/render/polygon.cpp, renderer/render/quadrics.cpp,
	  renderer/render/renderer.cpp, renderer/render/renderer.h,
	  renderer/render/ri.cpp, renderer/render/shadowmap.cpp,
	  renderer/render/subdivision2.cpp, renderer/render/surface.cpp,
	  renderer/render/transform.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shadervm/shadervm.cpp: Fix bug #1880883, as
	  mentioned in the bug report, the order of multiplication in
	  RiTransformPoints was wrong, corrected.
	  
	  Fix bug #1880886. This was quite a big fix, as there was no way
	  to report back that a requested transformation wasn't valid. I
	  fixed it so that the mat?SpaceToSpace functions now take a result
	  matrix reference to be filled in, and return a bool indicating
	  success.

2008-02-04 20:46  pgregory

	* renderer/render/ri.cpp: Fix bug #1880879, check the lightsource
	  passed is not null *before* trying to get a shared pointer from
	  it.

2008-02-04 20:08  pgregory

	* renderer/render/ri.cpp: Fix bug #1880865, change the names of
	  "Ka", "Ks", "Kd" and "Kr" to the proper case.

2008-01-22 14:06  ltatkinson

	* distribution/win/nsis/setup.nsi: Fix Windows (NSIS) installer
	  issue, where the %PATH% variable(s) 'Type' was incorrectly being
	  changed from 'REG_EXPAND_SZ' to 'REG_SZ'.
	  
	  This should warrant an incremental release (1.2.1) given the
	  nature of this issue!

2008-01-20 21:07  ltatkinson

	* cmake/platform/macosx.cmake: Revised OS X (CPACK) installer
	  naming-convention, separating i386 from PPC.

2008-01-20 03:41  c42f

	* content/ribs/scenes/sci_volumes,
	  content/ribs/scenes/sci_volumes/COPYING,
	  content/ribs/scenes/sci_volumes/README.txt,
	  content/ribs/scenes/sci_volumes/boundingbox_shader.sl,
	  content/ribs/scenes/sci_volumes/boxed_volume_glow.sl,
	  content/ribs/scenes/sci_volumes/data,
	  content/ribs/scenes/sci_volumes/data/iso_3d_restart.dat.gz,
	  content/ribs/scenes/sci_volumes/data/test.dat,
	  content/ribs/scenes/sci_volumes/data/test2.dat,
	  content/ribs/scenes/sci_volumes/renderframes.sh,
	  content/ribs/scenes/sci_volumes/src,
	  content/ribs/scenes/sci_volumes/src/Makefile,
	  content/ribs/scenes/sci_volumes/src/array3d.h,
	  content/ribs/scenes/sci_volumes/src/sample_vol_shadeops.cpp,
	  content/ribs/scenes/sci_volumes/src/volumesampler.cpp,
	  content/ribs/scenes/sci_volumes/src/volumesampler.h,
	  content/ribs/scenes/sci_volumes/volume.rib: * Add the volume data
	  visualization code which I was playing with a while ago
	  to the content directory as an example of (1) volume rendering
	  and (2)
	  writing DSO shadeops. More than one person (two or three?) have
	  requested
	  this scene now, so hopefully it will be a useful example.

2008-01-18 21:05  c42f

	* renderer/render/micropolygon.cpp: * Fix bug: micropolygons were
	  being transparency-culled before the atmosphere
	  shader had a chance to run. This means that a transparent surface
	  intended
	  as a container for volumes was culled without the appropriate
	  volume effects
	  ever showing inside.

2008-01-18 13:16  c42f

	* shadercompiler/shadervm/CMakeLists.txt: * Make sure the shadeop.h
	  header is installed so DSO shadeops can be compiled.

2008-01-12 09:23  c42f

	* aqsistypes/exception.cpp, aqsistypes/exception.h: * Create a
	  macro, AQSIS_DECLARE_EXCEPTION() to ease the task of creating new
	  exception classes. No more copy and pasting of boilerplate code
	  each time a
	  new exception type is needed.
	  * Declare the classes XqInternal, XqEnvironment, XqValidation
	  with this new
	  mechanism.

2008-01-12 05:52  c42f

	* aqsistypes/pool.h: * Add a workaround for bug #1830201.
	  Unfortunately, I haven't been able to
	  understand if this is a compiler bug or a bug in our code. In any
	  case, this
	  workaround fixes the disasterous memory leak which results when
	  using g++-3.4.

2008-01-08 16:46  mafm

	* aqsistypes/posix/socket_system.cpp, argparse/argparse.cpp,
	  displays/d_xpm/aspXpm.h, displays/display/display.cpp,
	  renderer/aqsis/aqsis.cpp, renderer/ddmanager/ddmanager.cpp,
	  renderer/render/blobby.cpp, renderer/render/bucket.cpp,
	  renderer/render/condition.cpp, renderer/render/environment.cpp,
	  renderer/render/ri_cache.h, renderer/render/shadowmap.cpp,
	  renderer/render/stats.cpp, renderer/render/texturemap.cpp,
	  rib/miqser/miqser.cpp, rib/ri2rib/context.cpp,
	  rib/ri2rib/output.cpp, rib/rib2/bdec.cpp, rib/rib2/parser.yy,
	  rib/rib2ri/librib2ri.cpp, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/slparse/parser.yy, texturing/teqser/teqser.cpp:
	  Fixing header includes, so it works with the stricter GCC 4.3
	  (thanks Nicolas Chauvet from Fedora for reporting).

2008-01-08 13:54  mafm

	* renderer/render/rifile.h: Fix potential bug due to GCC 4.3
	  reporting: 'warning: comparison with string literal results in
	  unspecified behaviour'. That comparison was comparing the
	  addresses, not the contents of the string...

2008-01-05 23:33  c42f

	* renderer/render/stats.cpp, renderer/render/stats.h: * Add code to
	  stats output to tell the user which pixel filter they're using (I
	  spent quite a while a month ago tracking down the default filter
	  by reading
	  the source - this fixes at least that problem.)

2008-01-05 23:31  c42f

	* interfaces/iparameter.h: * Add an appropriate virtual destructor
	  to IqParameter (warned by g++-4.1)

2007-12-01 14:56  pgregory

	* renderer/render/transform.cpp: Fix a strange problem with
	  transformation motion blur. When RiTransform was being used in
	  the MotionBegin/End block, the 'handedness' of the keyframe
	  transform was undefined.
	  
	  Also, ensure that all constructors of CqTransform result in a
	  defined value for m_Handedness.
	  
	  Thanks again to valgrind for helping track this one down, what a
	  great tool!

2007-11-24 23:56  c42f

	* coding_standard/codestyle.cpp: * Updated unsigned integer
	  recommendation for clarity.

2007-11-24 23:47  c42f

	* coding_standard/codestyle.cpp: * Add recommendations on (not
	  using) unsigned ints to the code style document.

2007-11-24 14:33  pgregory

	* shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/slparse/typecheck.cpp: Fixes for bug #1837583.
	  
	  1) The shader compiler wasn't correctly typechecking
	  subexpressions to a hextuple construct. The possibility of
	  injecting a typecast broke the child iteration.
	  2) The varying loop over the child values in the hextuple
	  operator in the shadervm was not correctly subtracting 1 from the
	  varying size of it's children. This meant that the loop was
	  executed one too many times, more importantly accessing values
	  out of range in the RunningState.

2007-11-21 14:09  ltatkinson

	* README: Small formatting change to README file.

2007-11-19 14:46  ltatkinson

	* version.h.in.cmake: Small update to '-version' info generated by
	  the tools.

2007-11-16 14:25  ltatkinson

	* Doxyfile: Syntax update to previous Doxyfile (Doxygen) commit.

2007-11-15 23:11  ltatkinson

	* Doxyfile: Updated Doxyfile (Doxygen) to reflect recently removed
	  'plugins' directory.

2007-11-14 16:28  joron

	* renderer/render/ri.cpp: Remove the putenv for BAKE size no need
	  anymore.

2007-11-14 16:10  joron

	* texturing/teqser/teqser.cpp: Make sure the information about
	  "bake size" is provided to the kernel since now it is not using
	  plugin anymore; the conversion occurs direction into
	  MakeTexture().

2007-11-14 15:53  joron

	* renderer/render/ri.cpp: minor update eg. replace printf() with
	  Aqsis::log(), and remove SIZE constant it was not longer usefull.

2007-11-14 15:39  joron

	* renderer/render/ri.cpp: Add back the bake2tif in the aqsis'
	  kernel.

2007-11-14 09:58  cgtobix

	* CMakeLists.txt, texturing/plugins: Removal of the plugins.

2007-11-12 14:16  joron

	* renderer/render/shadowmap.cpp: A small optimization.

2007-11-12 14:15  joron

	* renderer/render/ri.cpp, rib/api/api.xml: Change near,far to be
	  cnear and cfar since both near and far keywords are restricted
	  usage by PC C compilers.

2007-11-12 05:31  c42f

	* renderer/render/ri.cpp: * Bugfix: [ 1829384 ]
	  Add input parameter validation for RiTorus. This prevents the
	  user from
	  putting nonsensical things like thetamax == 0.

2007-11-12 05:13  c42f

	* aqsistypes/validate.h, renderer/render/ri.cpp, rib/api/api.xml: *
	  Add exception try/catch guards to all Ri calls in ri.cpp.
	  * Remove the old parameter range validation system as being too
	  restrictive and
	  not easily used with constraints generated from api.xml.
	  * Rename input variables to a few Ri functions to be in line with
	  the spec
	  (helps with error messages from new validation code).

2007-11-12 01:52  c42f

	* content/shaders/include, content/shaders/include/patterns.sl,
	  content/shaders/surface/pinkGranite.sl: * Add my pink granite
	  shader to the content directory.
	  * Add a shader include directory for commonly used functions

2007-11-11 14:34  c42f

	* aqsistypes/spline.h: * Removed some unsigned integers in favour
	  of integers.

2007-11-10 04:37  c42f

	* shadercompiler/codegenvm/parsetreeviz.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp: * Make the graphviz
	  compiler backend write the shaderVM function names as the
	  labels of operator nodes, rather than the node name. This makes
	  it easier to
	  spot type conficts overlooked by the typecheck code.
	  * Fix a potential bug in the type code output for the shadervm
	  backend. This
	  probably never mattered in practise, since AFAIK MathOps between
	  types more
	  complicated than floats are handeled via IqParseNodeFunctionCall.

2007-11-09 23:45  c42f

	* shadercompiler/shaderexecenv/shadeops_deriv.cpp: * Fix bugs
	  introduced by the spline refactor in svn revision 1472.
	  In the case that the spline array wasn't varying, it was being
	  clear()ed
	  this led to the use of uninitialized values in the SO_*splinea()
	  shadops.

2007-11-09 14:57  joron

	* shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll: Fix the warnings about #pragma
	  wanring(disable...) since it is only required by Microsoft
	  compilers.

2007-11-07 20:45  joron

	* renderer/aqsis/aqsis.cpp: This is to catch the ^C in order to
	  restore the color of the console.
	  Often when you run with -verbose 3 and you interrupt the
	  rendering; the console
	  gets struck with the Green color... the signal processing will
	  restore the original color by printing a debug message.

2007-11-05 07:58  c42f

	* renderer/render/genpoly.cpp: * Fix an extremely obvious infinite
	  loop introduced in revision 1714... oops I
	  must be tired.

2007-11-05 06:25  c42f

	* renderer/render/genpoly.cpp, renderer/render/genpoly.h,
	  renderer/render/ri.cpp: * Bugfix: [ 1690770 ] quads sometimes not
	  rendered in PointsGeneralPolygons
	  * This bug was due to an incorrect algorithm for determining a
	  nondegenerate
	  projection axis for planar polygons in 3D. The bounding box
	  doesn't suffice
	  for such a task - instead we need to compute the polygon normal.

2007-11-05 06:20  c42f

	* aqsistypes/vector3d.h: * Make sure that the CqVector3D classes
	  are passed by reference for min, max,
	  clamp and lerp helper functions.

2007-11-05 03:17  c42f

	* renderer/render/ri.cpp, renderer/render/ri_cache.h: * Fix a bug
	  which was causing a segfault when rendering a RIB which had a
	  cached
	  PointsGeneralPolygons with facevarying primvars.
	  * The reason for the crash was that RiCacheBase assumes it's
	  managing the
	  memory for its m_values array, while RiPointsGeneralPoylgonsV
	  sometimes
	  rewrites that array when it modified the "values" parameter array
	  in-place.
	  The solution is to take a copy of the values array before doing
	  any
	  modifications, and to pass that on to RiPointsPolygonsV instead.

2007-11-05 02:13  c42f

	* displays/piqsl/CMakeLists.txt, displays/piqsl/piqsldisplay.cpp,
	  displays/piqsl/piqsldisplay.h: * Add some cleanups which were
	  performed when hunting for bug #1776668.
	  * Remove piqsldisplay.h (it's only included by piqsldisplay.cpp)
	  and move
	  content to piqsldisplay.cpp.
	  * Rename SqDisplayInstance from piqsldisplay.cpp to
	  SqPiqslDisplayInstance.

2007-11-05 01:07  c42f

	* aqsistypes/plugins.cpp: * BugFix: "[ 1776668 ] Prepending a '+'
	  to display name causes segfault with piqsl"
	  * This bug was caused by clashing symbols from display.cpp and
	  display.h.
	  If dlopen() is passed the RTLD_GLOBAL flag, it adds all the
	  symbols from a
	  shared object into a *global* namespace. If more than one shared
	  object
	  defines the same symbol then calls are bound to the first
	  definition, even
	  for local calls within the second shared object! This can cause
	  code from
	  one shared object to call code from a completely unrelated one,
	  and nasty
	  behaviour inevitably follows. In this case the problem arose from
	  SqDisplayInstance being defined by both
	  displays/display/display.cpp and
	  displays/piqsl/piqsldisplay.cpp.

2007-11-04 22:59  c42f

	* shadercompiler/shaderexecenv/shadeops_inter.cpp: * Fix bug where
	  the PixelAspectRatio option was being read at the wrong array
	  index in the option() shadeop. (go valgrind!)

2007-11-04 17:08  c42f

	* interfaces/ishaderexecenv.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/slparse/parser.yy: * Fix break/continue support in
	  the RSL (bug #1801181).
	  - The approach taken here was to introduce a new shadop,
	  "RS_BREAK n" which
	  causes the top n running states on the stack to be turned off
	  wherever the
	  current running state is on. Because of the nonlocal nature of
	  break/continue, it would be difficult to insert the appropriate
	  RS_JZ without
	  scanning the n top running state stack entries, so for the moment
	  we just
	  turn off all elements of the current running state, and let it
	  fall out of
	  the loops as needed. That is, the appropriate jump is encountered
	  at the
	  next time the VM traverses the code for a while loop header
	  section.
	  - Some rearrangement of the code generator was needed; in
	  particular the way
	  that the running state pushing and popping is dealt with for the
	  WhileConstruct. The new version may actually be slightly more
	  efficient as
	  it turns off running the test part of the while block for those
	  running
	  state elements which have failed the test once. This is probably
	  a
	  generally applicable optimization for the other looping
	  constructs.
	  - Because of the restricted nature of the current semantic
	  checking code in the
	  shader VM, checking that the break level n isn't too large is
	  currently done
	  in the outputvm backend. This is a kludge, but we probably need a
	  rethink of
	  the way that semantic analysis is done in our parser anyway.
	  * Also, some small cleanups in vmoutput.cpp are present in this
	  commit.

2007-11-04 06:05  c42f

	* CMakeLists.txt, cmake/macros.cmake,
	  cmake/modules/FirstCMakeRun.cmake, cmake/platform/linux.cmake: *
	  Add a module which sets a FIRST_CMAKE_RUN flag the first time the
	  build
	  system is run in a particular directory. This allows for
	  overriding some
	  CMake defaults such as the compiler flags (-Wall now added on
	  linux), but
	  leaving the cached variables alone on subsequent runs so that the
	  user can
	  adjust them manually.
	  * Add a macro to set variables if they're currently blank.
	  * Use the above two changes to add the -Wall option on linux.
	  * Make "Release" the default CMAKE_BUILD_TYPE. Users compiling
	  the source for
	  themselves will now get an optimized build by default.
	  
	  Warning: This commit will screw with your current build tree by
	  changing the
	  CMAKE_BUILD_TYPE variable (as well as CMAKE_CXX_FLAGS +
	  CMAKE_C_FLAGS on
	  linux), but only the first time you use the new system.

2007-11-04 00:50  c42f

	* shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/codegenvm/export.cmake: * Add missing boost
	  include directories so that scoped_ptr.hpp and format.hpp
	  can be found on systems where the boost libraries aren't in the
	  system
	  include path.

2007-11-02 14:58  mafm

	* shadercompiler/codegenvm/parsetreeviz.h: Removing extra
	  qualifiers: exits with compiler error in GCC 4.2

2007-11-02 11:12  ltatkinson

	* AUTHORS: Fixed typo in AUTHORS file.

2007-10-30 18:49  pgregory

	* shadercompiler/shadervm/shaderstack.h: Ensure that the 'dup'
	  shadeop properly resizes the result temporary if it's varying.

2007-10-30 18:48  pgregory

	* rib/rib2/parser.yy: When using the ???_array_or_empty productions
	  in a rule, ensure that if the array is empty null is passed. This
	  is because using a pointer indirection on an empty array in VC8
	  causes an error.

2007-10-30 18:46  pgregory

	* rib/rib2/bdec.cpp: On win32, use the '_' prepended versions of
	  dup and fdopen, as otherwise the vc8 debugger barfs at that
	  point, making debugging difficult.

2007-10-29 03:51  c42f

	* renderer/ddmanager/CMakeLists.txt: * Make sure that ndspy.h is
	  installed.

2007-10-28 13:55  c42f

	* shadercompiler/codegenvm/codegengraphviz.cpp,
	  shadercompiler/codegenvm/parsetreeviz.cpp,
	  shadercompiler/codegenvm/parsetreeviz.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/parser.yy: * Initial modifications for
	  adding break and continue support to the shaderVM
	  (Bug #1801181). I've created a new AST node type
	  (IqParseNodeLoopMod) to
	  hold information on such break and continue elements, and the
	  compiler now
	  sensibly complains about things which it can't deal with yet.
	  * Mixed in with this is some cleanups to the AST graph generation
	  in
	  codegengraphviz.cpp (sorry for the mess).

2007-10-28 12:09  c42f

	* shadercompiler/codegenvm/parsetreeviz.cpp: * Modify some node
	  colours in the aqsl AST backend for clarity.

2007-10-28 11:53  c42f

	* shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/codegenvm/codegengraphviz.cpp,
	  shadercompiler/codegenvm/codegengraphviz.h,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/parsetreeviz.cpp,
	  shadercompiler/codegenvm/parsetreeviz.h: * Add a new compiler
	  backend to aqsl which has the ability to dump the AST for
	  debugging. The output language is the graphviz graph description
	  language.
	  Graphviz was chosen since it produces nice clear graphs of the
	  parse tree
	  with minimal effort.
	  * Add a new option "-backend" to aqsl to allow developers to hook
	  into the new
	  functionality.

2007-10-27 14:44  c42f

	* aqsistypes/CMakeLists.txt, cmake/macros.cmake: * Add cmake unit
	  test macro from the texfiltering branch into the trunk.
	  Update tests to use the new macro.

2007-10-27 14:22  c42f

	* aqsistypes/matrix.cpp, aqsistypes/matrix.h,
	  aqsistypes/matrix_test.cpp, aqsistypes/noise1234_test.cpp,
	  aqsistypes/vector2d_test.cpp, aqsistypes/vector4d_test.cpp,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/typecheck.cpp: * Fix a bunch of compiler
	  warnings, mostly of the "unsigned vs signed integer
	  comparison" type.
	  * Fix a bug in the unit test for CqMatrix::Rotate
	  * Remove some stale code from matrix.{h,cpp} and rearrange the
	  code for
	  operator<<

2007-10-27 14:18  c42f

	* aqsistypes/plugins.cpp: * Add automatic diagnostic output for
	  plugin loading errors. This has been
	  helpful on multiple occasions for debugging. The plugin class
	  system should
	  be rethought in the code review.

2007-10-26 21:31  pgregory

	* renderer/render/marchingcubes.cpp, renderer/render/ri.cpp: Fix
	  recent regression with RTS tests Bugs/Bug1676216/Bug1676216.rib,
	  Blobby/pairs.rib. i_N was being updated before the variable being
	  used to index it was initialised, causing a potential memory
	  stomper, that never actually occurred until a recent unrelated
	  commit. Valgrind was used to identify the fault, and at the same
	  time identified a mismatched memory allocation/deallocation, the
	  arrays in RiBlobbyV for the pointspolygons data were being
	  allocated as new[] in CqBlobby::polygonize but deleted using the
	  non-array delete function in RiBlobbyV, cleaned that up too.

2007-10-25 15:05  pgregory

	* renderer/render/transform.cpp: Fix bug in
	  SetCurrentTransformTime, the flip flag was being used
	  incorrectly.

2007-10-24 13:46  joron

	* texturing/teqser/teqser.cpp: fix a typo... sorry.

2007-10-24 13:43  joron

	* texturing/teqser/teqser.cpp: Support -gamma token in teqser for
	  both MakeTexture and MakeEnvLatLong.

2007-10-24 13:18  joron

	* renderer/render/ri.cpp: Process "gamma" token for RiMakeTextureV
	  and RiMakeLatLongEnvironment.
	  
	  this is mainly for OpenEXR plugin... it was always there as
	  support via
	  an environment variable; so I used the same trick I used for
	  "bake" token for
	  bake file converter.
	  
	  Usually OpenEXR have their output slightly higher than
	  expected... you could
	  experiment now and see the result specially with RTS/Ribs/Exr.
	  
	  eg:
	  MakeLatLongEnvironment "StageEnvLatLong.exr" "latlong.env" "box"
	  1 1
	  MakeLatLongEnvironment "StageEnvLatLong.exr" "latlong.env" "box"
	  1 1 "float gamma" -3.9 will give darker result
	  

2007-10-23 13:41  ltatkinson

	* CMakeLists.txt, aqsisrc.in.cmake,
	  distribution/win/nsis/setup.nsi: Enabled 'resource' searchpath
	  support.

2007-10-23 12:58  joron

	* texturing/plugins/common/pixelsave.c,
	  texturing/plugins/exr2tif/exr2tif.cpp: Make sure exr2tif will
	  save a float tiff.
	  it does a gamma correction and normalize (0..1.0) the channels
	  r,g,b,a.
	  pixelsave.c should allow now also "exr2tif" to save in floats.

2007-10-22 18:34  mafm

	* renderer/render/focus.h: Unused file.

2007-10-22 16:51  mafm

	* renderer/render/micropolygon.h: Converting some member attributes
	  of micropolygon classes in protected, instead of public. They
	  were not being misused, but it seems much cleaner to do it this
	  way.

2007-10-22 09:56  ltatkinson

	* AUTHORS, INSTALL, README: Small documentation update, reflecting
	  current development status.

2007-10-21 06:31  pseudonym

	* CMakeLists.txt: Fix for when FLTK is not present.

2007-10-20 23:20  pgregory

	* renderer/render/CMakeLists.txt, rib/rib2/CMakeLists.txt,
	  shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/slparse/CMakeLists.txt: Fix dependencies in the
	  flex/bison parser generation.

2007-10-19 22:40  pgregory

	* aqsistypes/CMakeLists.txt, argparse/CMakeLists.txt,
	  displays/d_exr/CMakeLists.txt, displays/d_sdcBMP/CMakeLists.txt,
	  displays/display/CMakeLists.txt, displays/piqsl/CMakeLists.txt,
	  renderer/render/CMakeLists.txt, rib/miqser/CMakeLists.txt,
	  rib/ri2rib/CMakeLists.txt, rib/rib2/CMakeLists.txt,
	  rib/rib2/local.cmake, rib/rib2ri/local.cmake,
	  shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  shadercompiler/shadervm/CMakeLists.txt,
	  shadercompiler/slparse/CMakeLists.txt,
	  shadercompiler/slparse/local.cmake,
	  shadercompiler/slxargs/CMakeLists.txt,
	  texturing/teqser/CMakeLists.txt: Update CMake configuration
	  files.
	  1) Avoid the duplicate 'parser' target for the shared use of RIB
	  parser project.
	  2) Include the header files into the targets, so that they appear
	  in the VC workspace.

2007-10-19 15:04  mafm

	* aqsistypes/spline.h, displays/piqsl/image.cpp,
	  displays/piqsl/piqsl.cpp, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/render/converter.cpp, renderer/render/converter.h,
	  shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/funcdef.h,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h: Getting rid of many warning
	  messages from compilers (I think that it's new for GCC 4.2),
	  unfortunately many messages are still present due to exigences of
	  RI. Hopefully I'm not breaking any interface.

2007-10-19 14:56  mafm

	* renderer/render/points.cpp: Minor cleanups: Removing unused
	  preprocessor line, dead code, and minor rearrangings of other
	  code

2007-10-18 22:56  ltatkinson

	* CMakeLists.txt, aqsisrc.in.cmake,
	  distribution/win/nsis/setup.nsi: Further 'defaultsearchpath'
	  update, supporting *all* (current) types.

2007-10-18 12:10  ltatkinson

	* texturing/teqser/teqser.cpp: Small update allowing teqser to
	  support PRMan-compatible 'filterwidth' arguments.

2007-10-18 06:00  c42f

	* aqsistypes/spline.h, renderer/render/bucket.h,
	  renderer/render/imagepixel.cpp, renderer/render/micropolygon.h,
	  renderer/render/ri.cpp, renderer/render/subdivision2.h,
	  renderer/render/texturemap.h: * Remove a bunch of compiler
	  warnings about comparisons between signed and
	  unsigned types. The warnings only came up in debug builds because
	  the
	  offending code was inside calls to assert().

2007-10-18 03:38  c42f

	* cmake/modules/FindOpenEXR.cmake: * Fix copy & paste typo when
	  checking whether OpenEXR isn't found.

2007-10-17 21:48  ltatkinson

	* aqsisrc.in.cmake, distribution/win/nsis/setup.nsi: Small revision
	  to new 'defaultsearchpath' support.

2007-10-17 13:08  c42f

	* aqsistypes/aqsis.h, aqsistypes/aqsis_types.h,
	  aqsistypes/bitvector.cpp, aqsistypes/bitvector.h,
	  aqsistypes/cellnoise.cpp, aqsistypes/cellnoise.h,
	  aqsistypes/color.cpp, aqsistypes/color.h, aqsistypes/exception.h,
	  aqsistypes/file.cpp, aqsistypes/file.h, aqsistypes/list.h,
	  aqsistypes/logging.cpp, aqsistypes/logging.h,
	  aqsistypes/logging_streambufs.h, aqsistypes/lowdiscrep.cpp,
	  aqsistypes/lowdiscrep.h, aqsistypes/matrix.cpp,
	  aqsistypes/matrix.h, aqsistypes/multitimer.cpp,
	  aqsistypes/multitimer.h, aqsistypes/noise.cpp,
	  aqsistypes/noise.h, aqsistypes/noise1234.cpp,
	  aqsistypes/noise1234.h, aqsistypes/plugins.cpp,
	  aqsistypes/plugins.h, aqsistypes/pool.h,
	  aqsistypes/posix/aqsis_compiler.h,
	  aqsistypes/posix/file_system.cpp,
	  aqsistypes/posix/multitimer_system.cpp,
	  aqsistypes/posix/multitimer_system.h,
	  aqsistypes/posix/socket_system.cpp, aqsistypes/random.cpp,
	  aqsistypes/random.h, aqsistypes/refcount.cpp,
	  aqsistypes/socket.h, aqsistypes/spline.cpp, aqsistypes/spline.h,
	  aqsistypes/sstring.cpp, aqsistypes/sstring.h,
	  aqsistypes/validate.h, aqsistypes/vector2d.cpp,
	  aqsistypes/vector2d.h, aqsistypes/vector3d.cpp,
	  aqsistypes/vector3d.h, aqsistypes/vector4d.cpp,
	  aqsistypes/vector4d.h, aqsistypes/win32/aqsis_compiler.h,
	  aqsistypes/win32/file_system.cpp,
	  aqsistypes/win32/multitimer_system.cpp,
	  aqsistypes/win32/multitimer_system.h,
	  aqsistypes/win32/socket_system.cpp, displays/display/display.cpp,
	  displays/display/display.h, displays/display/displayhelpers.c,
	  displays/piqsl/book.cpp, displays/piqsl/book.h,
	  displays/piqsl/bookbrowser.cpp, displays/piqsl/bookbrowser.h,
	  displays/piqsl/displayhelpers.c,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/displayserverimage.h,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/piqsl.cpp, displays/piqsl/piqsl.h,
	  displays/piqsl/piqslbase.cpp, displays/piqsl/piqslbase.h,
	  displays/piqsl/piqsldisplay.cpp, displays/piqsl/piqsldisplay.h,
	  interfaces/ibound.h, interfaces/iddmanager.h,
	  interfaces/ioptions.h, interfaces/iparameter.h,
	  interfaces/ishaderexecenv.h, renderer/ddmanager/ddmanager.cpp,
	  renderer/ddmanager/ddmanager.h, renderer/ddmanager/ndspy.h,
	  renderer/raytrace/raytrace.cpp, renderer/render/attributes.cpp,
	  renderer/render/attributes.h, renderer/render/bilinear.h,
	  renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/bunny.h, renderer/render/clippingvolume.h,
	  renderer/render/condition.h, renderer/render/converter.cpp,
	  renderer/render/converter.h, renderer/render/csgtree.cpp,
	  renderer/render/csgtree.h, renderer/render/cubiccurves.cpp,
	  renderer/render/curves.cpp, renderer/render/curves.h,
	  renderer/render/environment.cpp, renderer/render/focus.h,
	  renderer/render/forwarddiff.h, renderer/render/genpoly.cpp,
	  renderer/render/genpoly.h, renderer/render/graphicsstate.h,
	  renderer/render/imagebuffer.cpp, renderer/render/imagepixel.cpp,
	  renderer/render/imagers.h, renderer/render/inlineparse.cpp,
	  renderer/render/inlineparse.h, renderer/render/kdtree.h,
	  renderer/render/lath.cpp, renderer/render/lath.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/linearcurves.cpp, renderer/render/lookuptable.h,
	  renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/motion.h, renderer/render/mpdump.cpp,
	  renderer/render/mpdump.h, renderer/render/nurbs.h,
	  renderer/render/objectinstance.h, renderer/render/occlusion.cpp,
	  renderer/render/occlusion.h, renderer/render/options.cpp,
	  renderer/render/options.h, renderer/render/parameters.cpp,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/plane.h, renderer/render/points.h,
	  renderer/render/polygon.cpp, renderer/render/polygon.h,
	  renderer/render/procedural.cpp, renderer/render/procedural.h,
	  renderer/render/quadrics.cpp, renderer/render/quadrics.h,
	  renderer/render/render.cpp, renderer/render/render.h,
	  renderer/render/renderer.cpp, renderer/render/renderer.h,
	  renderer/render/ri_cache.h, renderer/render/ri_debug.h,
	  renderer/render/rifile.h, renderer/render/shaders.cpp,
	  renderer/render/shaders.h, renderer/render/shadowmap.cpp,
	  renderer/render/stats.cpp, renderer/render/stats.h,
	  renderer/render/subdivision2.cpp, renderer/render/subdivision2.h,
	  renderer/render/surface.cpp, renderer/render/surface.h,
	  renderer/render/symbols.cpp, renderer/render/symbols.h,
	  renderer/render/teapot.h, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h, renderer/render/transform.cpp,
	  renderer/render/transform.h, rib/ri2rib/ascii.cpp,
	  rib/ri2rib/ascii.h, rib/ri2rib/binary.cpp, rib/ri2rib/binary.h,
	  rib/ri2rib/context.cpp, rib/ri2rib/context.h,
	  rib/ri2rib/error.cpp, rib/ri2rib/error.h,
	  rib/ri2rib/inlineparse.h, rib/ri2rib/options.h,
	  rib/ri2rib/outstream.cpp, rib/ri2rib/outstream.h,
	  rib/ri2rib/plstore.cpp, rib/ri2rib/plstore.h, rib/rib2/bdec.cpp,
	  rib/rib2/bdec.h, rib/rib2/librib.cpp, rib/rib2/libribtypes.h,
	  rib/rib2/rib2_common.h, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/dsoshadeops.h,
	  shadercompiler/shadervm/idsoshadeops.h,
	  shadercompiler/shadervm/shadeop.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/shadervm/shadervm_common.h,
	  shadercompiler/slparse/icodegen.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/libslparse.h,
	  shadercompiler/slxargs/rcdummy.cpp,
	  shadercompiler/slxargs/slx.cpp, shadercompiler/slxargs/slx.h,
	  texturing/plugins/bmp2tif/bmp2tif.c,
	  texturing/plugins/exr2tif/exr2tif.cpp,
	  texturing/plugins/gif2tif/gif2tif.c,
	  texturing/plugins/jpg2tif/jpg2tif.c,
	  texturing/plugins/pcx2tif/pcx2tif.c,
	  texturing/plugins/png2tif/png2tif.c,
	  texturing/plugins/ppm2tif/ppm2tif.c,
	  texturing/plugins/tga2tif/tga2tif.c, thirdparty/aqiv/iv.c,
	  thirdparty/aqiv/sgigt.h, thirdparty/genkeywords.cpp,
	  thirdparty/maketextures/maketextures.c, version.h.in.cmake: *
	  Replace all instances of the non-ascii copyright symbol '©' and
	  the funny
	  (unicode?) combination 'Â©' with the ascii (C). Hopefully this
	  removes a VC8
	  compiler warning (as well as the very very slight annoyance for
	  those using
	  ascii-only text editors or terminals).

2007-10-17 11:57  c42f

	* aqsistypes/spline.h: * Remove default argument for one of the
	  CqCubicSpline constructors so that
	  there's only one default constructor. There's no loss since the
	  removed
	  default argument results in the same constructed object (both
	  constructors
	  defaulted to catmull-rom splines).

2007-10-16 15:50  minty

	* aqsisrc.in.cmake, renderer/render/ri.cpp: Add support for using @
	  as a substitution for default searchpath value

2007-10-09 21:13  pgregory

	* renderer/render/ri.cpp: Implement a fix for bug #1810401. The
	  Transform was being applied to a new CqTransform, resulting in
	  the same transform for all times. Instead, we now reset the
	  current time transform to the default object transform, stored at
	  RiWorldBegin, and then the requested transform is applied to
	  that, again at the current time.

2007-10-03 20:16  pgregory

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  rib/miqser/CMakeLists.txt: Add miqser to the cmake build system.

2007-10-03 19:50  pgregory

	* platform: Delete old SCons platform dir

2007-09-28 15:57  pgregory

	* INSTALL, SConstruct, aqsisrc.in, aqsistypes/SConscript,
	  aqsistypes/posix/SConscript, aqsistypes/win32/SConscript,
	  argparse/SConscript, build_check.py, build_support.py,
	  build_tools/NSIS.py, build_tools/SConscript,
	  build_tools/unittest.py,
	  content/ribs/features/layeredshaders/SConscript,
	  content/ribs/scenes/vase/SConscript,
	  content/shaders/displacement/SConscript,
	  content/shaders/light/SConscript, displays/d_exr/SConscript,
	  displays/d_sdcBMP/SConscript, displays/d_sdcWin32/SConscript,
	  displays/d_xpm/SConscript, displays/display/SConscript,
	  displays/piqsl/SConscript, distribution/SConscript,
	  distribution/macosx/SConscript,
	  distribution/macosx/bundle/SConscript,
	  distribution/win/SConscript, distribution/win/nsis/SConscript,
	  interfaces/SConscript, platform/darwin/SConscript,
	  platform/default/SConscript, platform/win32/SConscript,
	  renderer/aqsis/SConscript, renderer/ddmanager/SConscript,
	  renderer/raytrace/SConscript, renderer/render/SConscript,
	  rib/api/SConscript, rib/miqser/SConscript, rib/ri2rib/SConscript,
	  rib/rib2/SConscript, rib/rib2ri/SConscript,
	  rib/rib2stream/SConscript, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slpp/SConscript,
	  shadercompiler/slxargs/SConscript, shaders/SConscript,
	  texturing/plugins/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/common/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/teqser/SConscript, thirdparty/aqiv/SConscript,
	  thirdparty/dbo_plane/SConscript,
	  thirdparty/maketextures/SConscript, thirdparty/pdiff/SConscript,
	  thirdparty/tinyxml/SConscript, tools/SConscript,
	  tools/mpdump/SConscript, version.h.in, version.py: Remove SCons
	  as a build option, we are now 100% CMake

2007-09-27 21:41  pgregory

	* shadercompiler/slparse/parser.yy: Modify the texture function
	  handling to make it possible to have an occlusion function that
	  takes normal arguments, and one that takes texture style
	  arguments, with a channel index to the filename argument.

2007-09-27 21:40  pgregory

	* interfaces/iparameter.h, interfaces/ishader.h,
	  renderer/render/parameters.h, renderer/render/shaders.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: Fix a problem with CMake and
	  a dependency between the parameter.h file in renderer/render and
	  shadervm by creating an interface to CqParameter.

2007-09-27 19:04  pgregory

	* shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/parser.yy: Revert revision 1593, this is
	  not a valid fix for the error. Changing the function signatures
	  like that simply eradicates any possible argument typechecking,
	  meaning that pretty much any arguments to 'occlusion' would be
	  accepted, and result in a likely crash in the VM.

2007-09-27 18:49  joron

	* shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/parser.yy: When occlusion() sl function
	  was introduced to support future raytracing SL routine... a
	  regression was introduced. This changes fixes the regression.
	  
	  The only way I found was to ressucite the old parser.yy and flex
	  a bit the rule of validation in funcdef.cpp... that way it found
	  both types of occlusion() calls and still generate the right
	  thing for both cases (at the expense of the strong type checking
	  however) it was the best I could come up so far.

2007-09-26 19:07  joron

	* shadercompiler/shadervm/shadervm.cpp: Fix the regression problems
	  with funcset*.rib
	  Somehow an #if 0 was there when it should not been in the last
	  commit it doesn't mention any reason why this was commented I
	  taught it should be back.

2007-09-26 07:43  pgregory

	* cmake/platform/windows.cmake: Disable ZIP package, as the build
	  machine doesn't have a suitable ZIP generator.

2007-09-25 20:39  pgregory

	* CMakeLists.txt, cmake/modules/FindFLTK.cmake: Separate the
	  identification of found FLTK libraries and fluid executable, as
	  'display' can be built with only the libraries, but 'piqsl' needs
	  both. In the main CMakeLists.txt file check if the two FLTK
	  components are found before including the dependent subprojects.

2007-09-25 09:24  ltatkinson

	* CMakeLists.txt, cmake/platform/windows.cmake: Move remaining
	  Windows-specific data from 'CMakeLists.txt' to 'windows.cmake',
	  for platform consistency.

2007-09-24 23:17  pgregory

	* cmake/modules/FindFLTK.cmake: Change order of specification of
	  libraries, as once defined a cached variable cannot be modified
	  unless by the user.

2007-09-24 13:32  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake, cmake/platform/windows.cmake:
	  Refined CMake packaging (CPack) setup and abstracted relevant
	  Windows data from 'CMakeLists.txt' file.

2007-09-24 10:37  pgregory

	* cmake/modules/FindTIFF.cmake: Minor changes to the FindTIFF
	  script for linux

2007-09-24 09:53  pgregory

	* cmake/modules/FindSVNVersion.cmake: Add the required
	  FindSVNVersion.cmake file.

2007-09-24 09:48  pgregory

	* CMakeLists.txt, cmake/macros.cmake, cmake/modules/FindFLTK.cmake,
	  cmake/modules/FindJPEG.cmake, cmake/modules/FindOpenEXR.cmake,
	  cmake/modules/FindTIFF.cmake, cmake/modules/FindZLIB.cmake: Fix
	  up some of the CMake Find scripts. The problem is, if a 'cached'
	  variable is declared at one point in the script, it cannot then
	  be modified in another, as the variable is then under user
	  control. So I moved the declaration of the
	  AQSIS_???_LIBRARIES_DIR variables so that they are only declared
	  once, depending on architecture.
	  
	  Add a macro to read the current SVN revision number and put it in
	  the version.h file so that it is printed by the tools when
	  --version is specified.

2007-09-22 01:04  joron

	* shadercompiler/shaderexecenv/shadeops_tmap.cpp: Protect io.h
	  between AQSIS_SYSTEM_WIN32

2007-09-21 22:37  pgregory

	* shadercompiler/shaderexecenv/shadeops_tmap.cpp: Add inclusion of
	  io.h for the 'unlink' function (MinGW).

2007-09-21 11:52  ltatkinson

	* CMakeLists.txt, cmake/platform/linux.cmake,
	  cmake/platform/macosx.cmake: Updated CMake package generation
	  (CPACK) to *only* produce files of interest.

2007-09-18 11:12  anteru

	* shadercompiler/shaderexecenv/shadeops_tmap.cpp: * fixed linker
	  error: getRenderContext instead of QGetRenderContextI in
	  shaderexecenv/shadeops_tmap.cpp

2007-09-17 20:47  pgregory

	* interfaces/SConscript: Add interfaces SConscript

2007-09-15 23:49  pgregory

	* CMakeLists.txt, cmake/modules/FindFLTK.cmake,
	  cmake/modules/FindFlexBison.cmake, cmake/modules/FindTIFF.cmake,
	  cmake/modules/FindZLIB.cmake, displays/piqsl/CMakeLists.txt,
	  shadercompiler/slxargs/CMakeLists.txt: Update CMake configuration
	  to work with MinGW on Win32.

2007-09-15 21:26  pgregory

	* renderer/render/shadowmap.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp: Change the way
	  that the texturemapping functions read the bias. Instead of them
	  reading the bias from the Options if not specified in the
	  parameters, make sure it is always specified in the parameters.
	  Which means that the texturing functions don't need access to the
	  aqsis core libraries. Mainly for the work that is underway to
	  provide a separate texlib.

2007-09-13 18:23  joron

	* texturing/plugins/bake2tif/bake2tif.c: Instead of using a linear
	  interpolation between black samples, bake2tif will use proper
	  filtering using a big size and aggressive width. The filter I
	  used is disk() to get some appearance of circle around sample if
	  sample pretty isolated. It gives a similar appearance as 3delight
	  mipmap conversion of bake file.

2007-09-13 16:54  joron

	* shadercompiler/shaderexecenv/shadeops_tmap.cpp: Unlink bake file
	  if they are managed for the first time.
	  That way each time we restart the regression test suite it won't
	  accumulated gigantic bake file

2007-09-12 10:18  ltatkinson

	* CMakeLists.txt, Doxyfile: Updated minor project details within
	  CMake (CPack).

2007-09-10 19:39  minty

	* rib/ri2rib/tokens.cpp: Add some missing tokens to libri2rib

2007-09-09 04:27  c42f

	* interfaces/ibound.h: * Remove compiler warning concerning lack of
	  virtual destructor

2007-09-08 16:11  pgregory

	* CMakeLists.txt, SConstruct, aqsisrc.in.cmake,
	  aqsistypes/CMakeLists.txt, aqsistypes/export.cmake,
	  aqsistypes/link.cmake, aqsistypes/logging_streambufs.h,
	  aqsistypes/multitimer.h, aqsistypes/posix/multitimer_system.cpp,
	  aqsistypes/win32/multitimer_system.cpp, argparse/CMakeLists.txt,
	  argparse/export.cmake, argparse/link.cmake, cmake,
	  cmake/macros.cmake, cmake/modules, cmake/modules/FindBoost.cmake,
	  cmake/modules/FindFLTK.cmake, cmake/modules/FindFlexBison.cmake,
	  cmake/modules/FindJPEG.cmake, cmake/modules/FindOpenEXR.cmake,
	  cmake/modules/FindPkgConfig.cmake, cmake/modules/FindTIFF.cmake,
	  cmake/modules/FindWin32Libs.cmake,
	  cmake/modules/FindXsltproc.cmake, cmake/modules/FindZLIB.cmake,
	  cmake/modules/OutOfSourceBuild.cmake, cmake/platform,
	  cmake/platform/linux.cmake, cmake/platform/macosx.cmake,
	  displays/d_exr/CMakeLists.txt, displays/d_sdcBMP/CMakeLists.txt,
	  displays/display/CMakeLists.txt, displays/piqsl/CMakeLists.txt,
	  displays/piqsl/export.cmake, displays/piqsl/framebuffer.cpp,
	  displays/piqsl/piqsl.cpp, interfaces, interfaces/iattributes.h,
	  interfaces/ibound.h, interfaces/iddmanager.h,
	  interfaces/ilightsource.h, interfaces/ioptions.h,
	  interfaces/iraytrace.h, interfaces/irenderer.h,
	  interfaces/ishader.h, interfaces/ishaderdata.h,
	  interfaces/ishaderexecenv.h, interfaces/isurface.h,
	  interfaces/itexturemap.h, interfaces/itransform.h,
	  renderer/aqsis/CMakeLists.txt, renderer/ddmanager/CMakeLists.txt,
	  renderer/ddmanager/ddmanager.cpp,
	  renderer/ddmanager/export.cmake, renderer/ddmanager/local.cmake,
	  renderer/raytrace/CMakeLists.txt, renderer/raytrace/local.cmake,
	  renderer/render/CMakeLists.txt, renderer/render/SConscript,
	  renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/clippingvolume.h,
	  renderer/render/cubiccurves.cpp, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/export.cmake,
	  renderer/render/iattributes.h, renderer/render/iddmanager.h,
	  renderer/render/idsoshadeops.h, renderer/render/ilightsource.h,
	  renderer/render/imagebuffer.cpp, renderer/render/ioptions.h,
	  renderer/render/iraytrace.h, renderer/render/irenderer.h,
	  renderer/render/ishader.h, renderer/render/ishaderdata.h,
	  renderer/render/ishaderexecenv.h, renderer/render/isurface.h,
	  renderer/render/itexturemap.h, renderer/render/itransform.h,
	  renderer/render/lights.h, renderer/render/link.cmake,
	  renderer/render/micropolygon.cpp, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/occlusion.cpp,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/plane.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.h,
	  renderer/render/quadrics.cpp, renderer/render/quadrics.h,
	  renderer/render/ri.cpp, renderer/render/ri.h,
	  renderer/render/shadeop.h, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h, rib/api/CMakeLists.txt,
	  rib/api/SConscript, rib/api/export.cmake, rib/api/ri.h,
	  rib/ri2rib/CMakeLists.txt, rib/ri2rib/link.cmake,
	  rib/rib2/CMakeLists.txt, rib/rib2/export.cmake,
	  rib/rib2/genkeywords.cpp, rib/rib2/local.cmake,
	  rib/rib2ri/CMakeLists.txt, rib/rib2ri/export.cmake,
	  rib/rib2ri/local.cmake, shadercompiler/aqsl/CMakeLists.txt,
	  shadercompiler/aqsltell/CMakeLists.txt,
	  shadercompiler/codegenvm/CMakeLists.txt,
	  shadercompiler/codegenvm/export.cmake,
	  shadercompiler/codegenvm/local.cmake,
	  shadercompiler/shaderexecenv/CMakeLists.txt,
	  shadercompiler/shaderexecenv/export.cmake,
	  shadercompiler/shaderexecenv/local.cmake,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/CMakeLists.txt,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/shadervm/export.cmake,
	  shadercompiler/shadervm/idsoshadeops.h,
	  shadercompiler/shadervm/link.cmake,
	  shadercompiler/shadervm/shadeop.h,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/slparse/CMakeLists.txt,
	  shadercompiler/slparse/export.cmake,
	  shadercompiler/slparse/local.cmake,
	  shadercompiler/slpp/CMakeLists.txt,
	  shadercompiler/slpp/export.cmake,
	  shadercompiler/slpp/local.cmake,
	  shadercompiler/slxargs/CMakeLists.txt,
	  shadercompiler/slxargs/export.cmake,
	  shadercompiler/slxargs/link.cmake, shaders/CMakeLists.txt,
	  texturing/plugins/bake2tif/CMakeLists.txt,
	  texturing/plugins/bmp2tif/CMakeLists.txt,
	  texturing/plugins/common/CMakeLists.txt,
	  texturing/plugins/common/local.cmake,
	  texturing/plugins/common/pixelsave.h,
	  texturing/plugins/exr2tif/CMakeLists.txt,
	  texturing/plugins/gif2tif/CMakeLists.txt,
	  texturing/plugins/jpg2tif/CMakeLists.txt,
	  texturing/plugins/jpg2tif/export.cmake,
	  texturing/plugins/jpg2tif/link.cmake,
	  texturing/plugins/pcx2tif/CMakeLists.txt,
	  texturing/plugins/png2tif/CMakeLists.txt,
	  texturing/plugins/ppm2tif/CMakeLists.txt,
	  texturing/plugins/ppm2tif/link.cmake,
	  texturing/plugins/tga2tif/CMakeLists.txt,
	  texturing/teqser/CMakeLists.txt, thirdparty/genkeywords.cpp,
	  thirdparty/pdiff/CMakeLists.txt,
	  thirdparty/tinyxml/CMakeLists.txt,
	  thirdparty/tinyxml/export.cmake, thirdparty/tinyxml/local.cmake,
	  version.h.in.cmake: Merge synced feature branch from
	  branches/cmake to trunk/aqsis @1549. Make various changes to the
	  SConscript build to account for structural changes introduced by
	  the CMake system.

2007-09-07 15:34  cgtobix

	* aqsistypes/SConscript, aqsistypes/noise1234_test.cpp: One more
	  unit test.

2007-09-06 13:25  c42f

	* texturing/plugins/common/pixelsave.c: * Fix bug where save_tiff()
	  was declared "extern" in the C file. This
	  should only be in the header (I think) - having it in a cpp file
	  causes
	  unresolved symbols in the resulting DSO under linux x86_64.
	  * Also include <string.h> to shut up a compiler warning about
	  implicit
	  declaration of the strstr() function.

2007-09-04 15:49  ltatkinson

	* content/ribs/features/shadows/autoshadow.rib,
	  content/ribs/features/shadows/render.bat,
	  content/ribs/features/shadows/render.sh,
	  content/ribs/features/shadows/render_autoshadow.bat,
	  content/ribs/features/shadows/render_autoshadow.sh,
	  content/ribs/features/shadows/render_softshadow.bat,
	  content/ribs/features/shadows/render_softshadow.sh: Added
	  'autoshadow' example to 'content' directory, complimenting
	  'softshadow'.

2007-09-03 15:43  cgtobix

	* aqsistypes/SConscript, aqsistypes/cellnoise_test.cpp,
	  aqsistypes/matrix_test.cpp, aqsistypes/noise_test.cpp,
	  aqsistypes/spline_test.cpp, aqsistypes/vector2d_test.cpp,
	  aqsistypes/vector4d_test.cpp: Added more test cases for vector2d
	  and vector4d and added temporary workaround for unit testing on
	  the mac untill the boost port is fixed.

2007-09-01 01:02  c42f

	* aqsistypes/SConscript, aqsistypes/cellnoise_test.cpp,
	  aqsistypes/matrix_test.cpp, aqsistypes/noise_test.cpp,
	  aqsistypes/spline_test.cpp: * Integrate new tests by Tobi into
	  the build system. Changes needed:
	  - Remove BOOST_AUTO_TEST_MAIN from all test implementation files
	  - Declare identicle equals() functions as static to avoid linker
	  errors.

2007-08-31 15:20  cgtobix

	* aqsistypes/cellnoise_test.cpp, aqsistypes/matrix.cpp,
	  aqsistypes/matrix_test.cpp, aqsistypes/noise_test.cpp,
	  aqsistypes/spline_test.cpp: Added a bunch of unit tests for
	  matrix, noise, cellnoise and spline.
	  Made comments on functions that need to be looked closer at
	  during the code review.

2007-08-30 14:33  c42f

	* renderer/render/shadowmap.cpp, renderer/render/texturemap.h: Fix
	  two shadow-bias bugs:
	  * Option "shadow" "float bias" was being completely ignored.
	  * Option "shadow" "float bias0" and Option "shadow" "float bias1"
	  didn't cause
	  a random bias between bias0 and bias1 to be chosen - they chose a
	  bias
	  between 0 and (bias0+bias1)/2 (!)

2007-08-30 13:35  c42f

	* SConstruct: * Disable unit tests again - they were accidentally
	  enabled in revision 1477

2007-08-29 02:19  c42f

	* displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h: * Allow image buffers to copy onto
	  regions of other buffers which are only
	  partially overlapping.
	  * Fix piqsl so that RiCropWindow support works properly (no
	  longer causes piqsl
	  to crash).
	  * Modify the frambuffer scroll window colour slightly so that the
	  full image
	  region outline can be seen when using RiCropWindow

2007-08-28 13:36  c42f

	* displays/piqsl/imagebuffer.cpp, displays/piqsl/imagebuffer.h,
	  displays/piqsl/imagebuffer_test.cpp,
	  displays/piqsl/imagechannel.cpp, displays/piqsl/imagechannel.h,
	  displays/piqsl/imagechannel_test.cpp: * Remove usage of unsigned
	  types in image buffer and channel classes in favour
	  of using signed types.

2007-08-25 01:42  c42f

	* coding_standard/codestyle.cpp: Modify portability recommendation
	  for VC++6 for loop scoping

2007-08-24 13:17  joron

	* platform/win32/SConscript: Put the full optimization compilation
	  in effect.

2007-08-24 13:15  joron

	* renderer/render/SConscript: This is to split some files from the
	  aqsis library and compile them with a different optimization....
	  in particular it will allow us to compile aqsis with -O3 now. I
	  isolated which files could cause a problem while using -O3 in a
	  different set.

2007-08-24 13:14  joron

	* renderer/render/environment.cpp, renderer/render/shadowmap.cpp,
	  renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Small optimization for the texture cache... most of the time when
	  you have a lot of texture to use their name could be easily
	  compare with their hash key instead of using a string
	  comparaison.

2007-08-19 04:31  scorp007

	* aqsistypes/spline.h, aqsistypes/win32/aqsis_compiler.h,
	  aqsistypes/win32/socket_system.cpp, platform/win32/SConscript:
	  Fixed VC8 build, and added level 4 warnings to Release build

2007-08-19 02:15  WayneZacMP

	* platform/darwin/SConscript: Remove duplicate append line in the
	  darwin Sconsript.

2007-08-19 01:49  WayneZacMP

	* platform/darwin/SConscript: Edited the darwin platform Sconscript
	  so that the debug build under darwin has NDEBUG not defined, and
	  assert statements are therefore compiled under the debug build,
	  but not the release build.

2007-08-18 05:17  c42f

	* displays/piqsl/displayserverimage.cpp: * Revert some WIP changes
	  which were accidentally commited along with r1477.

2007-08-18 04:24  c42f

	* SConstruct, aqsistypes/posix/socket_system.cpp,
	  aqsistypes/posix/socket_system.h, aqsistypes/socket.h,
	  aqsistypes/win32/socket_system.cpp,
	  aqsistypes/win32/socket_system.h,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/imagechannel.cpp: * Create socket_system.h files
	  for system-dependent socket typedefs
	  (TqSocketId) to resolve INVALID_SOCKET incompatibilites for
	  win32/posix
	  (r1470 causes nasty warnings in the posix build).
	  * Header include cleanups
	  * Remove a strange check of sockaddr_in::sin_addr::s_addr against
	  INVALID_SOCKET - doesn't make sense on posix as they're different
	  types (not
	  sure about win32, so left the equivilant thing alone).

2007-08-17 19:54  joron

	* aqsistypes/spline.h: Make sure it links properly shaderexecenv
	  within mingw environment.

2007-08-17 18:40  cgtobix

	* platform/darwin/SConscript: Fixed compiler warning about
	  redefining USE_TIMERS on OSX/darwin

2007-08-17 17:59  cgtobix

	* aqsistypes/spline.cpp, aqsistypes/spline.h,
	  renderer/render/micropolygon.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp: Refactoring of
	  CqCubicSpline with help of Chris Foster.

2007-08-17 16:55  joron

	* renderer/render/blobby.cpp: fix a minor warning with mingw c++
	  which doesn't support Msdev pragma.

2007-08-17 16:55  joron

	* aqsistypes/socket.h: m_port, m_socket should have been unsigned
	  integer otherwise a warning will b issue while comparing with
	  INVALID_SOCKET.

2007-08-17 10:49  joron

	* displays/display/display.cpp: make sure the framebuffer, file,
	  ... are also support "int scanlineorder". It allows both FB and
	  Piqsl to display a fully row of buckets at time instead of one
	  bucket at time... they are emulating what d_bmp, d_exr are doing.

2007-08-16 21:19  joron

	* renderer/render/ri.cpp: add error message to prevent the user the
	  ReadArchive() could not open the archive.

2007-08-14 23:48  joron

	* displays/piqsl/piqsldisplay.cpp: add support for "int
	  scanlineorder" 1 if you passed that to "piqsl" display command in
	  a rib you will see in action line of buckets in action.

2007-08-14 23:38  joron

	* renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h:
	  Fix the problem when PkDspyFlagsWantsScanLineOrder is used by any
	  display.
	  Collapse CqShallowDisplayRequest to be CqDisplayRequest and only
	  keep CqDeepDisplayRequest... after all only dsm is special the
	  rest is the same ... except three virtual methods :
	  FormatBucekt(), CollapseBucketsToScanlines, SendToDisplay().
	  
	  Put the old code back in CollapseBucketsToScanlines since
	  SendToDisplay was assuming it will used anyway m_DataRow
	  information.
	  
	  Simplify ::Uses() after all once executed no reason to not return
	  the same value...

2007-08-14 06:05  scorp007

	* displays/piqsl/piqsl_ui.fl: - Fixed crash when you try to
	  'remove' an image when none are selected.
	  - Greyed-out Image->Remove menu item when appropriate

2007-08-13 15:12  c42f

	* displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/image.cpp,
	  displays/piqsl/image.h, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h: * Make piqsl correctly deal with
	  the alpha channel when loading tiffs
	  - Piqsl now correctly displays pretty much all kinds of tiff that
	  aqsis can
	  produce (I think... it can't do mipmaps yet though).
	  
	  * Correct the framebuffer to make the incremental update work
	  again.
	  - Copied the use of FL_DAMAGE_SCROLL from the fltk checkers
	  example. There
	  seems to be very minimal documentation on what is the proper
	  thing to use
	  here... The checkers program is similar in many ways so I
	  followed that.
	  - It seems the damage coordinates must be relative to the top
	  level widget -
	  fixed that also, (incorrect updates became a problem when image
	  scrolling
	  was added).

2007-08-13 13:43  c42f

	* displays/piqsl/framebuffer.cpp: * Fix up the piqsl image
	  centering behaviour to be a bit more logical.
	  * Make images be centred when they are first connected to the
	  framebuffer.

2007-08-13 12:52  joron

	* aqsistypes/win32/socket_system.cpp: total might be used without
	  being initialized first

2007-08-13 12:00  scorp007

	* displays/piqsl/book.h, displays/piqsl/framebuffer.cpp,
	  displays/piqsl/framebuffer.h, displays/piqsl/image.h: Added
	  functionality to piqsl and minor code cleanups
	  - 'h' now 'homes' the view in the framebuffer
	  - as you resize the window, the image remains centered (ala Maya)
	  - changed cursor to 'move' arrows when you pan
	  - minor code cleanups

2007-08-13 03:50  c42f

	* displays/piqsl/framebuffer.cpp: * Make a workaround for a subtle
	  bug involving the fl_draw() call in
	  Fl_FrameBuffer_Widget::draw(). This is not a proper fix, but I'm
	  having a
	  lot of trouble finding one. This workaround prevents fl_draw()
	  from being
	  called while m_image is valid, and m_image->displayBuffer() is
	  not yet
	  initialized. If fl_draw() is called in that circumstance, piqsl
	  seems to
	  segfault unpredictably.

2007-08-13 03:37  c42f

	* displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/image.cpp,
	  displays/piqsl/image.h, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h, displays/piqsl/imagechannel.cpp,
	  displays/piqsl/imagechannel.h: * Make piqsl show the alpha
	  channel when rendering images.

2007-08-12 14:29  c42f

	* displays/piqsl/displayserverimage.cpp: Fix a compile error in the
	  debug build

2007-08-12 06:45  c42f

	* displays/piqsl/SConscript, displays/piqsl/imagebuffer_test.cpp,
	  displays/piqsl/imagechannel_test.cpp: * Split out unit tests for
	  image channel stuff from the image buffer test
	  cases, and into a new file.

2007-08-12 06:39  c42f

	* displays/piqsl/SConscript, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h,
	  displays/piqsl/imagebuffer_test.cpp,
	  displays/piqsl/imagechannel.cpp, displays/piqsl/imagechannel.h,
	  displays/piqsl/piqsl.cpp: * Rework design of the image channel
	  stuff to be more general and extensible
	  underneath. The channels interface is now composed of "sources"
	  and "sinks";
	  image data can be generated by channel sources, and consumed by
	  image channel
	  sinks.

2007-08-11 13:43  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated Windows (NSIS) installer
	  to resolve SF issue '1653218' -
	  http://sourceforge.net/tracker/index.php?func=detail&aid=1653218&group_id=25264&atid=383970

2007-08-10 10:08  scorp007

	* displays/piqsl/book.cpp, displays/piqsl/bookbrowser.cpp,
	  displays/piqsl/bookbrowser.h, displays/piqsl/framebuffer.cpp,
	  displays/piqsl/framebuffer.h, displays/piqsl/imagebuffer.h,
	  displays/piqsl/piqsl_ui.fl: Added functionality to Piqsl, namely:
	  Features/improvements:
	  - Panning support using middle mouse button or scroll bars
	  - Fixed colors on tabs and list entries to make them readable
	  - Preliminary support for temporary hotkeys (just a stub in that
	  holding down 'r' doesn't do anything yet, but the foundation is
	  there)
	  - Minor tweaks here and there.

2007-08-10 05:26  c42f

	* displays/piqsl/imagechannel.h: * Add a new interface which image
	  channels will extend. This makes it possible
	  to define arbitrary "source" and "sink" image channels.
	  * The interface is somewhat WIP, but it's not integrated into the
	  build so
	  nothing should break ;-) I commit it now so that Alex has
	  something to work
	  with for now.

2007-08-10 00:30  joron

	* aqsistypes/posix/multitimer_system.cpp,
	  aqsistypes/posix/multitimer_system.h: make it used #if USE_TIMERS
	  instead of #ifdef for posix.

2007-08-09 15:00  joron

	* rib/ri2rib/ascii.cpp, rib/ri2rib/binary.cpp,
	  rib/ri2rib/context.cpp, rib/ri2rib/output.cpp: Remove a warning
	  in mingw environment for unknown pragma directive

2007-08-09 14:48  joron

	* rib/rib2/librib.cpp: Remove a warning in mingw environment for
	  unknown pragma directive

2007-08-09 14:45  joron

	* aqsistypes/multitimer.cpp, aqsistypes/multitimer.h: Make sure it
	  works with and without USE_TIMERS=0 or USE_TIMERS=1

2007-08-09 14:44  joron

	* aqsistypes/win32/multitimer_system.cpp,
	  aqsistypes/win32/multitimer_system.h: make it used #if USE_TIMERS
	  instead of #ifdef

2007-08-08 16:37  c42f

	* displays/piqsl/displayserverimage.cpp, displays/piqsl/image.cpp,
	  displays/piqsl/image.h, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h,
	  displays/piqsl/imagebuffer_test.cpp, displays/piqsl/piqsl.cpp: *
	  Piqsl image buffer refactor, stage 4.
	  * Modified the mechanism for retaining channel data by making a
	  new class,
	  CqChannelInfoList.
	  * CqChannelInfoList does things like keeping the byte offsets for
	  all channels
	  up to date; it also removes all image channel access/update
	  functions from
	  CqImage. This is a "good thing", since it prevents the channel
	  data in CqImage
	  from getting out of sync with the channel data in the underlying
	  CqImageBuffers.
	  * Add some unit tests for CqChannelInfoList

2007-08-08 14:02  minty

	* platform/default/SConscript: Add TAR env var detection

2007-08-08 06:54  pgregory

	* ., build_tools, platform, platform/default: Update some
	  properties to ignore common files generated during build

2007-08-07 20:16  pgregory

	* aqsistypes/multitimer.cpp, aqsistypes/multitimer.h,
	  aqsistypes/posix/SConscript,
	  aqsistypes/posix/multitimer_system.cpp,
	  aqsistypes/posix/multitimer_system.h: Fix recent multitimer
	  refactor to work on Posix

2007-08-07 19:32  pgregory

	* SConstruct, renderer/render/bucket.cpp,
	  renderer/render/imagebuffer.cpp, renderer/render/imagers.cpp,
	  renderer/render/micropolygon.cpp, renderer/render/points.cpp,
	  renderer/render/ri.cpp, renderer/render/shadowmap.cpp,
	  renderer/render/stats.cpp, renderer/render/texturemap.cpp,
	  shadercompiler/shadervm/shadervm.cpp: More changes for the
	  multitimer refactor.

2007-08-07 19:31  pgregory

	* aqsistypes/MultiTimer.h, aqsistypes/multitimer.h: Renamed
	  remotely

2007-08-07 19:30  pgregory

	* aqsistypes/MultiTimer.cpp, aqsistypes/multitimer.cpp: Renamed
	  remotely

2007-08-07 19:19  pgregory

	* aqsistypes/MultiTimer.cpp, aqsistypes/MultiTimer.h,
	  aqsistypes/SConscript, aqsistypes/posix/SConscript,
	  aqsistypes/win32/SConscript, aqsistypes/win32/aqsis_compiler.h,
	  aqsistypes/win32/multitimer_system.cpp,
	  aqsistypes/win32/multitimer_system.h: Refactor multitimer
	  performance timer classes.

2007-08-07 19:14  pgregory

	* aqsistypes/MultiTimer.cpp, aqsistypes/MultiTimer.h: Remove old
	  multitimer implementation, in preparation for a new refactored
	  one (have to do it in two steps to avoid case sensitive naming
	  issues).

2007-08-07 09:42  ltatkinson

	* ChangeLog.txt, displays/piqsl/book.h,
	  displays/piqsl/bookbrowser.cpp, displays/piqsl/bookbrowser.h,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/displayserverimage.h,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/imagebuffer.cpp, displays/piqsl/imagebuffer.h,
	  displays/piqsl/piqsl.cpp, displays/piqsl/piqsl.h,
	  displays/piqsl/piqslbase.h, displays/piqsl/piqsldisplay.cpp,
	  displays/piqsl/piqsldisplay.h: Update redundant e-mail
	  information (aqsis.com).

2007-08-07 08:46  anteru

	* aqsistypes/spline.cpp: comment mismatch with real default in
	  CqSplineCubic constructor

2007-08-07 01:45  c42f

	* displays/piqsl/imagebuffer.h: * Add some more documentation for
	  the new image buffer facilities.

2007-08-06 20:53  pgregory

	* displays/piqsl/imagebuffer.h: Fix compilation error, unnecessary
	  additional template declaratoin.

2007-08-06 18:57  c42f

	* displays/piqsl/SConscript, displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/image.cpp,
	  displays/piqsl/image.h, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h,
	  displays/piqsl/imagebuffer_test.cpp, displays/piqsl/piqsl.cpp,
	  displays/piqsl/piqslbase.cpp: Image Buffer refactor, stage 3.
	  * Completely reworked the way that CqImage holds image data. The
	  image data is
	  now encapsulated into two CqImageBuffers, one for the full
	  precision data,
	  and another for a precision which the usual 8bit-per-channel
	  monitors can
	  handle.
	  * During this stage of the refactor the interface of CqImage
	  remained as fixed
	  as possible.
	  * Notes on the all-new CqImageBuffer class:
	  - Buffers are able to copy between each other with a
	  format-independent
	  mechanism (ie, a uchar buffer can copy out of a float buffer etc)
	  - Buffers can be copied onto regions of other buffers very easily
	  - Rectangular subregions of individual image channels can be
	  selected out of
	  one buffer, and copied without restriction into an arbitrary
	  channel of
	  another buffer, provided the width and height of the regions
	  match. The
	  usage is simple:
	  CqImageBuffer buf1(some_args...);
	  CqImageBuffer buf2(some_args2...);
	  // copy a subregion of the buf1 green channel onto buf2 red
	  channel:
	  buf2.channel("r")->copyFrom(*buf1.channel("g", topLeftX,
	  topLeftY, width, height));
	  - It would be very easy to add alpha compositing between
	  different channels
	  now that the basic infrastructure exists. This would take the
	  form of a
	  compositeFrom(chan, chanAlpha) function on the image channels, in
	  analogy to
	  copyFrom().
	  - It would also be very easy to create a cloneWithChannels()
	  function which
	  could select desired channel numbers/names from a buffer, and
	  copy only those.
	  - I just realised that "CqImageBuffer" has a naming clash with
	  another
	  class... any suggestions for a new name which is just as
	  descriptive gladly
	  accepted!

2007-08-06 12:34  c42f

	* build_check.py, displays/piqsl/SConscript: * Add a line notifying
	  if piqsl isn't going to be built
	  * Fix a bug in the piqslapp_test unit build target introduced in
	  r1382

2007-08-04 09:07  pgregory

	* testing: Move testing folder to the top level, to prevent it
	  unnecessarily polluting the main source folder.

2007-08-03 15:10  minty

	* platform/default/Options.py: Let SCons rely on the path for flex
	  and bison uless the user forces it to use a
	  specific path

2007-08-03 14:14  joron

	* renderer/render/ri.cpp: add support for "float bake" 256
	  parameter for RiMakeTexture.
	  it is basically analysing the parameters list for RiMakeTexture
	  and it
	  found "bake" parameter it will do basically do what teqser do for
	  the user wants it used -bake option (in teqser). It allows later
	  to create an RTS test case for bake features where the mipmap
	  will be 512 using a MakeTexture in a rib file (instead of using
	  teqser).

2007-08-03 12:43  joron

	* texturing/plugins/bake2tif/bake2tif.c: I forgot the lerp will
	  have to deal with float instead of integer value.

2007-08-03 11:46  minty

	* build_check.py: Fix a typo in the boost_threads check

2007-08-03 02:45  scorp007

	* texturing/plugins/common/pixelsave.c: pixelsave.c mixed code with
	  declarations in a C file, which broke the VC build.
	  tiffio.h had a typo which resulted in USE_WIN32_FILEIO being
	  redefined during compilation.

2007-08-02 20:01  minty

	* displays/piqsl/SConscript: - Fix to previous commit, might aswell
	  use no_piqsl where it counts

2007-08-02 19:53  minty

	* SConstruct, build_check.py, displays/piqsl/SConscript: - Make
	  piqsl optional and disable it if the required libs aren't found.

2007-08-01 17:18  joron

	* shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  texturing/plugins/bake2tif/bake2tif.c,
	  texturing/plugins/common/pixelsave.c: shadeops_tmap.cpp: Change
	  slight the bake format... first it will output the name/type of
	  the file something like "Aqsis bake file"
	  and on the next line the number of components relevant. 1,2 or 3.
	  
	  texturing/plugins/common/pixelsave.c gives the possibility to
	  write a float tiff now (when as description the word "bake2tif"
	  is used)
	  
	  texturing/plugins/bake2tif/bake2tif.c: read the number of
	  component and now deal with the information as it is floats
	  value... and save as float tiff file.
	  
	  Now if you take the format of bake from 3delight you could use
	  teqset to convert to mipmap files (if you want to do the opposite
	  edit the bake file in replace Aqsis with 3Delight).
	  
	  
	  
	  

2007-08-01 07:45  pgregory

	* shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/typecheck.cpp: Fix typechecking of
	  function arguments to properly mask out the type values when
	  looking up suitability in the priority table. Also add some
	  additional information (-v 2) output to the compiler when
	  typechecking functions to help track down compile errors

2007-07-31 15:20  c42f

	* SConstruct, build_tools/unittest.py: * Disable unit testing via
	  scons for the time being. Several portability
	  issues and shortcomings need to be addressed before enabling them
	  again.
	  Specifically:
	  - The tests should only be built when explicitly asked for. At
	  the moment
	  they build when the "build" target is specified (this is rather
	  tricky to
	  fix).
	  - We need a proper way to add system-specific names for the boost
	  libraries
	  (sholdn't be too difficult).

2007-07-31 14:45  minty

	* platform/default/SConscript: Add sockets libraries for Solaris

2007-07-31 14:36  c42f

	* SConstruct, build_tools/unittest.py: * Add a unit test output
	  directory to make "scons build" independent of the
	  test target, "scons test"

2007-07-31 12:50  c42f

	* SConstruct, build_tools/unittest.py: * Try to create a workaround
	  for env.Tool() since scons-0.96.? seems not to be
	  passing keyword parameters through in the same way as later
	  versions.

2007-07-31 12:18  c42f

	* renderer/ddmanager/ndspy.h: * Add ifdef tests for the x86_64
	  architecture to the typedefs for ndspy.h
	  Apparenly (http://predef.sourceforge.net/prearch.html) __x86_64
	  is defined by
	  g++ and Sun Studio, while _M_X64 is defined by Visual studio. It
	  seems
	  safe to assume that an "int" type is going to be 32 bits on
	  Visual studio
	  as well (only tested with g++/linux64).
	  * Minor comment correction

2007-07-30 09:36  mafm

	* displays/piqsl/imagebuffer.h: Remove extra qualifier, it makes
	  the compilation to stop with GCC 4.1

2007-07-29 05:56  c42f

	* displays/piqsl/imagebuffer.h: * Add forgotten #include. Yes, it
	  did compile on g++ anyway... not sure why.

2007-07-29 04:47  c42f

	* Doxyfile: Add piqsl to the Doxyfile so that documentation gets
	  generated for it.

2007-07-29 04:39  c42f

	* displays/piqsl/SConscript, displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/image_test.cpp, displays/piqsl/imagebuffer.cpp,
	  displays/piqsl/imagebuffer.h,
	  displays/piqsl/imagebuffer_test.cpp: * Refactoring piqsl image
	  buffer stuff, stage two.
	  * Create a new class CqImageBuffer to wrap raw image data and
	  perform
	  transformations on it.
	  * move quantization code out of CqImage into CqImageBuffer.
	  * Next stage will be to move the image data out of CqImage and
	  into
	  CqImageBuffer.
	  * Add some tests for quantization functions in CqImageBuffer.

2007-07-29 01:28  c42f

	* displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/image_test.cpp: * Make the quantization code more
	  independent of the CqImage member data.
	  * The quantization code now supports output to an arbitrary
	  rectangular-shaped
	  region of the output buffer, from a similar region in the input
	  buffer.

2007-07-28 15:58  c42f

	* displays/piqsl/SConscript, displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/image_test.cpp: * Make general improvements to the
	  way that channel data is quantized for 8bit
	  displays. The functions are now much more generally useful. In
	  particular
	  the CqImage::quantize8bitChannelStrided function allows
	  quantizing arbitrary
	  float data from a buffer with arbitrary source and destination
	  strides. This
	  should make selection of only one channel (for example) pretty
	  trivial.
	  * Add a few small unit tests for new CqImage stuff.
	  * Add some comments wrt the CompositeAlpha() function.

2007-07-28 13:57  c42f

	* SConstruct: * Make boost unit test logging slightly more verbose.

2007-07-28 13:46  c42f

	* aqsistypes/aqsismath_test.cpp: Rename some unit test functions to
	  be a bit more systematic.

2007-07-28 03:42  c42f

	* displays/display/display.cpp: * Make sure that for a display
	  format of PkDspyUnsigned16 we set the the
	  appropriate TIFF tag to indicate unsigned data. Previously all
	  output was as
	  signed data.

2007-07-27 22:02  pgregory

	* shadercompiler/slparse/scanner.ll: Fix regression to #1664409.
	  When exiting the symbol type check in scanner.ll early, as the
	  fix in revision 892 implemented, this rightly corrected the
	  problem of a local variable not 'shadowing' a global one, but
	  however, also meant that a symbol that also pointed to a
	  function, and would be correctly identified as a function symbol
	  by the parser later, didn't have the function pointer setup. This
	  meant it accidentally got the function pointer from the last
	  successfully identified function at code generation time. Now the
	  type check tries to fill in both variable and function data, so
	  that whatever the symbol resolves to, it has the information to
	  hand.

2007-07-27 14:00  joron

	* displays/piqsl/bookbrowser.cpp, displays/piqsl/image.cpp,
	  displays/piqsl/image.h: Add a description to the tile of the
	  image for any books.
	  Very handy to compare multiple tiffs together.
	  The tiff' description is used in not empty otherwise it takes
	  the tiff' software information if not empty otherwise it lefts
	  blank (as before).

2007-07-27 10:37  joron

	* testing/regression/RIBs/Bugs/Bug1416422,
	  testing/regression/RIBs/Bugs/Bug1416422/Bug1416422.rib,
	  testing/regression/RIBs/Bugs/Bug1416422/aqsistext.sl,
	  testing/regression/RIBs/Bugs/Bug1416422/jobs.cfg: Add a testcase
	  for #1416422; when aqsl was very very slow to compile.

2007-07-27 10:34  joron

	* testing/regression/reference/Bug1416422.tif: Add a testcase for
	  #1416422

2007-07-27 08:00  pgregory

	* shadercompiler/slparse/parsenode.cpp: Minor updates from Chris
	  Foster's code review.

2007-07-26 20:56  pgregory

	* shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/typecheck.cpp: Initial rework of function
	  call type checking. Should speed up type checking dramatically.
	  Not yet fully tested.
	  
	  New method:
	  
	  for each argument to the function:
	  get a list of possible types, including casts, weighted by how
	  'suitable' the cast is.
	  for each candidate function:
	  check if the function returns a suitable type
	  continue if not
	  for each argument:
	  find the best match in the list of possible types
	  if no match found:
	  discard candidate
	  continue
	  else:
	  adjust weight of candidate according to suitability of argument
	  type
	  if all arguments matched:
	  add candidate to possible list sorted by overall weight
	  choose the most suitable candidate
	  for each argument:
	  perform full type checking, including inserting any casts

2007-07-25 20:19  pgregory

	* displays/piqsl/piqsl_ui.fl: Fix case of fl_ask.H include.

2007-07-25 17:13  minty

	* shadercompiler/codegenvm/vmdatagather.cpp: [ 1102356 ] Rudi
	  Cortes' Skin shader
	  As potted by Michel Joron. Calculation of USES did not take
	  into account usage of standard variable inside default variable
	  initialization.

2007-07-25 15:20  joron

	* displays/piqsl/piqsl.cpp: Don't look anymore to the extension but
	  just start to parse with tinyxml... if everything seem ok; I load
	  the book otherwise I assume it is a valid tif file.

2007-07-25 15:04  joron

	* displays/piqsl/piqsl.cpp: Update the usage text and test for
	  ".xml" and ".XML" instead of
	  only "xml" while attempting to load up a book.

2007-07-25 14:53  joron

	* displays/piqsl/piqsl_ui.fl: Add a short message to display the
	  version for piqsl very similar to
	  what piqsl.cpp prints to the screen when use with --version.
	  
	  

2007-07-25 13:20  c42f

	* displays/piqsl/piqsl_ui.fl: * Fix a bug in piqsl: Performing
	  File->Open Library, and then selecting Cancel
	  caused an exception (std::logic_error) because fl_file_chooser
	  returns NULL.

2007-07-25 12:53  joron

	* displays/piqsl/piqsl.cpp: Give the change to piqsl to open up
	  either a booklet or a simple tiff
	  file. I used the leftovers from argparse and based if I find xml
	  it will try to open an booklet for the name.

2007-07-25 12:46  c42f

	* displays/piqsl/framebuffer.cpp: * Fix double deletion of some
	  fltk widgets (and consequent segfault). These
	  are automatically child widgets of the window, so don't have to
	  be deleted by
	  hand.

2007-07-25 12:11  scorp007

	* displays/piqsl/image.cpp, displays/piqsl/piqsl.cpp,
	  platform/win32/SConscript, renderer/ddmanager/ddmanager.cpp:
	  Portability fixes: it now should compile on Visual Studio 8.

2007-07-25 10:11  c42f

	* displays/piqsl/displayserverimage.cpp: * Remove unneeded boost
	  filesystem includes

2007-07-25 10:05  pgregory

	* displays/piqsl/piqsldisplay.cpp: Fix illegal statically allocated
	  array of dynamic size

2007-07-24 20:09  pgregory

	* renderer/render/ri.h: Fix main include file to remove C++ style
	  comments.

2007-07-24 19:19  pgregory

	* aqsistypes/posix/socket_system.cpp, aqsistypes/socket.h,
	  aqsistypes/win32/socket_system.cpp: Merge
	  branches/new-framebuffer into the trunk.

2007-07-24 18:58  pgregory

	* SConstruct, aqsisrc.in, aqsistypes/SConscript,
	  aqsistypes/aqsis_types.h, aqsistypes/file.h,
	  aqsistypes/posix/SConscript, aqsistypes/posix/file_system.cpp,
	  aqsistypes/win32/SConscript, aqsistypes/win32/file_system.cpp,
	  build_check.py, build_support.py, displays/display/SConscript,
	  displays/piqsl, displays/piqsl/SConscript,
	  displays/piqsl/book.cpp, displays/piqsl/book.h,
	  displays/piqsl/bookbrowser.cpp, displays/piqsl/bookbrowser.h,
	  displays/piqsl/displayhelpers.c,
	  displays/piqsl/displayserverimage.cpp,
	  displays/piqsl/displayserverimage.h,
	  displays/piqsl/framebuffer.cpp, displays/piqsl/framebuffer.h,
	  displays/piqsl/image.cpp, displays/piqsl/image.h,
	  displays/piqsl/notes, displays/piqsl/piqsl.cpp,
	  displays/piqsl/piqsl.h, displays/piqsl/piqsl_ui.fl,
	  displays/piqsl/piqslbase.cpp, displays/piqsl/piqslbase.h,
	  displays/piqsl/piqsldisplay.cpp, displays/piqsl/piqsldisplay.h,
	  platform/darwin/SConscript, platform/default/SConscript,
	  platform/win32/SConscript, renderer/ddmanager/ddmanager.cpp,
	  thirdparty/tinyxml/SConscript, thirdparty/tinyxml/changes.txt,
	  thirdparty/tinyxml/readme.txt, thirdparty/tinyxml/tinystr.cpp,
	  thirdparty/tinyxml/tinystr.h, thirdparty/tinyxml/tinyxml.cpp,
	  thirdparty/tinyxml/tinyxml.h,
	  thirdparty/tinyxml/tinyxmlerror.cpp,
	  thirdparty/tinyxml/tinyxmlparser.cpp: Merge
	  branches/new-framebuffer into the trunk.

2007-07-23 15:21  c42f

	* coding_standard/codestyle.h: * Add some notes about #include
	  ordering and use of the virtual keyword.

2007-07-23 01:42  c42f

	* SConstruct, build_tools/SConscript: * Add an SConstruct script to
	  build_tools, so that the object file(s) will be
	  generated in the build directory rather than the source
	  directory.
	  * Hopefully this is the last immediate little change to be made
	  to the unit
	  testing stuff. We still need proper autodetection of the library
	  name for
	  boost_unit_test_framework.

2007-07-23 01:00  c42f

	* SConstruct, build_tools/unittest.py: * Small modification to the
	  unit test tool to make it more "scons standard"
	  * Make sure that boostautotestmain.cpp is compiled only once, and
	  with a
	  well-defined environment.

2007-07-22 14:23  c42f

	* NSIS.py, SConstruct, aqsistypes/SConscript,
	  aqsistypes/aqsismath_test.cpp, aqsistypes/color_test.cpp,
	  aqsistypes/vector3d_test.cpp, build_tools, build_tools/NSIS.py,
	  build_tools/boostautotestmain.cpp, build_tools/unittest.py,
	  platform/darwin/platform_utils.py, platform/default/SConscript,
	  platform/default/platform_utils.py, platform/win32/SConscript,
	  platform/win32/platform_utils.py: * Add unit testing integration
	  to the scons build system
	  "scons test" will now run all unit tests.
	  Finer-grained control can be obtained easily because of the way
	  I've set it
	  up; I'm not sure if that would be a good thing yet or not.
	  
	  * Create a directory scons_tools for build tools.

2007-07-22 09:55  c42f

	* testing/regression/shaders/show_away_facing_normals.sl: Add a
	  forgotten shader needed in regression test for bug #1740063

2007-07-22 08:23  c42f

	* aqsistypes/MultiTimer.h, aqsistypes/aqsismath.h,
	  aqsistypes/vector3d.h, aqsistypes/win32/aqsis_compiler.h,
	  displays/d_sdcWin32/d_sdcWin32.cpp, renderer/render/imagepixel.h,
	  renderer/render/itexturemap.h, renderer/render/occlusion.cpp,
	  renderer/render/texturemap.h: * Remove several "#undef min" and
	  "#undef max" in favour of a global
	  "#define NOMINMAX" in aqsistypes/win32/aqsis_compiler.h
	  When windows.h is included, it defines the macros min and max,
	  which were
	  messing up other parts of the code (thanks to Anteru for pointing
	  this out!)
	  
	  This means that future code should always include aqsis.h before
	  windows.h,
	  or #define NOMINMAX for parts which are not in the aqsis core (eg
	  displays).

2007-07-21 06:39  c42f

	* build_support.py, version.h.in: * Modify getSCMRevision() so that
	  it doesn't spam the console with the output of "svn info --xml"
	  * Remove unecessary #inclusion of sstring.h in version.h

2007-07-17 17:12  c42f

	* aqsistypes/SConscript, aqsistypes/aqsis_types.h,
	  aqsistypes/aqsismath.h, aqsistypes/aqsismath_test.cpp,
	  aqsistypes/color.h, aqsistypes/color_test.cpp,
	  aqsistypes/vector3d.h, aqsistypes/vector3d_test.cpp,
	  renderer/render/nurbs.cpp, renderer/render/patch.cpp,
	  renderer/render/quadrics.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp: Cleanups targeted
	  at removing macros from aqsis_types.h:
	  * Created aqsismath.h; add inline functions to it to be used
	  instead of the
	  macros in aqsis_types.h
	  * Remove some disused code from aqsis_types.h (eg, LOWEST_BIT() )
	  * Remove CMAX, CMIN, CCLAMP, VMAX, VMIN, VCLAMP in favour of
	  inline functions
	  in vector3d.h and color.h
	  * Add some unit tests for the new functions. Still need to figure
	  out how to
	  get these hooked up to a scons build alias.

2007-07-17 12:27  joron

	* argparse/argparse.h: Remove the warning for mingw gcc compiler.

2007-07-17 12:26  joron

	* rib/rib2/scanner.ll: Remove the warning for mingw gcc compiler.

2007-07-17 12:25  joron

	* rib/rib2/bdec.cpp, rib/rib2/parser.yy: Remove the warning for
	  mingw compiler.

2007-07-12 10:36  mafm

	* renderer/ddmanager/ddmanager.cpp: Fixing a delete operator, the
	  variables are arrays.

2007-07-12 04:40  c42f

	* rib/rib2/bdec.cpp, rib/rib2/bdec.h: * Add some todos for cleanup
	  of the binary decoder class.

2007-07-11 04:52  c42f

	* testing/regression/RIBs/Bugs/Bug1740063/Bug1740063.rib,
	  testing/regression/RIBs/Bugs/Bug1740063/jobs.cfg,
	  testing/regression/reference/Bug1740063.tif: Make a better test
	  case for bug #1740063, and commit a correct reference image

2007-07-11 04:28  c42f

	* renderer/render/curves.cpp, renderer/render/curves.h: * Slight
	  cleanup: remove some code from the header.
	  * Make sure that any user-specified normals don't get modified.

2007-07-10 09:51  mafm

	* renderer/render/shadowmap.cpp: Fixing small leak

2007-07-09 14:27  ShortWave

	* tools/BtoR/BtoRGUIClasses.py: Updated again to fix a bug with
	  character encoding.

2007-07-09 14:01  ShortWave

	* tools/BtoR/BtoRGUIClasses.py: Modified to solve syntax error due
	  to invalid character/encoding.

2007-07-09 13:02  joron

	* renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h:
	  Fix a couple of warnings:
	  
	  1) I removed unused variables in the
	  CollapseBucketsToScanlines(),
	  2) I add return value to
	  CqDeepDisplayRequest::CollapseBucketsToScanlines()
	  3) I make sure all the controls of execution will return a
	  sensible value to CqShallowDisplayRequest::SendToDisplay()
	  4) I changed the signature for ThisDisplayUses() since it is not
	  really
	  using the return value and anyway to return value was set anyway.

2007-07-09 06:00  WayneZacMP

	* renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h:
	  Making CqDisplayRequest::CollapseBucketToScanlines a bool
	  function whose return value indicates if a row of buckets has
	  been accumulated or not. Also switching a few data types to use
	  boost pointers and new instead of malloc. Tried using
	  boost:shared_array for array managament, but there is no such
	  type in my boost library? I am returning to the dsm branch now to
	  make changes related to DSM stuff there, since the relevant
	  CqBucket and display driver changes haven't been merged yet to
	  trunk yet. Before I proceed further in the trunk, I need to learn
	  how I will handle the unsorted vector of buckets I am storing per
	  row, because the data will need to be sent in order when the
	  displays want scanline order. I also need to know what display
	  types actually request scanline order, so that I can test it.

2007-07-08 17:12  WayneZacMP

	* renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/render/iddmanager.h: Refactoring of the display manager,
	  and introduction of a CqDisplayRequest class hierarchy. Next is
	  to change the way bucket data is accumulated when the display
	  wants scanline order. We will change the behavior of
	  CqDisplayRequest::DisplayBucket to handle arbitrary bucket order.
	  Note: I was reluctant to commit because the RTS timed out on 2
	  regression tests: Bug940418 and Bug1584454 on OS X, but this
	  happened prior to my changes as well, and there was no such
	  problem on Linux.

2007-07-06 17:08  joron

	* renderer/render/procedural.cpp: Again make sure the pragma is
	  only for MsDev compilers not for mingw g++

2007-07-06 13:54  cgtobix

	* platform/darwin/SConscript: Fixes for finding includes installed
	  via fink on Mac OS X

2007-07-06 13:23  cgtobix

	* platform/darwin/SConscript: Automatic detection of boost on Mac
	  OS X (thanks to Leon)

2007-07-05 13:34  joron

	* renderer/render/points.cpp: [Bug 1740063] Simplify the normal
	  generation for points.cpp since the normal could not be assigned
	  and assuming the occlusion for any points is good.

2007-07-04 20:13  joron

	* testing/regression/reference/Bug1740063.tif: [ Bug 1740063 ] --
	  refresh the reference file accordingly

2007-07-04 20:12  joron

	* renderer/render/curves.h, renderer/render/points.cpp: [Bug
	  1740063] -- I took the code from nurbs.cpp and also fix the
	  points.cpp
	  now it is undistinguishable from 3delight rendering.

2007-07-04 17:51  c42f

	* testing/regression/RIBs/Bugs/Bug1740063/Bug1740063.rib,
	  testing/regression/RIBs/Bugs/Bug1740063/jobs.cfg: * Add RiPoints
	  to the ends of each curve in the test case for Bug1740063.
	  These points should all be visible with the default normals, but
	  are not
	  (another closely related bug.)

2007-07-04 17:20  c42f

	* testing/regression/RIBs/Bugs/Bug1740063/Bug1740063.rib,
	  testing/regression/RIBs/Bugs/Bug1740063/jobs.cfg: Improve the
	  test case for bug #1740063 to include RiCurves with both
	  orientations (LH & RH) in the same image.

2007-07-04 15:00  joron

	* testing/regression/RIBs/Bugs/Bug931713/bug931713.rib: Reverse the
	  shader directory directory.

2007-07-04 13:47  joron

	* testing/regression/reference/Bug1740063.tif: [Bug 1740063] Add a
	  reference tiff file

2007-07-04 13:46  joron

	* testing/regression/RIBs/Bugs/Bug1740063,
	  testing/regression/RIBs/Bugs/Bug1740063/Bug1740063.rib,
	  testing/regression/RIBs/Bugs/Bug1740063/jobs.cfg: [Bug 1740063]
	  Add a test case in the RTS

2007-07-04 13:11  joron

	* renderer/render/curves.h: [Bug 1740063] The bug was explicit
	  enough and it is just about the default value for the normal we
	  set. Assuming the rest of the code is ok and culling is
	  appropriate it is resonnable to believe it is the actual default
	  value of the normal which is wrong.

2007-07-04 11:14  joron

	* testing/regression/RIBs/Bugs/Bug1741324/jobs.cfg: [Bug 1741324]
	  Explain the test case in the jobs.cfg

2007-07-04 10:48  joron

	* testing/regression/reference/Bug1741324.tif: [Bug 1741324] Add a
	  reference file for the test case.

2007-07-04 10:45  joron

	* testing/regression/RIBs/Bugs/Bug1741324,
	  testing/regression/RIBs/Bugs/Bug1741324/Bug1741324.rib,
	  testing/regression/RIBs/Bugs/Bug1741324/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1741324/mxmatch.sl: [Bug 1741324]
	  Add a test case for it in the RTS.

2007-07-03 19:35  minty

	* renderer/render/ishaderexecenv.h,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/funcdef.cpp: [Bug 1741324] implement mix
	  functions with color for alpha

2007-06-28 13:39  joron

	* renderer/render/occlusion.cpp: Fix a warning for gcc about
	  unknown pragma directive which in fact is for only MSVC
	  compilers.

2007-06-27 23:35  c42f

	* displays/d_sdcWin32/interface.c: Revert the changes from rev 1156
	  to interface.c, except for changing the int to
	  a size_t in DspyImageQuery - no 'extern "C"' needed for C files.

2007-06-27 20:05  joron

	* shadercompiler/shaderexecenv/shadeops_illum.cpp: Fix a warning
	  missing a static_cast between a float and uint.

2007-06-27 19:57  joron

	* displays/d_sdcWin32/interface.c: No need to put extern "C" in
	  front of the function since the module is C.

2007-06-27 16:31  c42f

	* renderer/ddmanager/debugdd.cpp: Modify debugdd to remove some
	  dead code and add debug messages to Aqsis::log().

2007-06-27 14:05  c42f

	* displays/d_exr/d_exr.cpp, displays/d_sdcBMP/d_sdcBMP.cpp,
	  displays/d_sdcWin32/d_sdcWin32.cpp,
	  displays/d_sdcWin32/interface.c, displays/d_xpm/xpm.cpp,
	  displays/display/display.cpp, renderer/ddmanager/ndspy.h: Some of
	  our displays used an "int" rather than "size_t" parameter to
	  DspyImageQuery. As a result they don't inherit the extern "C"
	  specified in
	  ndspy.h. Looking online seems to indicate that the pixar version
	  of
	  DspyImageQuery uses a size_t, so ndspy.h was changed accordingly.
	  To prevent
	  similar issues in future, extern "C" was also explicitly added to
	  the
	  implementation of the Dspy* functions in all displays. From now
	  on, such
	  problems should generate a compiler warning rather than silently
	  performing C++
	  name-mangling, and failing to find the appropriate Dspy call at
	  runtime.
	  
	  Note: this was probably only a bug on systems where
	  sizeof(size_t) != sizeof(int)
	  such as x86_64.

2007-06-21 17:07  c42f

	* rib/ri2rib/ascii.cpp, rib/ri2rib/ascii.h, rib/ri2rib/binary.cpp,
	  rib/ri2rib/binary.h, rib/ri2rib/context.cpp,
	  rib/ri2rib/output.cpp, rib/ri2rib/output.h: * Refactoring the
	  indentation formatting code in libri2rib.
	  * These changes are intended not to change any behaviour yet
	  (checked against all
	  the RIBs in the RTS, with and without indenting.)

2007-06-21 13:35  c42f

	* rib/ri2rib/error.cpp, rib/ri2rib/error.h, rib/ri2rib/output.cpp,
	  rib/ri2rib/output.h: Fix bug #1740534. libri2rib was incorrectly
	  calculating the length of
	  parameters of class "varying" as attached to RiPatchMesh
	  primitives. The
	  correct algorithm was found in patch.h.

2007-06-21 10:17  anteru

	* aqsistypes/exception.cpp, aqsistypes/exception.h: * rename
	  XqValidationFailure to XqValidation to be more consistent with
	  the other exception names

2007-06-21 06:35  c42f

	* aqsistypes/exception.h: Add virtual specifiers to exception
	  destructors for good documentation practise.

2007-06-20 19:58  c42f

	* rib/miqser/miqser.cpp, rib/rib2/bdec.cpp, rib/rib2/bdec.h: Add a
	  "-decodeonly" option to miqser to allow dumping of binary RIBs to
	  text
	  format without any additional formatting. That is, without going
	  through the
	  RIB parser.
	  
	  This is useful for debugging the binary decoder, and particularly
	  for any
	  people trying to debug scripts which export binary RIB.
	  
	  Also a little refactoring of miqser.cpp in aid of the above.

2007-06-20 18:39  c42f

	* renderer/render/micropolygon.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  testing/regression/RIBs/Bugs/Bug1737117,
	  testing/regression/RIBs/Bugs/Bug1737117/Bug1737117.rib,
	  testing/regression/RIBs/Bugs/Bug1737117/jobs.cfg,
	  testing/regression/reference/Bug1737117.tif: Fix bug #1737117.
	  The ugly boundary artefacts were due to back face culling
	  using the shading normal rather than the geometric normal.

2007-06-18 06:03  scorp007

	* testing/regression/RIBs/Misc/Teapot01_54836437_DRA.rib,
	  testing/regression/RIBs/Misc/many_teapots.rib: Added a new
	  regression to stress test Delayed ReadArchives. The file
	  `many_teapots.rib' instances 10,000 teapots from the same archive
	  `Teapot01_54836437_DRA.rib'.

2007-06-14 13:37  anteru

	* aqsistypes/exception.cpp, aqsistypes/exception.h: * fixed
	  exception specification on the exception classes

2007-06-14 12:40  anteru

	* aqsistypes/exception.cpp, aqsistypes/exception.h: * removed
	  ~XqException again, it inherits the virtual destructor from
	  std::runtime_error

2007-06-14 12:17  anteru

	* aqsistypes/exception.cpp, aqsistypes/exception.h: * fixed
	  includes
	  * moved implementation to exception.cpp

2007-06-14 11:59  anteru

	* aqsistypes/exception.h: * forgot virtual destructor in
	  XqException

2007-06-14 11:49  anteru

	* aqsistypes/SConscript, aqsistypes/exception.cpp,
	  aqsistypes/exception.h, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp,
	  renderer/render/inlineparse.cpp, renderer/render/renderer.cpp,
	  renderer/render/ri.cpp, rib/miqser/miqser.cpp: * added new
	  exceptions classes (XqException, XqInternal, XqValidation,
	  XqEnvironment)
	  * changed strReason () to the more conformant what ()

2007-06-13 10:55  c42f

	* aqsistypes/aqsis_types.h, aqsistypes/bitvector.h,
	  aqsistypes/color.h, aqsistypes/file.cpp, aqsistypes/file.h,
	  aqsistypes/list.h, aqsistypes/matrix.cpp, aqsistypes/matrix.h,
	  aqsistypes/refcount.cpp, aqsistypes/refcount.h,
	  aqsistypes/vector2d.h, aqsistypes/vector3d.h,
	  aqsistypes/vector4d.h, displays/display/display.h,
	  renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/render/attributes.h, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/bound.h,
	  renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/clippingvolume.h, renderer/render/condition.cpp,
	  renderer/render/condition.h, renderer/render/csgtree.cpp,
	  renderer/render/csgtree.h, renderer/render/cubiccurves.cpp,
	  renderer/render/curves.cpp, renderer/render/curves.h,
	  renderer/render/environment.cpp, renderer/render/genpoly.cpp,
	  renderer/render/genpoly.h, renderer/render/graphicsstate.h,
	  renderer/render/iddmanager.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagers.cpp, renderer/render/imagers.h,
	  renderer/render/inlineparse.cpp, renderer/render/inlineparse.h,
	  renderer/render/irenderer.h, renderer/render/ishader.h,
	  renderer/render/ishaderdata.h, renderer/render/ishaderexecenv.h,
	  renderer/render/isurface.h, renderer/render/itransform.h,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h, renderer/render/lath.cpp,
	  renderer/render/lath.h, renderer/render/lights.cpp,
	  renderer/render/lights.h, renderer/render/linearcurves.cpp,
	  renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/motion.h, renderer/render/mpdump.h,
	  renderer/render/nurbs.cpp, renderer/render/nurbs.h,
	  renderer/render/occlusion.cpp, renderer/render/occlusion.h,
	  renderer/render/options.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/points.cpp, renderer/render/points.h,
	  renderer/render/polygon.cpp, renderer/render/polygon.h,
	  renderer/render/procedural.cpp, renderer/render/procedural.h,
	  renderer/render/quadrics.cpp, renderer/render/quadrics.h,
	  renderer/render/renderer.cpp, renderer/render/renderer.h,
	  renderer/render/ri.cpp, renderer/render/shaders.h,
	  renderer/render/shadowmap.cpp, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h, renderer/render/transform.cpp,
	  renderer/render/transform.h, renderer/render/trimcurve.cpp,
	  renderer/render/trimcurve.h, rib/ri2rib/binary.cpp,
	  rib/ri2rib/binary.h, rib/ri2rib/context.cpp,
	  rib/ri2rib/context.h, rib/ri2rib/dictionary.cpp,
	  rib/ri2rib/dictionary.h, rib/ri2rib/error.cpp,
	  rib/ri2rib/error.h, rib/ri2rib/inlineparse.cpp,
	  rib/ri2rib/inlineparse.h, rib/ri2rib/output.cpp,
	  rib/ri2rib/outstream.cpp, rib/ri2rib/ri.cpp, rib/rib2/bdec.cpp,
	  rib/rib2/bdec.h, shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/funcdef.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/libslparse.h,
	  shadercompiler/slparse/optimise.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll,
	  shadercompiler/slparse/typecheck.cpp,
	  shadercompiler/slparse/vardef.cpp,
	  shadercompiler/slparse/vardef.h, texturing/teqser/teqser.cpp:
	  Remove all occurances of TqBool, TqTrue and TqFalse in favour of
	  the standard
	  C++ counterparts; bool, true, false. This replaces a simple
	  typedef and two
	  #defines.

2007-06-11 15:37  c42f

	* testing/prototypes/texfilt/texfilt.py: (minor change) add a few
	  bits and pieces for visualising the gaussian filter
	  weighting function to the EWA prototype.

2007-06-11 13:05  pgregory

	* renderer/render/imagebuffer.cpp: Apply cleanup patch from Manuel
	  A. Fernandez Montecelo, remove various unused variables.

2007-06-09 05:41  c42f

	* coding_standard/codestyle.cpp: Change postincrement to
	  preincrement operation, for general good-practices.

2007-06-08 18:55  c42f

	* .astylerc, coding_standard, coding_standard/astylerc,
	  coding_standard/codestyle.cpp, coding_standard/codestyle.h: * Add
	  a "style guide" for all new contributions to the aqsis codebase.

2007-06-03 10:00  mbaas

	* testing/regression/cgi-bin,
	  testing/regression/cgi-bin/acceptdiff.py,
	  testing/regression/rendertester.py, testing/regression/server.py:
	  Added initial functionality to update reference images by
	  clicking a button on the generated html pages

2007-06-01 09:53  pgregory

	* renderer/render/imagebuffer.cpp: Remove dead code

2007-05-29 21:58  pgregory

	* testing/regression/reference/Bug1030761.tif,
	  testing/regression/reference/Bug1031110.tif,
	  testing/regression/reference/Bug1049628.tif,
	  testing/regression/reference/Bug1073845.tif,
	  testing/regression/reference/Bug1104545.tif,
	  testing/regression/reference/Bug1108592.tif,
	  testing/regression/reference/Bug1144077.tif,
	  testing/regression/reference/Bug1266044.tif,
	  testing/regression/reference/Bug1326794.tif,
	  testing/regression/reference/Bug1444331.tif,
	  testing/regression/reference/Bug1496341.tif,
	  testing/regression/reference/Bug1642075.tif,
	  testing/regression/reference/Bug940418.tif,
	  testing/regression/reference/Dh82.tif,
	  testing/regression/reference/bezier.tif,
	  testing/regression/reference/bug1014043.tif,
	  testing/regression/reference/bug948827.tif,
	  testing/regression/reference/catmull-rom.tif,
	  testing/regression/reference/complexnurbs1.tif,
	  testing/regression/reference/dofmb.tif,
	  testing/regression/reference/mblur_1x1.tif,
	  testing/regression/reference/orientation.tif,
	  testing/regression/reference/orientation_onesided.tif,
	  testing/regression/reference/points1.tif,
	  testing/regression/reference/reverseorientation.tif,
	  testing/regression/reference/simplenurbs.tif,
	  testing/regression/reference/spline_basis.tif,
	  testing/regression/reference/subdiv4.tif,
	  testing/regression/reference/teapotgeom.tif: Update reference
	  images for renders with PixelSampls 1 1. Recent changes to the
	  sample point initialisation meant that we now jitter, even for
	  1x1.

2007-05-26 04:14  mbaas

	* testing/regression/rendertester.py: Allow the pdiff command
	  string to contain options / Changed the email address at the top
	  of the file

2007-05-19 08:33  waynezacmp

	* shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp: fix an error in
	  vmdatagather.cpp and in vmoutput.cpp that were causing the debug
	  build to fail

2007-05-15 12:34  c42f

	* testing/prototypes/texfilt/texfilt.py: * Make trilinear filtering
	  work for comparisons
	  * Add some comparison functions to compare different methods of
	  mipmap level
	  calculation and methods of filtering

2007-05-15 05:52  c42f

	* testing/misc, testing/prototypes, testing/prototypes/texfilt,
	  testing/prototypes/texfilt/downsample_test.m,
	  testing/prototypes/texfilt/downsample_test.py,
	  testing/prototypes/texfilt/texfilt.py: Rearrange the directory
	  structure for prototyping code to be more sensible.

2007-05-15 05:34  c42f

	* testing/misc/mipmapping/mipmap_test.py: * Fix EWA filtering
	  (fudge factor removed :-)
	  * Move all filtering functionality into MipLevel class
	  * Make EWA filtering use mipmap levels properly
	  * Estimate the Jacobian in EWA filtering numerically (compares
	  well to
	  analytical version). This means that both filtering via
	  stocahastic
	  integration, and EWA have the same external interface.
	  * Add some more image warping transformations

2007-05-14 16:34  c42f

	* testing/misc/mipmapping/mipmap_test.py: * Add notes about
	  dependencies to python AF test code.

2007-05-14 16:30  c42f

	* testing/misc/mipmapping/mipmap_test.py: * Add the Elliptical
	  Weighted Average (EWA) anisotropic filter to the test code
	  * Implement several ways of calculating the desired mipmap level
	  * Fix some comments to try to increase readability

2007-05-12 21:37  pgregory

	* shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/slparse/parser.yy: Fix up the occlusion sl
	  parsing, unfortunately, we now how 26 shift/reduce conflicts,
	  really need to spend some time resolving those. Fix the dummy
	  gather() implementation, now properly reports 'no hit' for all
	  samples, and will therefore run the ELSE statment for 'samples'
	  times, as if no hits were recorded. If there is no ELSE statment,
	  the 'hit' statement will just be skipped.

2007-05-12 10:29  joron

	* shadercompiler/shadervm/shadervm1.cpp: Some integers were printed
	  for no apparent reasons.
	  I put Aqsis::log() << debug instead of std::cout.
	  

2007-05-11 14:51  pgregory

	* renderer/render/ishaderexecenv.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll: Initial dummy implementation
	  of the 'gather' construct in SL

2007-05-10 16:32  c42f

	* testing/misc/mipmapping/mipmap_test.py: * Add functions to test
	  anisotropic filtering
	  * Add perspective mappings for testing filtering methods

2007-05-09 08:29  pgregory

	* renderer/render/bucket.cpp, renderer/render/imagepixel.cpp,
	  shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/typecheck.cpp: Update occlusion shadeop to
	  accept both textured and raytraced alternatives (note: rt not
	  implemented, just a placeholder). Also, add some debug output to
	  the function typechecking, and add -v option to aqsl to control
	  level of message output

2007-05-09 00:14  c42f

	* testing/misc/mipmapping/mipmap_test.py: Add trilinear filtering
	  to texture filtering test script

2007-05-08 21:38  pgregory

	* renderer/render/ishaderexecenv.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll: Add placeholder SL functions
	  for rayinfo and occlusion (raytraced) to allow quiet support of
	  MTOR

2007-05-08 21:01  pgregory

	* shadercompiler/aqsl/aqslcomp.cpp: Rollback change 1020: mkstemp
	  is not the same as mktemp, and can't be used in place of it.

2007-05-03 23:48  Pseudonym

	* shadercompiler/aqsl/aqslcomp.cpp: s/mktemp/mkstemp/ -- mktemp has
	  a well-known race condition

2007-05-03 16:27  c42f

	* testing/misc/mipmapping/mipmap_test.py: Finish implementation of
	  mipmap, downsampler, and MipLevel prototype classes.

2007-05-02 20:20  joron

	* shadercompiler/shadervm/shadervm.h: Remove the warning about the
	  redefinition of i variable in a second for loop... vc6 don't like
	  it.

2007-05-02 01:12  c42f

	* testing/misc/mipmapping/img_filter.py,
	  testing/misc/mipmapping/mipmap_test.py: Start writing some more
	  mipmapping tests, this time aimed at:
	  * Trilinear filtering with optimal resulting texture quality
	  * Checking mipmap indexing
	  * Investigating anisotropic filtering

2007-04-30 15:23  c42f

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Move private inline function for CqImageDownsampler out of the
	  header file.

2007-04-30 14:48  c42f

	* renderer/render/filters.cpp: Add a small optimisation to the
	  gaussian filter function.

2007-04-29 01:35  Pseudonym

	* renderer/render/attributes.cpp, renderer/render/ri.cpp: API for
	  GeometricApproximation.

2007-04-28 10:04  ltatkinson

	* texturing/teqser/teqser.cpp: Minor teqser 'Help' page update,
	  further to c42f's recent commit.

2007-04-28 05:52  c42f

	* texturing/teqser/teqser.cpp: Make teqser use the new method built
	  in to argparse for putting default values
	  into usage strings.

2007-04-28 05:50  c42f

	* argparse/argparse.cpp, argparse/argparse.h: The usage string for
	  argparse options now allows the string "%default" to be
	  replaced automatically with the default value given by the return
	  pointer.

2007-04-28 01:48  c42f

	* texturing/teqser/teqser.cpp: Remove attempt at specifying default
	  values for floats in the command line help
	  text. ArgParse will soon be changed to support replacing strings
	  "%default"
	  with the default value.

2007-04-27 12:17  ltatkinson

	* texturing/teqser/teqser.cpp: Forgot an '#include' statement as
	  per my previous commit (3rd-time lucky).

2007-04-27 11:54  ltatkinson

	* texturing/teqser/teqser.cpp: Fix typo(s) in previous commit.

2007-04-27 11:20  ltatkinson

	* texturing/teqser/teqser.cpp: Fix teqser 'Help' information issue,
	  regarding a type mismatch (float > string).

2007-04-27 09:56  ltatkinson

	* aqsistypes/logging.cpp: Changed 'WARNING' and 'DEBUG' (slightly)
	  console output colours to be more visible under white, grey and
	  black backgrounds.

2007-04-26 22:32  ltatkinson

	* shadercompiler/aqsl/aqslcomp.cpp, texturing/teqser/teqser.cpp:
	  Update 'help' pages to contain a little more (detail)
	  information.

2007-04-24 10:29  anteru

	* texturing/plugins/bake2tif/bake2tif.c: Fixed build error for VC8:
	  Mixed code and declarations.

2007-04-23 23:34  c42f

	* rib/ri2rib/output.h: LAST_Function should be _last_ in the
	  EqFunctions enum. (A little bug I noticed by mistake.)

2007-04-23 13:28  joron

	* texturing/plugins/bake2tif/bake2tif.c: bake2tif() will use
	  instead of strstr() to composed a temporary name; strrstr()

2007-04-21 16:58  c42f

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Make downsampling respect the texture wrap mode which can be
	  black, periodic or
	  clamped.

2007-04-21 15:26  c42f

	* renderer/render/ri.cpp: Change the calculation of the number of
	  mipmap levels to catch all those down
	  to size 1x1 when saving.

2007-04-21 05:52  c42f

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Move CqImageDownsampler out of CqTextureMap, since it doesn't
	  need to be a
	  nested class.

2007-04-21 05:25  scorp007

	* renderer/render/texturemap.h: Moved #undef max and min to below
	  the #include's so that VC's preprocessor would not mess up the
	  tokens for std::min/max()

2007-04-21 01:07  joron

	* texturing/plugins/bake2tif/bake2tif.c: fix a typo.

2007-04-21 00:42  joron

	* texturing/plugins/bake2tif/bake2tif.c: Prevent the user the keys
	  (normally s,t) will be normalized within the generated
	  bake/mipmap.
	  
	  The numbers min_s, max_s, min_t, max_t will be display to the
	  console and must be used in with texture() later to unnormalized
	  the keys input. eg.
	  
	  texture("nameofbake", s-min_s/(max_s-min_s),
	  t-min_s/(max_t-min_s));
	  
	  The message is only output when either s, t is outside of the
	  interval
	  [0..1]

2007-04-20 20:16  joron

	* texturing/plugins/bake2tif/bake2tif.c: minor editing; I move
	  float *temporary up

2007-04-20 20:08  joron

	* texturing/plugins/bake2tif/bake2tif.c: make bake2tif() much more
	  robust; in particular if s,t are not within the interval [0,1] it
	  will normalize prior to convert to tiff file.

2007-04-20 15:09  c42f

	* renderer/render/texturemap.cpp: * Fixed some bugs with the
	  downsampling filter width.
	  * made debugging output go to the "debug" stream.

2007-04-20 13:22  joron

	* renderer/render/texturemap.cpp: some messages are printed out to
	  the console while creating the mipmap; I think it is better to
	  have only when -verbose is used.
	  
	  
	  so I changed few aqsis::log() << "..
	  for
	  chage aqsis::log() << info << "...

2007-04-20 12:18  ltatkinson

	* content/ribs/features/bake/bake.rib,
	  content/ribs/features/bake/bakesphere.rib,
	  content/ribs/features/bake/baketest.rib,
	  content/ribs/features/bake/render.bat,
	  content/ribs/features/bake/render.sh,
	  content/ribs/features/bake/sphere.rib,
	  content/shaders/surface/expensive.sl: Updated 'bake' example to
	  be more consistent with other example files.

2007-04-20 10:39  joron

	* content/ribs/features/bake, content/ribs/features/bake/bake.rib,
	  content/ribs/features/bake/baketest.rib: Put back the sample for
	  bake() in sl.
	  bake.rib generate sphere.bake.bake
	  and later
	  you could do
	  teqser sphere.bake.bake sphere.bake.tx
	  aqsis baketest.rib

2007-04-19 18:59  c42f

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Rewrite the image downsampling and mipmapping code. Works to the
	  extent that
	  it can be used, but still has lots of bugs. Now caches filter
	  coefficients in
	  a class.

2007-04-19 18:56  c42f

	* aqsistypes/aqsis_types.h: Add a template function Aqsis::clamp;
	  intended to deprecate the CLAMP macro.

2007-04-17 07:41  anteru

	* aqsistypes/color.h, renderer/render/attributes.h,
	  renderer/render/csgtree.h, renderer/render/graphicsstate.h,
	  renderer/render/micropolygon.h, renderer/render/occlusion.h,
	  renderer/render/parameters.h, renderer/render/surface.h,
	  renderer/render/transform.h: tagged/fixed unused parameters in
	  render/aqsistypes.

2007-04-16 13:38  c42f

	* testing/misc/mipmapping/img_filter.py: Fix a silly bug in the
	  image normalisation.

2007-04-16 13:14  anteru

	* texturing/plugins/common/pixelsave.c,
	  texturing/plugins/common/pixelsave.h: Disable revision #950
	  changes for WIN32 (breaks VC8)

2007-04-16 10:24  anteru

	* renderer/render/imagepixel.cpp: typo fixed which disabled
	  Filter-Average. The "average" filter should work again now

2007-04-16 08:46  pgregory

	* texturing/plugins/common/pixelsave.c,
	  texturing/plugins/common/pixelsave.h: Add inline to the save_tiff
	  declaration to avoid problems with duplicate inclusion during
	  link.

2007-04-13 11:23  ltatkinson

	* SConstruct, build_support.py: SCM 'Revision' information
	  improvement(s).

2007-04-12 21:59  ltatkinson

	* build_support.py: Fix earlier typo (SCM information).

2007-04-12 21:29  ltatkinson

	* SConstruct, build_support.py, renderer/aqsis/aqsis.cpp,
	  rib/miqser/miqser.cpp, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  texturing/teqser/teqser.cpp, version.h.in: Update version
	  information system to include SCM (Subversion) revision
	  information.

2007-04-12 09:51  pgregory

	* SConstruct, build_support.py, renderer/aqsis/aqsis.cpp,
	  rib/miqser/miqser.cpp, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  texturing/teqser/teqser.cpp, version.h.in: Revert 945, SVN
	  revision number access method doesn't quite work

2007-04-12 08:49  pgregory

	* SConstruct, build_support.py, renderer/aqsis/aqsis.cpp,
	  rib/miqser/miqser.cpp, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  texturing/teqser/teqser.cpp, version.h.in: Update version
	  information system to include subersion revision information

2007-04-05 18:42  anteru

	* platform/win32/SConscript: removed unneeded debug output

2007-04-05 11:23  anteru

	* platform/win32/SConscript: switched to /Z7 so no .pdb copying is
	  requird for debugging.
	  cleaned the options up a bit, removed STATUS from /LTGC so
	  redirection to file is not messed up.

2007-04-05 10:35  scorp007

	* testing/regression/RIBs/MotionBlur/mblur.rib,
	  testing/regression/RIBs/MotionBlur/mblur2a.rib,
	  testing/regression/RIBs/MotionBlur/mblur_1x1.rib: Added Shutter
	  option to motion blur regression RIBs, since most renderers do
	  not render with motion blur if the option is omitted.

2007-04-04 15:38  anteru

	* platform/win32/SConscript: * moved OpenEXR setup into
	  setupVCLibraries

2007-04-04 11:37  anteru

	* platform/win32/Options.py, platform/win32/SConscript: * renamed
	  Off to off to be in sync with the rest of SCons

2007-04-04 10:28  anteru

	* platform/win32/SConscript: * fixed support for OpenEXR

2007-04-04 09:53  anteru

	* SConstruct, aqsistypes/SConscript, build_support.py,
	  displays/d_exr/SConscript, displays/d_sdcBMP/SConscript,
	  displays/d_sdcWin32/SConscript, displays/d_xpm/SConscript,
	  displays/display/SConscript, platform/win32/Options.py,
	  platform/win32/SConscript, renderer/aqsis/SConscript,
	  renderer/render/SConscript, rib/miqser/SConscript,
	  rib/ri2rib/SConscript, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slxargs/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/teqser/SConscript, thirdparty/dbo_plane/SConscript: *
	  Linux build should work again
	  * Refactored manifest embedding
	  * Added new options for VC8:
	  - SSE: Enable SSE support
	  - FP_Fast: Enable FPU optimizations
	  * Cleaned up the win32/SConscript a bit

2007-04-04 07:57  anteru

	* aqsistypes/SConscript, displays/d_exr/SConscript,
	  displays/d_sdcBMP/SConscript, displays/d_sdcWin32/SConscript,
	  displays/d_xpm/SConscript, displays/display/SConscript,
	  platform/win32/SConscript, renderer/aqsis/SConscript,
	  renderer/render/SConscript, rib/miqser/SConscript,
	  rib/ri2rib/SConscript, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slxargs/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/teqser/SConscript, thirdparty/dbo_plane/SConscript: *
	  Embed manifests for VC8

2007-04-03 11:33  anteru

	* SConstruct, aqsistypes/list.h, aqsistypes/pool.h,
	  platform/win32/Options.py, platform/win32/SConscript: *
	  preliminary support for VC8
	  - applied patch provided by scorp007
	  - patch was modified:
	  - (re-)added support for MSVC6
	  - fixed default paths setup
	  - fixed fltk library renaming
	  - changed switches for MSVC8
	  

2007-04-02 23:34  c42f

	* renderer/render/nurbs.cpp: Fix a bug which was causing a segfault
	  with VC++8. The bug involved writing
	  off the end of some std::vectors.

2007-03-31 01:32  c42f

	* aqsistypes/logging.h: Add <iostream> to logging.h rather than
	  <iosfwd> - otherwise just including
	  logging.h won't allow the use of the logging facilities work
	  unless you also
	  include <iostream> by hand.

2007-03-30 14:16  joron

	* renderer/render/ri.cpp: Remove three warnings; there are very
	  minors and mostly cosmetic.

2007-03-29 14:17  joron

	* renderer/render/filters.cpp: Cosmetic changes for the underlying
	  class support for the RiMitchellFilter.

2007-03-29 10:49  scorp007

	* platform/win32/SConscript: Updated SConscript file for mingw to
	  include -Wall switch for gcc.

2007-03-17 09:12  c42f

	* testing/misc, testing/misc/mipmapping,
	  testing/misc/mipmapping/README,
	  testing/misc/mipmapping/img_filter.m,
	  testing/misc/mipmapping/img_filter.py: Add test scripts for
	  mipmapping and texture filtering algorithms.

2007-03-08 19:01  joron

	* rib/rib2ri/librib2ri.cpp: add the mitchell parsing (for miqser in
	  fact) it was missing.

2007-03-08 15:05  joron

	* testing/regression/reference/Bug1676216.tif: Refresh the final
	  comparaison picture

2007-03-08 15:04  joron

	* testing/regression/RIBs/Bugs/Bug1676216/Bug1676216.rib: Lower the
	  shading rate

2007-03-08 15:00  joron

	* testing/regression/RIBs/Bugs/Bug1676216,
	  testing/regression/RIBs/Bugs/Bug1676216/Bug1676216.rib,
	  testing/regression/RIBs/Bugs/Bug1676216/jobs.cfg,
	  testing/regression/reference/Bug1676216.tif: add the bug #1676216
	  to RTS

2007-03-08 14:51  joron

	* rib/rib2/parser.yy: This will fix the bug #167216
	  
	  In essence I replace in the parser string_array with
	  string_array_or_empty token. It works like a charm.

2007-03-08 02:03  c42f

	* rib/api/api.xml, rib/api/apicache.xsl, rib/api/apidebug.xsl,
	  rib/api/apiheader.xsl, rib/api/apivalidate.xsl: Change api.xml to
	  use XML elements rather than XML attributes, in accordance
	  with w3c recommendations. Elements are for data; attributes are
	  for "data
	  about the data". Corresponding changes to the code generator
	  files (*.xsl).

2007-03-06 10:54  pgregory

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Should have fixed the mipmap downsampling now, and sped up the
	  mipmap generation at the same time.

2007-03-04 21:39  pgregory

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Interim commit for work on the texture mipmapping code. Still not
	  working.

2007-03-02 15:53  pgregory

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  More work to the replacement texture filtering stuff.

2007-03-01 21:59  pgregory

	* renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  Create a class for caching the filter values used during mipmap
	  creation.

2007-02-27 16:26  joron

	* renderer/render/texturemap.cpp: This will repair teqser when the
	  filter is bigger than 1; it turns to border of the mipmap were
	  more or less ignore from the accumulation/filtering while
	  creating the mipmap.
	  This will not introduce regression.
	  As far as I know teqser (or RiMakeTexture(), ...) will produce
	  very simllar mipmap now compared to 3delight.

2007-02-25 16:25  c42f

	* shadercompiler/shadervm/shadervm.h: Fix a minor memory leak in
	  the shadervm by storing embedded strings in a
	  retreivable way using an auxilary list.
	  
	  Bytecodes (union UsProgramElement) may be pointers to CqStrings,
	  but are stored
	  as a union so the type is inaccessible. Any strings attached to
	  program
	  elements therefore previously leaked memory when a shader was
	  deleted.

2007-02-25 15:09  c42f

	* displays/display/display.cpp, displays/display/display.h: Remove
	  some char* strings in favour of CqString - fixs a (very minor)
	  memory
	  leak occuring due to non-free()d memory allocated by strdup().
	  
	  In any case, strdup() is *not* a standard C function and should
	  probably be
	  avoided for portability.

2007-02-25 14:03  c42f

	* displays/display/display.cpp, displays/display/display.h: Some
	  memory was allocated with new[], but deleted with free(). Fix
	  this bug.

2007-02-25 12:50  c42f

	* renderer/render/blobby.cpp: Revert blobby.cpp back to unix-style
	  line endings.

2007-02-24 02:17  c42f

	* shadercompiler/shadervm/shadervm1.cpp: Fix a (sometimes fatal)
	  memory leak in SO_jz and SO_jnz. This leak caused the
	  memory usage to grow linearly over regions of an image which
	  contained:
	  1) a shader using a (possibly empty) illuminace block (in the
	  test case this was an atmosphere shader)
	  2) at least one light source.

2007-02-23 20:30  romainbehar

	* shadercompiler/codegenvm/vmoutput.cpp: More standard warning
	  message and exit

2007-02-22 21:25  pgregory

	* renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, rib/rib2/parser.yy: Implement a
	  further stage of Resource support. Graphics state now includes
	  the
	  ResourceBegin/End handling.

2007-02-22 13:31  pgregory

	* rib/ri2rib/output.cpp, rib/ri2rib/output.h, rib/ri2rib/ri.cpp,
	  rib/rib2/librib.h, rib/rib2/parser.yy, rib/rib2/scanner.ll,
	  rib/rib2ri/librib2ri.cpp, rib/rib2ri/librib2ri.h,
	  rib/rib2stream/librib2stream.cpp, rib/rib2stream/librib2stream.h:
	  Finish up scaffolding for new Resource api function calls. Now
	  supported across the tools, don't do anything yet.

2007-02-21 22:56  pgregory

	* renderer/render/ri.cpp, rib/api/api.xml: Initial framework for
	  Resource interface additions

2007-02-21 20:12  joron

	* renderer/render/texturemap.cpp: When we set the limit for the
	  texturememory cache be sure we won't pass the upper bound limit
	  of the integer (32 bits). It all the cases put a debug statement
	  of what is the value finally set.

2007-02-20 18:07  joron

	* testing/regression/reference/Bug1664409.tif: Add test case for
	  #1664409

2007-02-20 15:30  pgregory

	* shadercompiler/slparse/scanner.ll: Fix #1664409 : scope name
	  lookup wasn't exiting correctly on a valid find

2007-02-20 15:26  pgregory

	* testing/regression/RIBs/Bugs/Bug1664409,
	  testing/regression/RIBs/Bugs/Bug1664409/Bug1664409.rib,
	  testing/regression/RIBs/Bugs/Bug1664409/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1664409/test.sl: Add test case
	  for #1664409

2007-02-20 14:23  joron

	* shadercompiler/codegenvm/vmoutput.cpp: It will output a message
	  in case of the file could not be written and exit.
	  It will fix the bug [ 1663859 ] aqsl doesn't complain when
	  destination path doesn't exist.

2007-02-19 10:08  ltatkinson

	* AUTHORS: Minor updates to the AUTHORS file.

2007-02-18 21:44  pgregory

	* SConstruct: Small change to SConstruct to make it work with the
	  very latest version of SCons.

2007-02-16 16:49  joron

	* renderer/render/blobby.cpp: Speed up blobbies.

2007-02-16 15:58  joron

	* testing/regression/RIBs/Blobby,
	  testing/regression/RIBs/Blobby/jobs.cfg,
	  testing/regression/RIBs/Blobby/pairs.rib,
	  testing/regression/reference/pairs.tif: Add a regression test
	  case for Blobbies. Once blobbies were failing and it was very
	  difficult to track what was the cause.
	  

2007-02-15 15:59  joron

	* aqsisrc.in: make sure d_bmp is registered to the list of valid
	  display drivers.

2007-02-15 15:57  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated description used for
	  Windows (NSIS) installer 'lib' section.

2007-02-15 15:49  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated Windows (NSIS) installer
	  to use 'lib' dir for library files.

2007-02-14 23:20  pgregory

	* distribution/win/nsis/setup.nsi: Update nsis installer file to
	  distribute the linker libraries for the dll's being distributed

2007-02-14 00:55  c42f

	* shadercompiler/shadervm/shadervm.cpp: Make a cast from pointer to
	  integer compile on x86_64 with g++ versions > 4.
	  Covers up - but doesn't remove - a future possible bug in
	  multi-threaded 64 bit
	  versions, as noted in the source.

2007-02-11 12:43  c42f

	* rib/ri2rib/output.cpp: Remove some compiler warnings on amd64.
	  Some of these cause the build to
	  *fail* when using >=gcc-4.?.*
	  
	  Admittedly, constructs such as
	  
	  static_cast<RtInt>(reinterpret_cast<ptrdiff_t>(light))
	  
	  are ugly as hell, but seem to be the safest platform-independent
	  way to convert a
	  pointer to an integer of possibly smaller size. This seems
	  strange, but is in
	  fact what we want here, since (eg) the fact that we're getting
	  light handles from
	  CqOutput::RiLightSourceV through the callback interface
	  guarentees they will be
	  small integers rather than some possibly large pointer into
	  memory.

2007-02-11 05:51  c42f

	* rib/ri2rib/output.cpp: Start counting output handle numbers (for
	  lights and objects) from 1 rather
	  than 0. This fixes a bunch of problems where parser.yy expects a
	  pointer, and
	  therefore assumes 0 is invalid. 0 is a perfectly valid handle as
	  an integer to
	  output to a rib file, but this is the least invasive fix.

2007-02-11 05:48  c42f

	* renderer/render/ri.cpp: Make sure to report an error if a light
	  source shader cannot be created.

2007-02-11 05:46  c42f

	* platform/default/SConscript: Don't optimise the debug build.

2007-02-08 17:39  c42f

	* renderer/render/attributes.cpp, renderer/render/attributes.h: Fix
	  a memory leak. The leak was caused by a smart-pointer link cycle:
	  CqLightsource holds a pointer to its attributes.
	  CqAttributes holds a pointer to all active light sources.
	  
	  If both pointers are reference-counted we get a link cycle, and
	  deleting any
	  externally held smart pointers to the light sources does not
	  result in the
	  light sources (or assocated attributes) being freed.
	  
	  Solution: make the CqAttributes hold only weak pointers (ie, not
	  reference
	  counted). This should be fine, since all light sources are held
	  at least in
	  the Lightsource_stack until Lightsource_stack.clear() is called
	  by RiEnd()

2007-02-08 01:20  joron

	* testing/regression/RIBs/Smoky/smoky.rib: Reduce the size to match
	  the alread checked-in reference image.

2007-02-08 00:53  joron

	* testing/regression/RIBs/Earth/jobs.cfg: add the job control for
	  the Earth.rib

2007-02-08 00:48  joron

	* testing/regression/reference/smoky.tif: add the reference picture
	  of the earlier new test case.

2007-02-08 00:47  joron

	* testing/regression/RIBs/Smoky,
	  testing/regression/RIBs/Smoky/cmarble.sl,
	  testing/regression/RIBs/Smoky/filterwidth.h,
	  testing/regression/RIBs/Smoky/jobs.cfg,
	  testing/regression/RIBs/Smoky/noises.h,
	  testing/regression/RIBs/Smoky/noisydispl.sl,
	  testing/regression/RIBs/Smoky/patterns.h,
	  testing/regression/RIBs/Smoky/smoke.sl,
	  testing/regression/RIBs/Smoky/smoky.rib,
	  testing/regression/RIBs/Smoky/spotlight_rts.sl,
	  testing/regression/RIBs/Smoky/wood.sl: Add a test case about
	  atmosphere (volume) shader.
	  It was missing from the regression test case.

2007-02-08 00:46  joron

	* testing/regression/reference/Earth.tif: Add the reference picture
	  of the earlier check-in.

2007-02-08 00:46  joron

	* testing/regression/RIBs/Earth,
	  testing/regression/RIBs/Earth/Earth.rib,
	  testing/regression/RIBs/Earth/world.3x5400x2700.jpg: Add again
	  the test case for latlong environment() with jpg conversion.

2007-02-05 14:48  joron

	* aqsistypes/aqsis_types.h, aqsistypes/vector2d.h: In PBRT they
	  mention the CLAMP macro should be written to garantee the result
	  will be correct if you have 0.0 or 1.0 in particular even if the
	  boundaries were very close together.
	  In vector2d.h Magnitude() and Magnitude2() could be speed up if
	  you know if either m_x or m_y is zero. which occurs quite often.
	  in case of Magnitude() when m_x is zero it could be fabs(m_y) and
	  vice-versa.

2007-02-05 12:00  c42f

	* aqsistypes/file.cpp: Fix a little memory leak in CqFile::Open()

2007-02-04 23:48  c42f

	* displays/d_exr/SConscript: Remove a debugging print statement
	  (presumably committed accidentally in rev 799)

2007-02-04 10:32  pgregory

	* ChangeLog.txt: Update to reflect recent changes.

2007-02-04 08:58  c42f

	* testing/regression/RIBs/Shadows/autoshadows.rib,
	  testing/regression/RIBs/Shadows/jobs.cfg,
	  testing/regression/reference/autoshadows.tif: Add a feature demo
	  for autoshadows to the regression test library.
	  
	  This RIB also covers bug #1646650.

2007-02-04 07:06  c42f

	* displays/display/display.cpp: TIFFTAG_SOFTWARE was being set
	  twice in saving shadow maps. This caused a
	  crash on amd64 when using libtiff-3.7.3.

2007-02-04 05:13  c42f

	* platform/default/SConscript: Make sure CFLAGS etc from the unix
	  environment only append *unique* command
	  line switches.

2007-02-03 01:28  c42f

	* SConstruct: Remove dist_ prefix from distribution directory so
	  that the tarball name and
	  contents are consistent.

2007-02-03 00:37  c42f

	* platform/default/SConscript: Make the rpath absolute for the unix
	  build. Relative rpaths will not work, as
	  they are interpreted relative to the current working directory,
	  which could be
	  anything.

2007-02-02 21:40  joron

	* Doxyfile: add miqser. it was missing.

2007-02-02 21:36  joron

	* rib/miqser/miqser.cpp: astyle and add some sort description to
	  miqser.cpp

2007-02-02 21:31  joron

	* texturing/teqser/teqser.cpp: adjust the comment section for the
	  benefit of doxygen.

2007-02-02 15:50  joron

	* testing/regression/RIBs/Bugs/Bug1642075/Bug1642075.rib: adjust
	  the path for the shaders

2007-02-02 15:49  joron

	* testing/regression/RIBs/Bugs/Bug1031110/Bug1031110.rib: adjust
	  the path for the shaders.

2007-02-02 15:48  joron

	* testing/regression/shaders/bluescreen.sl: commit the one in a
	  common directory

2007-02-02 15:47  joron

	* testing/regression/RIBs/Bugs/Bug1031110/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1642075/jobs.cfg: readjust the
	  path for the shader bluescreen.sl

2007-02-02 15:47  joron

	* testing/regression/RIBs/Bugs/Bug1031110/bluescreen.sl,
	  testing/regression/RIBs/Bugs/Bug1642075/bluescreen.sl: do some
	  sort of cleanup. bluescreen.sl will be move ../../../shaders

2007-02-02 15:29  joron

	* testing/regression/RIBs/Bugs/Bug959357,
	  testing/regression/RIBs/Bugs/Bug959357/Bug959357.rib,
	  testing/regression/RIBs/Bugs/Bug959357/KTcanvasI.sl,
	  testing/regression/RIBs/Bugs/Bug959357/jobs.cfg,
	  testing/regression/reference/Bug959357.tif: add the testcase for
	  bug 959357.

2007-02-02 15:19  joron

	* testing/regression/RIBs/Bugs/Bug967456/Bug967456.rib,
	  testing/regression/reference/Bug967456.tif: Reduce a bit the
	  output.

2007-02-02 15:11  joron

	* testing/regression/RIBs/Bugs/Bug967456,
	  testing/regression/RIBs/Bugs/Bug967456/Bug967456.rib,
	  testing/regression/RIBs/Bugs/Bug967456/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug967456/myLight.sl,
	  testing/regression/RIBs/Bugs/Bug967456/mySurface.sl,
	  testing/regression/reference/Bug967456.tif: add the testcase for
	  bug 967456.

2007-02-02 13:52  c42f

	* testing/regression/RIBs/Bugs/Bug1266044/Bug1266044.rib,
	  testing/regression/RIBs/Bugs/Bug1326794/Bug1326794.rib,
	  testing/regression/RIBs/Bugs/Bug1496341/Bug1496341.rib,
	  testing/regression/RIBs/Bugs/Bug1546943/Bug1546943.rib,
	  testing/regression/RIBs/Bugs/Bug1556643/Bug1556643.rib,
	  testing/regression/RIBs/Bugs/Bug946045/bug946045.rib,
	  testing/regression/reference/Bug1266044.tif,
	  testing/regression/reference/Bug1326794.tif,
	  testing/regression/reference/Bug1496341.tif,
	  testing/regression/reference/Bug1546943.tif,
	  testing/regression/reference/Bug1556643.tif,
	  testing/regression/reference/bug946045.tif: Make some test cases
	  in the RTS use lzw compression.
	  
	  Also update the corresponding reference tif files.
	  
	  (The updated tif files were carefully checked against the
	  previous
	  non-compressed versions)

2007-02-02 12:39  c42f

	* testing/regression/RIBs/Bugs/Bug1629700/Bug1629700.rib,
	  testing/regression/RIBs/Bugs/Bug1629700/jobs.cfg,
	  testing/regression/reference/Bug1629700.tif: Update
	  Bug1629700.{tif,rib} to use lzw compression. Update test results
	  description.

2007-02-01 22:45  pgregory

	* version.py: Update the version to 1.3.0 on the trunk.

2007-02-01 19:56  joron

	* testing/regression/RIBs/Bugs/Bug1049839/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1052918/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1102598/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1108592/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1184401/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1220286/jobs.cfg: Edit the
	  paragraph of the recent test cases' job.

2007-02-01 14:37  pgregory

	* SConstruct, distribution/win/nsis/SConscript,
	  distribution/win/nsis/setup.nsi, version.h.in, version.py: Update
	  the versioning code to allow for a build 'type'. Usually from one
	  of the following...
	  
	  "" - empty, for a normal release.
	  "alpha[n]" - for one of a series of numbered alpha releases.
	  "beta[n]" - for one of a series of numbered beta releases.
	  "rc[n]" - for one of a series of numbered release candidate
	  releases.

2007-01-31 21:43  joron

	* testing/regression/RIBs/Bugs/Bug1377959,
	  testing/regression/RIBs/Bugs/Bug1377959/Bug1377959.rib,
	  testing/regression/RIBs/Bugs/Bug1377959/cube0000.rib,
	  testing/regression/RIBs/Bugs/Bug1377959/jobs.cfg,
	  testing/regression/reference/Bug1377959.tif: add the test case
	  for Bug 1377959

2007-01-31 20:44  joron

	* testing/regression/RIBs/Bugs/Bug998105,
	  testing/regression/RIBs/Bugs/Bug998105/Bug998105.rib,
	  testing/regression/RIBs/Bugs/Bug998105/jobs.cfg,
	  testing/regression/reference/Bug998105.tif: add the test case for
	  bug 998105

2007-01-31 20:28  joron

	* testing/regression/RIBs/Bugs/Bug1310740,
	  testing/regression/RIBs/Bugs/Bug1310740/Bug1310740.rib,
	  testing/regression/RIBs/Bugs/Bug1310740/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1310740/particle.sl,
	  testing/regression/reference/Bug1310740.tif: add test case for
	  the bug 1310740

2007-01-31 19:22  joron

	* testing/regression/RIBs/Bugs/Bug1320079,
	  testing/regression/RIBs/Bugs/Bug1320079/Bug1320079.rib,
	  testing/regression/RIBs/Bugs/Bug1320079/cell.sl,
	  testing/regression/RIBs/Bugs/Bug1320079/jobs.cfg,
	  testing/regression/reference/Bug1320079.tif: add the test case
	  for bug 1320079

2007-01-31 18:38  joron

	* testing/regression/RIBs/Bugs/Bug1336407,
	  testing/regression/RIBs/Bugs/Bug1336407/Bug1336407.rib,
	  testing/regression/RIBs/Bugs/Bug1336407/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1336407/rampage.sl,
	  testing/regression/reference/Bug1336407.tif: add the test case
	  for bug 1336407

2007-01-31 18:00  joron

	* testing/regression/RIBs/Bugs/Bug1396028/jobs.cfg: the red is ok,
	  green is not.

2007-01-31 17:58  joron

	* testing/regression/reference/Bug1396028.tif: add the test case
	  for bug 1396028

2007-01-31 17:57  joron

	* testing/regression/RIBs/Bugs/Bug1396028/Bug1396028.rib: make the
	  right tif is produced.

2007-01-31 17:55  joron

	* testing/regression/RIBs/Bugs/Bug1396028,
	  testing/regression/RIBs/Bugs/Bug1396028/Bug1396028.rib,
	  testing/regression/RIBs/Bugs/Bug1396028/equalng.sl,
	  testing/regression/RIBs/Bugs/Bug1396028/jobs.cfg: Add a new test
	  case for bug 1396028

2007-01-31 15:30  pgregory

	* testing/regression/RIBs/Bugs/Bug1274816,
	  testing/regression/RIBs/Bugs/Bug1274816/Bug1274816.rib,
	  testing/regression/RIBs/Bugs/Bug1274816/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1274816/zero.sl: The repository
	  has gotten confused, can't merge this into the release1.2.0
	  branch, trying to remedy.

2007-01-31 15:29  pgregory

	* testing/regression/RIBs/Bugs/Bug1274816: The repository has
	  gotten confused, can't merge this into the release1.2.0 branch,
	  trying to remedy.

2007-01-31 12:19  joron

	* testing/regression/reference/Bug1104535.tif: add the reference
	  image for Bug1104535

2007-01-31 12:05  joron

	* testing/regression/RIBs/Bugs/Bug1104535,
	  testing/regression/RIBs/Bugs/Bug1104535/Bug1104535.rib,
	  testing/regression/RIBs/Bugs/Bug1104535/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1104535/redefine.sl: Add a
	  testcase for #1104535; the reference image will come later.

2007-01-31 11:35  joron

	* testing/regression/RIBs/Bugs/Bug1031110/jobs.cfg: add the
	  bluescreen.sl to list of shaders.

2007-01-31 11:34  joron

	* testing/regression/RIBs/Bugs/Bug1031110/bluescreen.sl: Commit the
	  shader for the Bug1031110

2007-01-31 11:07  pgregory

	* README: Add thirdparty library credits to the readme.

2007-01-31 10:20  pgregory

	* SConstruct, build_check.py, displays/d_exr/SConscript,
	  displays/display/SConscript, platform/win32/SConscript,
	  renderer/aqsis/SConscript, renderer/render/SConscript,
	  rib/miqser/SConscript, rib/ri2rib/SConscript,
	  rib/rib2/SConscript, texturing/plugins/common/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  thirdparty/pdiff/SConscript: Update various build files so that
	  libraries and include paths aren't added en masse to all modules,
	  only those that need it.

2007-01-30 22:39  pgregory

	* displays/d_exr/SConscript, platform/default/SConscript: aargh,
	  Linux fix again, hopefully.

2007-01-30 22:29  pgregory

	* displays/d_exr/SConscript, platform/win32/SConscript: Hopefully
	  final changes to get the Win32 and Linux OpenEXR builds to work
	  at the same time.

2007-01-30 21:22  pgregory

	* displays/d_exr/SConscript, texturing/plugins/exr2tif/SConscript:
	  Fix the OpenEXR component SConscripts so that they use the
	  platform specific library lists.

2007-01-30 21:02  pgregory

	* displays/d_exr/SConscript, platform/win32/SConscript,
	  texturing/plugins/exr2tif/SConscript: Fix the changes to OpenEXR
	  support, broke Linux builds that don't use OpenEXR 1.5.0.

2007-01-30 20:56  joron

	* testing/regression/RIBs/Bugs/Bug1274816,
	  testing/regression/RIBs/Bugs/Bug1274816/Bug1274816.rib,
	  testing/regression/RIBs/Bugs/Bug1274816/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1274816/zero.sl,
	  testing/regression/reference/Bug1274816.tif: Add a new test case
	  for bug 1274816

2007-01-30 20:42  joron

	* testing/regression/RIBs/Bugs/Bug1030761,
	  testing/regression/RIBs/Bugs/Bug1030761/Bug1030761.rib,
	  testing/regression/RIBs/Bugs/Bug1030761/floor.rib,
	  testing/regression/RIBs/Bugs/Bug1030761/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1030761/spot.sl,
	  testing/regression/RIBs/Bugs/Bug1030761/tile.rib,
	  testing/regression/RIBs/Bugs/Bug1031110,
	  testing/regression/RIBs/Bugs/Bug1031110/Bug1031110.rib,
	  testing/regression/RIBs/Bugs/Bug1031110/gray.tif,
	  testing/regression/RIBs/Bugs/Bug1031110/jobs.cfg,
	  testing/regression/reference/Bug1030761.tif,
	  testing/regression/reference/Bug1031110.tif: Add new test cases.
	  Bug 1031110 and 1030761

2007-01-30 13:36  pgregory

	* SConstruct, displays/d_exr/SConscript, platform/win32/SConscript,
	  texturing/plugins/exr2tif/SConscript: Some minor changes to
	  library ordering and identification to get the OpenEXR support
	  working under Win32|MinGW.

2007-01-29 19:24  joron

	* testing/regression/RIBs/Bugs/Bug1108592,
	  testing/regression/RIBs/Bugs/Bug1108592/Bug1108592.rib,
	  testing/regression/RIBs/Bugs/Bug1108592/array_cer.sl,
	  testing/regression/RIBs/Bugs/Bug1108592/jobs.cfg,
	  testing/regression/reference/Bug1108592.tif: Add a new test case
	  for Bug 1108592

2007-01-29 18:37  joron

	* testing/regression/RIBs/Bugs/Bug1113859,
	  testing/regression/RIBs/Bugs/Bug1113859/Bug1113859.rib,
	  testing/regression/RIBs/Bugs/Bug1113859/jobs.cfg,
	  testing/regression/reference/Bug1113859.tif: Add the new testcase
	  for the bug 1113859

2007-01-29 18:12  joron

	* testing/regression/RIBs/Bugs/Bug1481683,
	  testing/regression/RIBs/Bugs/Bug1481683/Bug1481683.rib,
	  testing/regression/RIBs/Bugs/Bug1481683/divmatrix.sl,
	  testing/regression/RIBs/Bugs/Bug1481683/jobs.cfg,
	  testing/regression/reference/Bug1481683.tif: Add regression test
	  for Bug 1481683

2007-01-29 15:05  joron

	* testing/regression/RIBs/Bugs/Bug1407764,
	  testing/regression/RIBs/Bugs/Bug1407764/Bug1407764.rib,
	  testing/regression/RIBs/Bugs/Bug1407764/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1407764/maxmin.sl,
	  testing/regression/reference/Bug1407764.tif: Add the missing RTS
	  bug entries.

2007-01-29 14:56  joron

	* testing/regression/RIBs/Bugs/Bug1412162,
	  testing/regression/RIBs/Bugs/Bug1412162/Bug1412162.rib,
	  testing/regression/RIBs/Bugs/Bug1412162/imageralphabug.sl,
	  testing/regression/RIBs/Bugs/Bug1412162/jobs.cfg,
	  testing/regression/reference/Bug1412162.tif: Add the missing RTS
	  bug entries.

2007-01-28 14:23  c42f

	* SConstruct, aqsistypes/SConscript, aqsistypes/posix/SConscript,
	  aqsistypes/win32/SConscript, argparse/SConscript,
	  content/ribs/features/layeredshaders/SConscript,
	  content/ribs/scenes/vase/SConscript,
	  content/shaders/displacement/SConscript,
	  content/shaders/light/SConscript, displays/d_exr/SConscript,
	  displays/d_sdcBMP/SConscript, displays/d_sdcWin32/SConscript,
	  displays/d_xpm/SConscript, displays/display/SConscript,
	  distribution/SConscript, distribution/macosx/SConscript,
	  distribution/macosx/bundle/SConscript,
	  distribution/win/SConscript, distribution/win/nsis/SConscript,
	  renderer/aqsis/SConscript, renderer/ddmanager/SConscript,
	  renderer/raytrace/SConscript, renderer/render/SConscript,
	  rib/api/SConscript, rib/miqser/SConscript, rib/ri2rib/SConscript,
	  rib/rib2/SConscript, rib/rib2ri/SConscript,
	  rib/rib2stream/SConscript, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slpp/SConscript,
	  shadercompiler/slxargs/SConscript, shaders/SConscript,
	  texturing/plugins/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/common/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/teqser/SConscript, thirdparty/aqiv/SConscript,
	  thirdparty/dbo_plane/SConscript,
	  thirdparty/maketextures/SConscript, thirdparty/pdiff/SConscript,
	  thirdparty/tinyxml/SConscript, tools/SConscript,
	  tools/mpdump/SConscript: Modify the Distribute() builder function
	  to automatically infer the correct
	  directory to distribute source files into. The option to
	  explicitly specify a
	  distribution directory still exists.

2007-01-28 13:07  c42f

	* renderer/render/SConscript, renderer/render/rib2ri.cpp,
	  rib/miqser/SConscript, rib/miqser/rib2ri.cpp,
	  rib/rib2ri/SConscript: Remove the dummy rib2ri.cpp files from the
	  directories rib/miqser and
	  renderer/render.
	  
	  These were present to pick up the different command line #defines
	  in the
	  compilation environments for miqser and libaqsis. Instead we just
	  compile
	  rib2ri.cpp to two seperate object files where miqser and libaqsis
	  will be
	  built.

2007-01-28 11:33  c42f

	* SConstruct: Remove hack for 64-bit systems (x86_64). This kludge
	  is no longer needed
	  because all shared libraries are now built directly from object
	  files rather
	  than from a handful of intermediate static libraries.

2007-01-26 13:37  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated Windows (NSIS) installer
	  to support new 'scripts' directory, while removing deprecated
	  entries.

2007-01-26 02:21  joron

	* testing/regression/reference/Bug1102598.tif: Commit the missing
	  reference image.

2007-01-26 01:46  joron

	* testing/regression/RIBs/Bugs/Bug1444331,
	  testing/regression/RIBs/Bugs/Bug1444331/Bug1444331.rib,
	  testing/regression/RIBs/Bugs/Bug1444331/jobs.cfg,
	  testing/regression/reference/Bug1444331.tif: Add the missing RTS
	  bug entries.

2007-01-26 01:31  joron

	* testing/regression/RIBs/Bugs/Bug940418/Bug940418.rib: Make sure
	  it is "file" and not "framebuffer"

2007-01-26 01:21  joron

	* testing/regression/RIBs/Bugs/Bug940308/jobs.cfg: add the job
	  control for the bug940308

2007-01-25 23:41  joron

	* testing/regression/RIBs/Bugs/Bug940308,
	  testing/regression/RIBs/Bugs/Bug940308/Bug940308.rib,
	  testing/regression/RIBs/Bugs/Bug940308/aqsisscene.jpg,
	  testing/regression/RIBs/Bugs/Bug940308/correct.jpg,
	  testing/regression/reference/Bug940308.tif: Add the missing RTS
	  bug entries.

2007-01-25 20:25  joron

	* testing/regression/RIBs/Bugs/Bug940418,
	  testing/regression/RIBs/Bugs/Bug940418/Bug940418.rib,
	  testing/regression/RIBs/Bugs/Bug940418/jobs.cfg,
	  testing/regression/reference/Bug940418.tif: Add the missing RTS
	  bug entries.

2007-01-25 20:15  joron

	* testing/regression/RIBs/Bugs/Bug1102598,
	  testing/regression/RIBs/Bugs/Bug1102598/Bug1102598.rib,
	  testing/regression/RIBs/Bugs/Bug1102598/jobs.cfg: Add the missing
	  RTS bug entries.

2007-01-25 20:05  joron

	* testing/regression/RIBs/Bugs/Bug1102597: It will be moved to
	  Bug1102598

2007-01-25 19:47  joron

	* testing/regression/RIBs/Bugs/Bug1410474,
	  testing/regression/RIBs/Bugs/Bug1410474/Bug1410474.rib,
	  testing/regression/RIBs/Bugs/Bug1410474/jobs.cfg,
	  testing/regression/reference/Bug1410474.tif: Add the missing RTS
	  bug entries.

2007-01-25 19:38  joron

	* testing/regression/RIBs/Bugs/Bug1433837,
	  testing/regression/RIBs/Bugs/Bug1433837/Bug1433837.rib,
	  testing/regression/RIBs/Bugs/Bug1433837/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1433837/spot.sl,
	  testing/regression/reference/Bug1433837.tif: Add the missing RTS
	  bug entries.

2007-01-25 18:29  joron

	* testing/regression/RIBs/Bugs/Bug1642075,
	  testing/regression/RIBs/Bugs/Bug1642075/Bug1642075.rib,
	  testing/regression/RIBs/Bugs/Bug1642075/beach.env,
	  testing/regression/RIBs/Bugs/Bug1642075/beach.tif,
	  testing/regression/RIBs/Bugs/Bug1642075/bluescreen.sl,
	  testing/regression/RIBs/Bugs/Bug1642075/imagelight.sl,
	  testing/regression/RIBs/Bugs/Bug1642075/jobs.cfg,
	  testing/regression/reference/Bug1642075.tif: Add the missing RTS
	  bug entries.

2007-01-25 18:13  joron

	* testing/regression/RIBs/Bugs/Bug1502751,
	  testing/regression/RIBs/Bugs/Bug1502751/Bug1502751.rib,
	  testing/regression/RIBs/Bugs/Bug1502751/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1502751/splinetst.sl,
	  testing/regression/reference/Bug1502751.tif: Add the missing RTS
	  bug entries.

2007-01-25 17:58  joron

	* testing/regression/RIBs/Bugs/Bug1572944,
	  testing/regression/RIBs/Bugs/Bug1572944/Bug1572944.rib,
	  testing/regression/RIBs/Bugs/Bug1572944/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1572944/showN.sl,
	  testing/regression/reference/Bug1572944.tif: Add the missing RTS
	  bug entries.

2007-01-25 14:47  joron

	* testing/regression/reference/Bug1629700.tif: This is the
	  reference image for lastest test case.

2007-01-25 14:47  joron

	* testing/regression/RIBs/Bugs/Bug1629700,
	  testing/regression/RIBs/Bugs/Bug1629700/Bug1629700.rib,
	  testing/regression/RIBs/Bugs/Bug1629700/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1629700/pnoise_err.sl: This is
	  the test case to illustrate the bug 1629700 is fixed.

2007-01-25 14:45  joron

	* aqsistypes/noise1234.cpp: Fix Bug #1629700, the period provided
	  is used by the modulo operation. It is illegal to provide an zero
	  to modulo. So I prevent the period to be smaller than 1.
	  

2007-01-25 14:41  pgregory

	* SConstruct: Fix bug #1619526.
	  
	  Change the order of specification of LIBPATH folders so that the
	  linker looks in the local build/ folders first for libraries, in
	  case there is a previously installed version of Aqsis in the same
	  system folders as the libtiff etc. libraries.

2007-01-25 14:30  cgtobix

	* testing/regression/reference/Bug1162905.tif: Added reference
	  image for Bug1162905.

2007-01-25 14:28  cgtobix

	* testing/regression/RIBs/Bugs/Bug1014043/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1162905,
	  testing/regression/RIBs/Bugs/Bug1162905/Bug1162905.rib,
	  testing/regression/RIBs/Bugs/Bug1162905/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1379411/jobs.cfg: Added test for
	  Bug1162905.

2007-01-25 13:49  pgregory

	* testing/regression/RIBs/Bugs/Bug1379411/Bug1379411.rib,
	  testing/regression/RIBs/Bugs/Bug1379411/splinebug.sl,
	  testing/regression/RIBs/Bugs/Bug1586027/Bug1379411.rib,
	  testing/regression/RIBs/Bugs/Bug1586027/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1586027/splinebug.sl: Fix a
	  problem with the recent commit of a test case in the wrong
	  folder.

2007-01-25 13:46  pgregory

	* testing/regression/RIBs/Bugs/Bug1379411,
	  testing/regression/RIBs/Bugs/Bug1379411/jobs.cfg:

2007-01-25 13:31  cgtobix

	* testing/regression/reference/Bug1379411.tif: Added reference
	  image for Bug1379441

2007-01-25 13:30  cgtobix

	* testing/regression/RIBs/Bugs/Bug1586027/Bug1379411.rib,
	  testing/regression/RIBs/Bugs/Bug1586027/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1586027/splinebug.sl: Added test
	  for Bug1379411

2007-01-24 21:48  pgregory

	* renderer/aqsis/aqsis.cpp: Fix bug #1633369, the conditional
	  compilation was looking for the
	  definition of ENABLE_MPDUMP instead of checking the value.

2007-01-23 21:43  pgregory

	* shadercompiler/shadervm/shadervm.h: Check for a valid render
	  context before checking if the shader is being
	  defined outside the world. Default to not outside the world if no
	  render context is available.

2007-01-23 16:12  pgregory

	* renderer/render/texturemap.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp: Fix a bug in the
	  "textureinfo" shadeop. The way it works is to query the texture
	  machinery for a named texture, which can return a texture from
	  the cache. If the texture is not of the right type, it deletes it
	  and moves onto the next. This deletion removes the texture from
	  the cache, so each time the texture is used, it had to be
	  reloaded. Combine with the fact that the texture deletion code
	  didn't close the file, resulted in the system exhausting all
	  available file handles.
	  
	  The deletion is removed, the cache handler will deal with
	  deleting loaded textures. And the top level texture destructor
	  now closes the file.

2007-01-23 11:49  pgregory

	* renderer/render/itexturemap.h, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h: Fix bug #1638918.
	  
	  The mipmapping code was storing the resulting texturemap buffers
	  in the m_apFlats section, when they should have been stored in
	  the m_apMipMaps section of the caching data. The result is that
	  when a "non-converted" texture was flushed from the cache, the
	  m_apFlats list was cleared (clearing all the mipmaps) but only
	  the first m_apLast entry was cleared. So when a new request for
	  data from that texture came along, the m_apLast entry for the
	  requested MipMap level pointed to a deleted buffer.

2007-01-22 21:04  pgregory

	* aqsistypes/SConscript: Remove aqerror.h from the SConscript
	  header files for aqsistypes, it's
	  not used and not necessary.

2007-01-22 13:20  pgregory

	* shadercompiler/slxargs/slx.h: Fix a typo in the sharing code,
	  affecting only non-Win32 builds.

2007-01-22 11:50  pgregory

	* aqsistypes/aqerror.h, aqsistypes/logging_streambufs.h,
	  aqsistypes/validate.h, shadercompiler/slxargs/SConscript,
	  shadercompiler/slxargs/slx.h: Merge from branches/release1.2.0
	  740:741

2007-01-21 21:25  pgregory

	* distribution/win/nsis/setup.nsi: Add *.inl to the include folder
	  files, to catch ri.inl.

2007-01-19 15:42  pgregory

	* renderer/render/imagers.cpp,
	  shadercompiler/shadervm/shadervm.cpp: Fix a couple of outstanding
	  regressions introduced by the library refactor.
	  The imager shaders were being constructed with a CqShaderExecEnv
	  with NULL render context, resulting in a crash.
	  The initialisation execution function on the shaderVM was being
	  run against a similar CqShaderExecEnv with NULL render context,
	  resulting in failed transform() functions. The effect was visible
	  as differences in lighting, as "from" on the standard shaders is
	  initialised to (0,0,0) in "shader" space, so has a transform in
	  the initialisation code.

2007-01-19 11:45  pgregory

	* shadercompiler/shadervm/shadervm.h: Fix a problem introduced with
	  the library refactor, specifically the code to separate the
	  shaderVM from the renderer core. The code to define whether a
	  shader was instantiated inside or outside the RiWorldBegin call
	  was commented out during refactoring, and not reintroduced. The
	  result being that the status of that flag was random, based on
	  the contents of memory, resulting in some strange behaviour with
	  lighting, for instance, the rendered image looking different
	  depending on the command line arguments given.

2007-01-18 01:39  ltatkinson

	* distribution/win/nsis/setup.nsi: Removed unnecessary Python entry
	  from Win32 (NSIS) installer.

2007-01-17 22:02  minty

	* AUTHORS: Convert the AUTHORS file to utf-8 for the Fedora Police

2007-01-16 02:04  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Fixed oversight (typos) in
	  previous Linux (SPEC) installer commit.

2007-01-16 01:50  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Updated Linux (SPEC) installer
	  to reflect recent changes within the codebase.

2007-01-15 12:35  pgregory

	* renderer/render/SConscript: Fix the order of library setup,
	  accidentally broke it in the last change.

2007-01-15 12:20  joron

	* shadercompiler/slpp/pp7.c: THis will fix the crash when the user
	  uses aqsl with -DAQSIS.

2007-01-15 12:02  pgregory

	* SConstruct, aqsistypes/SConscript, platform/default/SConscript,
	  renderer/render/SConscript, rib/ri2rib/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slxargs/SConscript: Update the building of shared
	  libraries so that on Linux symlinks to
	  versioned files are setup during build. This is so that aqsl can
	  find
	  the libaqsistypes.so.1 file it needs when compiling shaders
	  during a
	  build.

2007-01-15 10:36  pgregory

	* content/shaders/displacement/SConscript,
	  content/shaders/light/SConscript, platform/default/SConscript,
	  platform/win32/SConscript, shadercompiler/aqsl/SConscript,
	  shaders/SConscript: Revert the modification to shift the
	  compilation of shaders to the 'install' phase. This was done as
	  aqsl relies on aqsistypes.dll/libaqsistypes.so, which was only
	  really available after install. However, the solution doesn't
	  work in all cases, firstly, it only works if RPATH is being used,
	  and then only if an alternative destdir isn't specified. As the
	  RPM build precludes the use or rpath, and needs destdir, and only
	  does a 'build', this couldn't work.
	  
	  Now the aqsistypes build dir is added to the PATH/RPATH in the
	  system specific SConscripts, which isn't ideal but should ensure
	  that the build completes.

2007-01-14 12:47  c42f

	* README: Add note on dependencies of mpanalyse.py to the README

2007-01-14 01:07  ltatkinson

	* content/ribs/features/curves/render.sh,
	  content/ribs/features/levelofdetail/render.sh,
	  content/ribs/features/motionblur/render_camera.sh,
	  content/ribs/features/motionblur/render_deformation.sh,
	  content/ribs/features/multipass/render.sh,
	  content/ribs/features/objectinstance/render.sh,
	  content/ribs/features/occlusion/render.sh,
	  content/ribs/features/shadows/render.sh,
	  content/ribs/features/solidmodeling/render.sh,
	  content/ribs/features/subdivision/render.sh,
	  content/ribs/features/textures/render.sh,
	  content/ribs/scenes/microbe/render.sh: Added *nix 'render'
	  scripts to all example content.

2007-01-13 22:18  pgregory

	* platform/default/SConscript: Fix bug #1632725. Before the library
	  refactor the executables needed to be linked against
	  libdl, as it's functionality is required by the CqPlugin class
	  (libaqsistypes). However,
	  now, libaqsistypes is a shared library, so IT needs to be linked
	  against libdl, and not
	  the executables. Not sure why including fltk support masked the
	  problem, but it seems to
	  work now.

2007-01-13 12:46  c42f

	* INSTALL, README: Minor changes: fix some spelling mistakes, and
	  make INSTALL use standard
	  7-bit ascii.

2007-01-13 10:59  cgtobix

	* content/ribs/features/layeredshaders/render.sh,
	  content/ribs/scenes/vase/render.sh: fixed shebang in rener.sh

2007-01-13 10:56  cgtobix

	* content/ribs/features/layeredshaders/render.sh,
	  content/ribs/scenes/vase/render.sh: fixed shebang in rener.sh

2007-01-13 03:45  c42f

	* rib/rib2/SConscript, shadercompiler/shadervm/SConscript: Make
	  sure shadervm_common.h and rib2_common.h are distributed.

2007-01-12 23:16  pgregory

	* platform/default/SConscript: Move the plugins into
	  lib/aqsis/plugins off the install_prefix.

2007-01-12 15:57  cgtobix

	* SConstruct, platform/default/SConscript, tools/mpdump/SConscript:
	  Moved mpanalyse.py to its own scripts folder

2007-01-12 15:55  c42f

	* README: Update README file to be relevant to aqsis-1.2 release.

2007-01-12 01:01  ltatkinson

	* distribution/win/nsis/setup.nsi: Removed 'lib' section within
	  Win32 (NSIS) installer, due to recent changed within the
	  codebase.

2007-01-12 00:58  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Fixed typo in Linux (SPEC)
	  installer 'Source' entry.

2007-01-12 00:53  ltatkinson

	* distribution/win/nsis/setup.nsi: Fix Win32 (NSIS) installer 'lib'
	  directory issue, due to changes recently made within the
	  codebase.

2007-01-11 23:53  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Updated Linux (SPEC) installer
	  as per a recent discussion on Fedora's bug tracker -
	  https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=167147#c32

2007-01-11 23:14  ltatkinson

	* distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi: Updated Win32 (NSIS) installer
	  to fix an issue when choosing an installation path, should Aqsis
	  already be installed.

2007-01-11 15:54  c42f

	* aqsistypes/posix/aqsis_compiler.h: #define COMMON_SHARE to be an
	  empty string on posix.

2007-01-11 13:31  pgregory

	* texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/common/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript: Fix the plugins to use
	  common via shared objects, rather than a static library. Required
	  by Fedora RPM compliance, all files in a .so must be compiled
	  with -fPIC.

2007-01-11 13:08  pgregory

	* SConstruct, aqsistypes/SConscript, aqsistypes/aqsistypes.def,
	  aqsistypes/bitvector.h, aqsistypes/cellnoise.h,
	  aqsistypes/color.h, aqsistypes/file.h, aqsistypes/list.h,
	  aqsistypes/logging.h, aqsistypes/logging_streambufs.h,
	  aqsistypes/matrix.h, aqsistypes/noise.h, aqsistypes/plugins.h,
	  aqsistypes/pool.h, aqsistypes/random.h, aqsistypes/refcount.h,
	  aqsistypes/spline.h, aqsistypes/sstring.h, aqsistypes/validate.h,
	  aqsistypes/vector2d.h, aqsistypes/vector3d.h,
	  aqsistypes/vector4d.h, aqsistypes/win32/aqsis_compiler.h,
	  argparse/SConscript, platform/win32/SConscript,
	  renderer/ddmanager/SConscript, renderer/raytrace/SConscript,
	  renderer/render/SConscript, renderer/render/filters.cpp,
	  renderer/render/libaqsis.def, renderer/render/ri.h,
	  renderer/render/rib2ri.cpp, rib/api/apiheader.xsl,
	  rib/miqser/SConscript, rib/miqser/rib2ri.cpp,
	  rib/ri2rib/SConscript, rib/ri2rib/ri2rib.def,
	  rib/rib2/SConscript, rib/rib2/bdec.h, rib/rib2/librib.h,
	  rib/rib2/parserstate.h, rib/rib2/rib2_common.h,
	  rib/rib2ri/SConscript, rib/rib2ri/librib2ri.h,
	  rib/rib2stream/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/shadervm/dsoshadeops.h,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervm.def,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm_common.h,
	  shadercompiler/slxargs/slxargs.def,
	  texturing/plugins/common/SConscript: Fixup the Win32 build in the
	  light of the latest library scheme updates. Now shared libraries
	  are built on Win32 using __declspec(...) instead of .def files.
	  This allows much finer control over what gets exported, without
	  the complexity of adding decorated names to a .def file.
	  
	  Note: this will break the Win32 NSIS installer.

2007-01-10 14:00  joron

	* testing/regression/reference/Bug1629458.tif: Commit the reference
	  image for the new bug case.

2007-01-09 23:06  pgregory

	* renderer/render/imagers.cpp, renderer/render/ishaderexecenv.h,
	  renderer/render/lights.cpp, renderer/render/micropolygon.cpp,
	  renderer/render/renderer.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/slxargs/slx.cpp: Fix some problems with the
	  changes to the shadervm separation from the
	  renderer context. Now the VM and the execenv (shader context)
	  have their
	  own pointers to the renderer context. Not ideal, but it works for
	  now,
	  needs looking at post 1.2.

2007-01-09 18:24  joron

	* texturing/plugins/pcx2tif/pcx2tif.c: Make sure on something
	  different than win32 it swaps.

2007-01-09 09:10  pgregory

	* aqsistypes/SConscript, aqsistypes/aqsistypes.def,
	  platform/win32/SConscript, renderer/render/imagers.cpp,
	  renderer/render/ishaderexecenv.h, renderer/render/libaqsis.def,
	  renderer/render/lights.cpp, renderer/render/micropolygon.cpp,
	  rib/ri2rib/SConscript, rib/ri2rib/ri2rib.def,
	  rib/rib2ri/SConscript, shadercompiler/aqsltell/aqsltell.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.def,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/slxargs/SConscript,
	  shadercompiler/slxargs/slxargs.def: Initial work to try to get
	  the new library structure to work under windows.

2007-01-07 21:26  pgregory

	* SConstruct, aqsistypes/SConscript,
	  content/shaders/displacement/SConscript,
	  content/shaders/light/SConscript, renderer/aqsis/SConscript,
	  renderer/ddmanager/SConscript, renderer/raytrace/SConscript,
	  renderer/render/SConscript, rib/miqser/SConscript,
	  rib/ri2rib/SConscript, rib/rib2/SConscript,
	  rib/rib2ri/SConscript, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slpp/SConscript,
	  shadercompiler/slxargs/SConscript, shaders/SConscript,
	  texturing/teqser/SConscript: Refactor the library structure to
	  avoid the use of static libraries, to
	  now use shared libraries for all the shared functionality. This
	  should
	  help us to comply with stringent Fedora conditions.
	  
	  libaqsis.so - as before, but now without the aqsistypes
	  functionality
	  (see below).
	  libaqsistypes.so - all common functionality, required for various
	  things, including the developer libraries.
	  libslxargs.so - as before, libaqsistypes.so needs to be linked in
	  when
	  using.
	  libri2rib.so - as before, libaqsistypes.so needs to be linked in
	  when
	  using.
	  libshadervm.so - new combined shader vm shared library, including
	  the
	  old libshaderexecenv.a, used by libslxargs.so, and libaqsis.so.
	  
	  Previous other static libraries are removed, and the object files
	  are
	  directly linked into the shared libraries/applications that need
	  them,
	  thus avoiding the mixing of static and shared compilation that is
	  a
	  problem for gcc.

2007-01-07 04:37  c42f

	* testing/regression/RIBs/Bugs/Bug1629458,
	  testing/regression/RIBs/Bugs/Bug1629458/Bug1629458.rib,
	  testing/regression/RIBs/Bugs/Bug1629458/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1629458/vnoise.sl: Add regression
	  test for Bug 1629458.

2007-01-07 03:52  c42f

	* shadercompiler/slparse/funcdef.cpp: Fix bug
	  [ 1629458 ] vector noise(...) functions missing from shading
	  language
	  
	  Create a set of noise functions with Type_Vector as the output
	  type, which are
	  otherwise identicle to the "point" versions of the noise
	  functions (including
	  sharing shadervm opcodes - is this a good idea?)

2007-01-07 02:41  c42f

	* shadercompiler/shadervm/shadervm.cpp: Correct non-existance of
	  the opcode ppnoise2. SO_ppnoise2 was incorrectly
	  mapped to pnoise2.

2007-01-03 13:34  mbaas

	* testing/regression/rendertester.py: Made the name of the pdiff
	  command customizable (the default name is still 'pdiff' instead
	  of 'perceptualdiff').

2007-01-02 07:27  pgregory

	* shadercompiler/shaderexecenv/shadeops_illum.cpp: Fix the 'solar'
	  SL construct so that the 'L' variable is more
	  appropriate in the case of a solar() call with no arguments.
	  
	  When used with no direction, solar is meant to represent a light
	  coming
	  from all directions at infinity. The new implementation uses the
	  inverse
	  of the surface normal, 'Ns' to represent a "good" incoming light
	  direction. Should be better for illumination map usage, as
	  intended by
	  the spec.

2006-12-23 14:38  joron

	* renderer/render/texturemap.cpp: make sure mipmapped'texture are
	  better recognized by texturemap.cpp (mingw)

2006-12-23 12:42  pgregory

	* SConstruct, platform/default/SConscript,
	  platform/win32/SConscript, renderer/render/SConscript: Fixup the
	  way that PostInstallSharedLibrary works so that it can
	  automatically copy the necessary linker specification files on
	  Windows.

2006-12-18 10:26  pgregory

	* ChangeLog.txt: Added ChangeLog.txt, see the release procedure on
	  the Wiki for generation instructions.

2006-12-18 10:17  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Minor formatting change to
	  Linux SPEC file.

2006-12-15 14:25  pgregory

	* renderer/render/ishaderdata.h,
	  shadercompiler/shadervm/shadervariable.h, version.py: Update to
	  version 1.2.0 for release

2006-12-15 14:12  cgtobix

	* distribution/linux/rpm/aqsis.spec: Updated the sources to reflect
	  the alpha1 release tarball.

2006-12-15 13:51  cgtobix

	* distribution/linux/rpm/aqsis.spec: Minor fixes and updates.

2006-12-15 12:04  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Updated Linux SPEC file to
	  appease both Fedora (Extras) and Novell (BuildService) teams.

2006-12-15 05:07  c42f

	* SConstruct: Fix the amd64 build by making sure g++ is used as the
	  compiler rather than c++.
	  Otherwise scons doesn't know to put in the -fPIC option for
	  shared objects.

2006-12-15 00:23  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Small formatting change to
	  Linux SPEC file.

2006-12-14 23:48  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Removed unnecessary %define
	  entries.

2006-12-14 22:58  pgregory

	* argparse/SConscript, renderer/ddmanager/SConscript,
	  renderer/raytrace/SConscript, rib/rib2/SConscript,
	  rib/rib2ri/SConscript, rib/rib2stream/SConscript,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slpp/SConscript,
	  texturing/plugins/common/SConscript: Clean up the install stuff
	  to not distribute internal only libraries.
	  Add ndspy.h to the install targets.

2006-12-14 17:15  cgtobix

	* distribution/linux/rpm/aqsis.spec: Some modifications to get get
	  rid of the double build.

2006-12-14 11:32  pgregory

	* SConstruct: Really disable tinyxml this time.

2006-12-14 11:08  pgregory

	* shadercompiler/slxargs/slx.cpp: Eliminate a warning about
	  ignoring the return from fwrite.

2006-12-14 11:00  pgregory

	* SConstruct: Remove the building of tinyxml, as it's not required
	  at this stage.

2006-12-14 10:57  pgregory

	* platform/default/Options.py, platform/default/SConscript: Add a
	  new option to allow the disabling of rpath in the Posix build,
	  required for RPM building.

2006-12-14 07:49  pgregory

	* displays/d_xpm/aspXpm.cpp, renderer/aqsis/aqsis.cpp,
	  renderer/render/mpdump.cpp, renderer/render/procedural.cpp,
	  texturing/plugins/bmp2tif/bmp2tif.c,
	  texturing/plugins/pcx2tif/pcx2tif.c: Eliminate some more extreme
	  warnings issued by the strict settings of
	  the RPM packaging criteria.

2006-12-13 15:37  joron

	* renderer/render/texturemap.cpp: make sure we use fastlog2()
	  instead of the double arithmetic. So we will have
	  the same arithmetic as ri.cpp when we created the mipmap.

2006-12-13 14:04  pgregory

	* displays/d_exr/d_exr.cpp, displays/d_sdcBMP/d_sdcBMP.cpp,
	  renderer/render/mpdump.cpp, renderer/render/ri.cpp,
	  shadercompiler/codegenvm/codegenvm.cpp, shadercompiler/slpp/pp.h,
	  shadercompiler/slpp/pp1.c, shadercompiler/slpp/pp3.c,
	  shadercompiler/slxargs/slx.cpp,
	  texturing/plugins/bmp2tif/bmp2tif.c,
	  texturing/plugins/exr2tif/exr2tif.cpp,
	  texturing/plugins/gif2tif/gif2tif.c: Eliminate various gcc 4.1.x
	  warnings.

2006-12-13 01:11  pgregory

	* rib/api/apicache.xsl: Fix the warning under gcc about a missing
	  linefeed at the end of ri_cache.inl.

2006-12-13 01:11  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Updated Linux SPEC file to
	  (better) adhere to Fedora, Mandriva and SUSE 'Official'
	  guidelines.

2006-12-13 00:56  pgregory

	* shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/parsenode.h: Fix the type-punned warnings
	  issued by gcc4.1.x+ to do with strict aliasing.
	  
	  Gcc 4.1 didn't like the way the interface querying worked, by
	  passing a pointer to a pointer to a
	  IqParseNode??? into the GetInterface function via a (void**)
	  cast, we were breaking the strict aliasing
	  rules of C++. However, it's ok to cast a void* to another pointer
	  type, so now we directly return the
	  interface pointer from GetInterface, and 0 if not a valid
	  interface cast.

2006-12-12 12:55  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Removed (broken) FC4-specific
	  details within the Linux SPEC file.

2006-12-12 11:49  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Fix OpenEXR issue within Linux
	  SPEC when using FC4 and (possibly) lower.

2006-12-12 02:31  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Clean-up/optimise Linux SPEC
	  file, plus resolve a couple of outstanding (minor) issues.

2006-12-11 20:40  joron

	* displays/display/display.cpp: fix for Bug1605954; significant
	  detail is around the line 685 where we did:
	  for (x = xmin; x < xmaxplus1; x++)
	  I should have done instead
	  for (x = xmin__; x < xmaxplus1__; x++)
	  I took the opportunity to translate few unsigned char to TqUchar,
	  ...
	  

2006-12-11 17:03  cgtobix

	* distribution/linux/rpm/aqsis.spec: Added RPM_OPT_FLAGS support.

2006-12-11 16:33  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Added Fedora (Core 5 tested)
	  and OpenSUSE (10.2 tested) support to Linux SPEC file.

2006-12-11 15:20  minty

	* platform/default/SConscript: Fix for importing CFLAGS etc

2006-12-10 20:44  minty

	* SConstruct, platform/default/SConscript: Second attempt at
	  allowing gcc on soalris and allows CFLAGS etc.

2006-12-10 18:17  cgtobix

	* distribution/linux/rpm/aqsis.spec: Fixed the Fedora build.

2006-12-10 17:04  cgtobix

	* distribution/linux/rpm/aqsis.spec: Fixed Fedora
	  Buildrequirements.

2006-12-10 10:56  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Fix Linux SPEC file so Fedora
	  can build RPM(s) correctly.

2006-12-09 02:19  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Added Mandriva (2006 tested)
	  support to Linux SPEC/RPM file.

2006-12-08 16:17  ltatkinson

	* distribution/linux/rpm/aqsis.spec,
	  distribution/win/nsis/setup.nsi: Updated package/install files to
	  use new (e)mail address, plus a little tidying.

2006-12-06 14:22  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Removed dependency on
	  'ldconfig' within the Linux SPEC file, as this is now done a
	  different way.

2006-12-06 12:41  joron

	* renderer/render/texturemap.cpp: remove one warning with gcc 4.0;
	  fastlog2() was causing the compiler to warn us so I redo the
	  implementation with a different solution.

2006-12-06 08:58  pgregory

	* SConstruct: Fix a problem on Windows/MacOSX with recent commits,
	  need to provide a default implementation of
	  PostInstallSharedLibrary.
	  Fix the recent commit to break up the appending of include paths,
	  must be a Python version issue.

2006-12-06 00:51  pgregory

	* SConstruct: Fix the passing of dependency include paths to ensure
	  that duplicate paths aren't specified multiple times on
	  the command line, flagged as an issue by the Redhat RPM
	  reviewers.

2006-12-05 16:02  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Fix recent typo in Linux SPEC
	  file.

2006-12-05 15:58  ltatkinson

	* distribution/linux/rpm/aqsis.spec: Minor (visual) update.

2006-12-05 15:34  cgtobix

	* distribution/linux/rpm/aqsis.spec: Ghosted the .pyc's and .pyo's
	  away.

2006-12-05 10:34  pgregory

	* platform/default/SConscript, renderer/render/SConscript:
	  Hopefully fix the shared library versioning implementation to
	  work in all Posix cases, including 'destdir' for
	  packagers.

2006-12-04 16:44  cgtobix

	* content/ribs/features/layeredshaders/SConscript,
	  content/ribs/scenes/vase/SConscript,
	  distribution/linux/rpm/aqsis.spec: Small fixes.

2006-12-04 16:34  pgregory

	* renderer/render/SConscript: Make the target of the new symlinked
	  versioned libraries point to the final destination, irrespective
	  of any destdir
	  specified.

2006-12-04 16:18  pgregory

	* platform/default/SConscript, renderer/render/SConscript: Fix
	  problem with destdir and new symlinked versioned shared
	  libraries.

2006-12-04 14:48  pgregory

	* SConstruct: Fix recent changes to support versioned shared
	  libraries to work invisibly under Windows.

2006-12-04 14:17  cgtobix

	* distribution/linux/rpm/aqsis.spec: Small fix to fit Fedora's
	  requirements.

2006-12-04 14:12  pgregory

	* SConstruct, platform/default/SConscript,
	  renderer/render/SConscript: Enable proper versioning of the
	  libaqsis.so file under Posix, required by RPM packaging
	  standards.

2006-12-04 10:39  pgregory

	* platform/default/SConscript: Add SONAME support for the link
	  libraries under Posix, as required by FC
	  RPM standards.

2006-12-03 01:21  ltatkinson

	* content/ribs/features/layeredshaders/render.sh,
	  content/ribs/scenes/vase/render.sh,
	  distribution/win/nsis/setup.nsi: Updated Linux (Bash) scripts for
	  rendering example 'content'.

2006-12-01 18:09  cgtobix

	* content/ribs/features/layeredshaders/render.sh,
	  content/ribs/scenes/vase/render.sh: Added shell scripts for
	  demoscenes.

2006-12-01 14:08  cgtobix

	* distribution/linux/rpm/aqsis.spec: Fixed some typo

2006-12-01 13:57  cgtobix

	* distribution/linux/rpm/aqsis.spec: Fixed some requirements.

2006-11-29 16:23  ltatkinson

	* distribution/win/nsis/setup.nsi: Have Windows (NSIS) installer
	  exclude 'SConscript' files from within 'content' directory.

2006-11-29 14:29  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated Windows (NSIS) installer
	  to support Vista.

2006-11-29 13:09  pgregory

	* testing/regression/reference/Bug1584454.tif: Add test case for
	  #1584454

2006-11-29 13:08  pgregory

	* testing/regression/RIBs/Bugs/Bug1584454,
	  testing/regression/RIBs/Bugs/Bug1584454/Bug1584454.rib,
	  testing/regression/RIBs/Bugs/Bug1584454/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1584454/liquidpoint.sl: Add test
	  case for #1584454

2006-11-29 12:46  pgregory

	* rib/rib2/parser.yy: Fix Bug #1584454
	  Remove errant checks on RiCurves primitives, it was checking for
	  "P" but the position can be specified as inline declared, i.e.
	  "vertex point P".

2006-11-28 17:58  cgtobix

	* distribution/linux/rpm/aqsis.spec: Changed group to
	  Applications/Multimedia according to fedoras standard.

2006-11-28 17:09  cgtobix

	* tools/mpdump/mpanalyse.py: Added shebang.

2006-11-28 17:04  cgtobix

	* distribution/linux/rpm/aqsis.spec: Changed group to
	  Applications/Multimedia according to fedoras standard.

2006-11-28 16:49  cgtobix

	* distribution/linux/rpm/aqsis.spec: The missing stars ;)

2006-11-28 16:31  cgtobix

	* distribution/linux/rpm/aqsis.spec: Moved all .a files to the
	  devel package to appease rpmlint.

2006-11-28 15:09  cgtobix

	* distribution/linux/rpm/aqsis.spec: Changed length of description
	  lines to be <=79 characters.

2006-11-28 14:06  cgtobix

	* distribution/linux/rpm/aqsis.spec: Fixed the installation of the
	  shaders in content.

2006-11-28 14:05  cgtobix

	* distribution/linux/rpm/aqsis.spec: Temporary fix to get a proper
	  RPM. We need to find a way to get rid of the .pyc and .pyo stuff.

2006-11-28 14:02  cgtobix

	* SConstruct: Make sure the ReleaseNotes are distributed.

2006-11-28 12:49  cgtobix

	* SConstruct, content/ribs/features/layeredshaders/SConscript,
	  content/ribs/scenes/vase/SConscript,
	  content/shaders/displacement/SConscript,
	  content/shaders/light/SConscript, platform/default/SConscript:
	  Created SConscripts for disributing some demo content and added a
	  new install target $CONTENTDIR

2006-11-28 09:55  pgregory

	* SConstruct: Revert changes in revision 618, adding gcc and c++ at
	  this level breaks the Win32/MSVS build.

2006-11-28 01:19  joron

	* renderer/render/ri.cpp: Make sure the Geometry "bunny" is a
	  direct replacement for Geometry "teapot".
	  

2006-11-27 00:52  pgregory

	* distribution/win/nsis/SConscript,
	  distribution/win/nsis/setup.nsi: As the PRODUCT_VERSION string is
	  used in the NSIS OutFile command, it must be specified as part of
	  the NSISDEFINES.

2006-11-27 00:06  minty

	* SConstruct: Add the gcc and c++ tools to the Sconstruct to ease
	  the Solaris builds.

2006-11-26 21:24  ltatkinson

	* distribution/linux/aqsis.spec, distribution/linux/rpm,
	  distribution/linux/rpm/aqsis.spec: Updated RPM (SPEC) to include
	  example content and revised textual descriptions.

2006-11-26 21:05  ltatkinson

	* distribution/win/nsis/SConscript,
	  distribution/win/nsis/header.bmp,
	  distribution/win/nsis/setup.nsi,
	  distribution/win/nsis/template.xcf,
	  distribution/win/nsis/ttf-bitstream-vera-1.10.zip,
	  distribution/win/nsis/wizard-1.2.bmp,
	  distribution/win/nsis/wizard.bmp: Updated Windows (NSIS)
	  installer to use custom artwork.

2006-11-26 14:56  c42f

	* aqsistypes/SConscript, argparse/SConscript,
	  displays/d_exr/SConscript, displays/d_sdcBMP/SConscript,
	  displays/d_xpm/SConscript, displays/display/SConscript,
	  distribution/SConscript, distribution/macosx/SConscript,
	  distribution/macosx/bundle/SConscript,
	  distribution/win/SConscript, distribution/win/nsis/SConscript,
	  renderer/aqsis/SConscript, renderer/ddmanager/SConscript,
	  renderer/raytrace/SConscript, renderer/render/SConscript,
	  rib/api/SConscript, rib/miqser/SConscript, rib/ri2rib/SConscript,
	  rib/rib2/SConscript, rib/rib2ri/SConscript,
	  rib/rib2stream/SConscript, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slpp/SConscript,
	  shadercompiler/slxargs/SConscript, shaders/SConscript,
	  texturing/plugins/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/teqser/SConscript, thirdparty/aqiv/SConscript,
	  thirdparty/dbo_plane/SConscript, thirdparty/pdiff/SConscript,
	  thirdparty/tinyxml/SConscript: Removed svn:executable property of
	  SConscript files.

2006-11-26 14:26  c42f

	* .cvsignore: aqsisrc and version.h are now built into the build
	  directory. (Don't need them
	  in cvsignore anymore)

2006-11-26 14:16  c42f

	* SConstruct: Let scons work out the dependencies for the dist*
	  targets automatically.
	  The dist* targets should _not_ depend on aqsis being built (or
	  installed!)
	  already.

2006-11-26 14:04  c42f

	* thirdparty/dbo_plane/SConscript: Make sure implicit.h is
	  distributed by the 'dist*' build targets.

2006-11-26 05:18  c42f

	* INSTALL: Add a note about building under linux to the
	  installation instructions

2006-11-26 00:48  c42f

	* AUTHORS: Add myself to author list (at the request of Leon ;)

2006-11-25 18:20  cgtobix

	* distribution/linux, distribution/linux/aqsis.spec: Initial RPM
	  spec

2006-11-24 15:57  ltatkinson

	* AUTHORS: Updated credits to include both Tobi's (original) RPM
	  work and Marcus' Linux packaging work.

2006-11-22 21:17  pgregory

	* SConstruct, aqsistypes/aqsis.h, aqsistypes/posix/file_system.cpp,
	  displays/display/display.cpp, shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  texturing/teqser/teqser.cpp: Remove the SCONS_BUILD define, and
	  all code that relied on it, SCons is our only build system now,
	  so it is unnecessary.
	  Fix the DEFAULT_PLUGIN_PATH to point to the new plugin path.

2006-11-22 15:09  pgregory

	* platform/default/SConscript: Added RPATH to the 'default' target
	  to avoid the requirement of setting
	  LD_LIBRARY_PATH to find libaqsis.so.

2006-11-21 11:48  ltatkinson

	* platform/default/SConscript: Fix OpenEXR header/library checking
	  issue under *nix.

2006-11-20 07:57  cgtobix

	* shaders/SConscript: Temporary fix for the globbing problem with
	  scons 0.96.92

2006-11-19 00:10  c42f

	* SConstruct: Changed with_pdiff to default to "no" - Normal users
	  won't have a need for the
	  regression tests.

2006-11-16 16:18  c42f

	* SConstruct: Try to resolve clash between persistence of options
	  in options.cache, and
	  persistence in custom.py. Solution: if custom.py exists, use
	  that, otherwise
	  use options.cache for the defaults.

2006-11-16 15:25  c42f

	* SConstruct: Added an option for a cache directory. This speeds up
	  builds where implicit
	  dependencies (like the SConstruct script) change frequently
	  between builds.
	  Ultimately: less frustration when modifing the build system.

2006-11-16 15:13  c42f

	* SConstruct, thirdparty/pdiff/SConscript: Make a boolean option to
	  install pdiff (default is "yes"). This is cleaner
	  than trying to have the build system detect some prior
	  installation of pdiff.

2006-11-16 15:02  cgtobix

	* SConstruct: Changed tarball name from
	  aqsis-<major>_<minor>_<build> to aqsis-<major>.<minor>.<build>

2006-11-16 14:46  c42f

	* SConstruct: Fix appended tar options.

2006-11-16 14:40  c42f

	* platform/default/SConscript: Warn the user if $destdir is used
	  together with the 'dist*' targets.

2006-11-16 14:04  cgtobix

	* thirdparty/dbo_plane/SConscript: Fixed the distribution directory
	  of dbo_plane

2006-11-16 13:21  c42f

	* displays/d_sdcWin32/SConscript, thirdparty/aqiv/SConscript,
	  thirdparty/maketextures/SConscript, thirdparty/pdiff/SConscript:
	  Fix some incorrect distribution directories given to
	  env.Distribute().

2006-11-13 23:50  c42f

	* SConstruct, platform/default/SConscript: Remove all $DESTDIR
	  stuff to the *nix platform-specific SConscript file. (Yep,
	  found a way to do this finally !)

2006-11-13 16:13  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 14:34  c42f

	* SConstruct: Try to fix whatever broke the win32 build in r586.

2006-11-13 13:33  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 13:31  c42f

	* SConstruct, platform/default/Options.py,
	  platform/default/SConscript: Add a $DESTDIR construction variable
	  to aid linux packagers.
	  
	  If $DESTDIR is nonempty, all files which normally go into '$path'
	  are installed
	  to '$DESTDIR/$path'. This is achieved by replacing the scons
	  Install() function
	  with a wrapper which modifies the requested install path.

2006-11-13 13:14  ltatkinson

	* distribution/win/nsis/setup.nsi: Fix '!define' error in Windows
	  (NSIS) install script.

2006-11-13 13:01  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 12:06  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 11:52  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 11:06  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 10:56  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer was not
	  finding a file from previous commit.

2006-11-13 10:41  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer now
	  uses absolute paths, rather than relative paths, to find the
	  relevant project files to include.

2006-11-13 10:17  pgregory

	* distribution/win/nsis/SConscript: Pass a new variable into the
	  NSIS script containing the absolute path to the project root.

2006-11-13 07:29  c42f

	* SConstruct: Add an install and build alias. Unix users can now
	  have the usual two-stage
	  build and install.

2006-11-13 05:56  c42f

	* SConstruct: Revert recent change to distribution build path.
	  
	  I've realised this plays badly with the $build_prefix option and
	  may break some
	  scripts. There's another way to achieve the same thing, but it
	  adds rather
	  more complexity.

2006-11-13 05:38  c42f

	* SConstruct: Make the distribution builders (eg NSIS) run in a
	  seperate directory,
	  'build_dist'. This seems to be the least messy way which we can
	  achieve having
	  the build directory as an alias for building aqsis rather than
	  installing it.
	  Otherwise, running "scons build" will try to run NSIS as well.

2006-11-13 05:26  c42f

	* SConstruct: Make LIBPATH refer to the build directories for
	  libraries rather than the
	  install directories. Needed for seperate build and install
	  targets.

2006-11-12 11:37  ltatkinson

	* distribution/win/nsis/setup.nsi: Windows (NSIS) installer now
	  'Fully' removes related registry entries upon uninstall - For
	  example, correct updating of the %PATH% variable once Aqsis is
	  uninstalled.

2006-11-11 21:02  minty

	* displays/d_exr/SConscript: Distribute all the files for the
	  OpenEXR display

2006-11-10 16:28  c42f

	* SConstruct, displays/d_exr/SConscript,
	  displays/d_sdcWin32/SConscript: Clean up the way that SConscript
	  files in subdirectories are called. Now
	  avoids the cut-and-paste needed to add new sub-SConscript files.
	  
	  Clean up the way that the build directory is specified (use
	  BuildDir() rather
	  than build_dir in each separate SConscript() call.)
	  
	  Make sure that _every_ file which is built (including aqsisrc,
	  version.h and
	  all of the plugins) is built inside the build directory.
	  
	  Fix bug where d_sdcWin32 plugin wouldn't get distributed (ie put
	  into
	  $ZIPDISTDIR) if run on a non-win32 system.
	  
	  Change the way exr info is returned to SConstruct (use Return()
	  rather than
	  Export())

2006-11-09 23:53  c42f

	* SConstruct, platform/default/Options.py,
	  platform/default/SConscript: Added sysconfdir, libdir and
	  libexecdir to the unix build options

2006-11-08 23:44  ltatkinson

	* content/ribs/features/levelofdetail/render.bat: Updated
	  content/examples.

2006-11-06 22:20  joron

	* platform/win32/SConscript: Turn off the optimizer (-O2) for mingw
	  it seems to be more confused than ever. -O1 is ok for now in
	  particular sds, bunny and lath won't hang anymore.

2006-11-06 01:09  c42f

	* SConstruct, aqsistypes/SConscript, argparse/SConscript,
	  platform/default/SConscript, renderer/ddmanager/SConscript,
	  renderer/raytrace/SConscript, rib/ri2rib/SConscript,
	  rib/rib2/SConscript, rib/rib2ri/SConscript,
	  rib/rib2stream/SConscript, shadercompiler/codegenvm/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slpp/SConscript,
	  shadercompiler/slxargs/SConscript,
	  texturing/plugins/common/SConscript,
	  thirdparty/tinyxml/SConscript: Introduce STATICLIBDIR as a place
	  to install the static libraries to.
	  
	  Set up default paths on *nix to fit with expectations about the
	  usual unix directory structure.

2006-11-06 00:54  ltatkinson

	* distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi: Win32/64 installer update
	  allowing users to not modify their PATH variable(s), should they
	  wish.

2006-11-05 15:54  c42f

	* SConstruct: Make scons store build signatures in a single file
	  _outside_ the install hierarchy --- no more .sconsign files in
	  unwanted places (eg, in the ZIPDISTDIR)

2006-11-05 15:22  c42f

	* SConstruct, renderer/render/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  thirdparty/dbo_plane/SConscript: Renamed SHAREDLIBDIR to a more
	  informative PLUGINDIR
	  
	  Introduced a RENDERENGINEDIR variable to enable placing
	  libaqsis.so seperately on *nix

2006-11-05 14:51  c42f

	* shadercompiler/aqsl/SConscript: Having LIBPATH (the scons library
	  search path) pointing to LIBDIR (an _installation_ directory)
	  doesn't make any sense as it mightn't even exist until the end of
	  the build...

2006-11-05 10:22  pgregory

	* renderer/render/SConscript: Fix missing file ri_debug.h in
	  distribution targets.

2006-11-05 08:29  c42f

	* SConstruct, displays/d_exr/SConscript,
	  displays/d_sdcBMP/SConscript, displays/d_sdcWin32/SConscript,
	  displays/d_xpm/SConscript, displays/display/SConscript: * Renamed
	  LIBEXECDIR to DISPLAYSDIR. Should be more descriptive in the
	  cross-platform context

2006-11-04 17:20  ltatkinson

	* content/ribs/features/curves,
	  content/ribs/features/curves/bezier.rib,
	  content/ribs/features/curves/render.bat,
	  content/ribs/features/objectinstance,
	  content/ribs/features/objectinstance/render.bat,
	  content/ribs/features/objectinstance/singlepolygon.rib,
	  content/ribs/features/solidmodeling,
	  content/ribs/features/solidmodeling/csg.rib,
	  content/ribs/features/solidmodeling/render.bat,
	  content/ribs/features/textures,
	  content/ribs/features/textures/grid.tif,
	  content/ribs/features/textures/render.bat,
	  content/ribs/features/textures/sticky.rib: Updated
	  content/examples.

2006-11-04 15:22  c42f

	* SConstruct, displays/d_exr/SConscript,
	  displays/d_sdcBMP/SConscript, displays/d_sdcWin32/SConscript,
	  displays/d_xpm/SConscript, displays/display/SConscript,
	  renderer/render/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  thirdparty/dbo_plane/SConscript: * Add $SHAREDLIBDIR and
	  $LIBEXECDIR build environment variables for shared
	  objects and display devices respectively. These default to the
	  previous
	  location ($BINDIR) so everything should work identically after
	  this change.
	  This change prepares for a better directory structure for the
	  *nix builds.

2006-11-04 14:38  ltatkinson

	* content/ribs/scenes/microbe/microbe.rib,
	  content/ribs/scenes/microbe/render.bat,
	  content/ribs/scenes/vase/render.bat,
	  content/ribs/scenes/vase/vase.rib: Updated content/examples.

2006-11-04 14:37  ltatkinson

	* content/ribs/features/layeredshaders/layered.rib,
	  content/ribs/features/motionblur/deformation.rib,
	  content/ribs/features/multipass/aov.rib,
	  content/ribs/features/occlusion/envlight.rib,
	  content/ribs/features/occlusion/occlmap.py,
	  content/ribs/features/occlusion/occlmap.rib,
	  content/ribs/features/occlusion/render.bat,
	  content/ribs/features/occlusion/simple.rib,
	  content/ribs/features/subdivision/creases.rib: Updated
	  content/examples.

2006-11-04 14:14  pgregory

	* platform/win32/SConscript: Small fix to the MinGW build after the
	  recent reorganisation of SConscript files. It seems that the very
	  problem the SConscript reorganisation intended to fix was there
	  all along in the MinGW build. The extra CCFLAGS to ri2rib were
	  accidentally overflowing into libaqsis, hiding the fact that the
	  flags for libaqsis were insufficient.

2006-11-03 17:30  pgregory

	* renderer/aqsis/aqsis.cpp, renderer/render/ri.cpp,
	  rib/rib2/librib.cpp: Remove unnecessary command line option
	  "-renderinfo". It's functionality was controlled by the verbosity
	  level anyway, so you had to do -renderinfo -v2 to see the data,
	  so now just -v2 will do, it get's output as part of the rest of
	  the 'info' level logging messages.

2006-11-03 17:06  pgregory

	* renderer/aqsis/aqsis.cpp: Fix comparison error in the checking of
	  the new echoapi and mpdump flag options.

2006-11-03 15:01  c42f

	* SConstruct: * Make SConstruct a little easier to read.

2006-11-03 14:50  joron

	* renderer/render/ri.cpp: fix a minor orthograph.

2006-11-03 14:36  ltatkinson

	* content/ribs/features/levelofdetail,
	  content/ribs/features/levelofdetail/detail.rib,
	  content/ribs/features/levelofdetail/render.bat,
	  content/ribs/features/shadows,
	  content/ribs/features/shadows/render.bat,
	  content/ribs/features/shadows/softshadow.rib: Content/example
	  update.

2006-11-03 14:35  ltatkinson

	* content/ribs/features/motionblur/camera.rib,
	  content/ribs/features/motionblur/render.bat,
	  content/ribs/features/motionblur/render_camera.bat,
	  content/ribs/features/motionblur/render_deformation.bat:
	  Content/example update.

2006-11-03 14:35  joron

	* testing/regression/RIBs/Primitives/simpleteapot.rib: This is
	  simple example with geometry "teapot" for comparaison with
	  simplebunny.rib.

2006-11-03 14:18  pgregory

	* aqsistypes/logging.cpp, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp, renderer/render/ri.cpp,
	  rib/api/apidebug.xsl, rib/api/apivalidate.xsl,
	  rib/rib2/librib.cpp: Fix a problem with the RI API debgging
	  output. Before, the output strings were being constructed
	  irrespective of the logging level, as the logging filtering works
	  by passing the strings anyway, and letting the log decide whether
	  to display it or not. This was inefficient, especially for very
	  large RI calls, such as PointsPolygons (moreso on VC6 than
	  anywhere else due to a 'mis-feature' in their STL).
	  
	  Now API output is separate from the log verbosity level. Instead
	  of being part of the DEBUG log level, it is entirely separate. To
	  get API output, pass the -echoapi command line switch. A side
	  effect is that the -v3 level is now just for debug messages, so
	  if you want debug output, you don't get flooded with API calls.
	  
	  During this change I noticed that the default "current" log level
	  if no stream modifier is used, is undefined. I've fixed that now,
	  so it defaults to 0, i.e. pass everything. So now if you do
	  Aqsis::log() << "message"... it will print irrespective of chosen
	  verbosity level, as no log level has been defined.
	  
	  Also had to add some sanity checks to the debug output to check
	  if a valid render context and options are available before trying
	  to query the "statistics" "echoapi" option.

2006-11-03 14:14  c42f

	* aqsistypes/SConscript, argparse/SConscript,
	  renderer/ddmanager/SConscript, renderer/raytrace/SConscript,
	  rib/ri2rib/SConscript, rib/rib2/SConscript,
	  rib/rib2ri/SConscript, rib/rib2stream/SConscript,
	  shadercompiler/aqsl/SConscript,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shadervm/SConscript,
	  shadercompiler/slpp/SConscript,
	  shadercompiler/slxargs/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/common/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/teqser/SConscript, thirdparty/dbo_plane/SConscript: *
	  Make each SConscript which builds something use a copy of the
	  main build
	  environment. Desirable because of the way that "UseTargetOptions"
	  adds
	  compile flags etc. to the current environment.

2006-11-03 13:49  ltatkinson

	* content/ribs/scenes/vase/vase.rib: Updated example to remove
	  unnecessary use of the framebuffer for shadowmaps.

2006-11-03 13:20  joron

	* testing/regression/RIBs/Scenes/bunny.rib: update the rib so it
	  could revert the lastest changes in geometry "bunny".

2006-11-03 12:50  ltatkinson

	* content/ribs/features/aov, content/ribs/features/deformation_mb,
	  content/ribs/features/motionblur,
	  content/ribs/features/motionblur/deformation.rib,
	  content/ribs/features/motionblur/render.bat,
	  content/ribs/features/multipass,
	  content/ribs/features/multipass/aov.rib,
	  content/ribs/features/multipass/myval.sl,
	  content/ribs/features/multipass/render.bat: Content/example
	  update.

2006-11-03 12:46  joron

	* testing/regression/RIBs/Primitives/simplebunny.rib: since I
	  rotate and scale by 1/30 I scale up by 30 and remove the rotation
	  to keep the image similar.

2006-11-03 12:43  joron

	* renderer/render/ri.cpp: make sure the Geometry "bunny" matches
	  the orientation of the geometry "teapot" and it is oriented the
	  same.

2006-11-02 00:57  ltatkinson

	* distribution/win/nsis/SConscript: SCons fix to work with
	  (updated) NSIS script.

2006-11-02 00:55  ltatkinson

	* distribution/win/nsis/setup.nsi: Fixed earlier NSIS update due to
	  MinGW/VC6 file(s) issue.

2006-11-01 22:46  pgregory

	* distribution/win/nsis/SConscript: Fix mingw check to work on
	  non-Win32 systems.

2006-11-01 20:17  joron

	* testing/regression/reference/Bug1102597.tif: make sure it is
	  committed too.

2006-11-01 20:16  joron

	* testing/regression/RIBs/Bugs/Bug1102597,
	  testing/regression/RIBs/Bugs/Bug1102597/Bug1102597.rib,
	  testing/regression/RIBs/Bugs/Bug1102597/jobs.cfg: make sure they
	  are committed now.

2006-11-01 17:29  pgregory

	* distribution/win/nsis/SConscript: Add some extra variables passed
	  into NSIS.

2006-11-01 17:01  ltatkinson

	* distribution/win/nsis/setup.nsi: Added 'mpanalyse.py',
	  'libaqsis.a', 'aqsis.def' and 'aqsis.lib' files to the NSIS
	  script... as per the recent commits made by Paul.

2006-11-01 14:26  pgregory

	* ., SConstruct, tools/SConscript, tools/mpdump/SConscript: Update
	  build to ensure that mpanalyse.py is installed as part of the
	  binary tools, now that mpdump mode is available to all.

2006-11-01 13:39  pgregory

	* tools/mpdump/mpanalyse.py: Update mpanalyse.py to work with CGKit
	  2

2006-11-01 13:38  pgregory

	* SConstruct, renderer/aqsis/aqsis.cpp,
	  renderer/render/imagebuffer.cpp, renderer/render/imagebuffer.h,
	  renderer/render/mpdump.cpp, renderer/render/mpdump.h,
	  rib/rib2/librib.cpp: Enable the use of the MPDump facility in the
	  release build. On by default, can be disabled at build time by
	  passing 'enable_mpdump=false' to SCons.
	  
	  When enabled, passing '-mpdump' to aqsis will cause a file
	  'mpdump.mp' to be generated containing a dump of micropolygons
	  and other data generated by Aqsis during rendering. This file can
	  be processed using the mpanalyse.py tool.
	  
	  The '-mpdump' command line option basically sets the option
	  
	  Option "mpdump" "integer enabled" [1]
	  
	  so setting this Option in the RIB will have the same effect, 1 is
	  enabled, 0 is disabled.

2006-10-31 20:48  joron

	* renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h: In hope mingw will behave I
	  remove all the inline directive and replace the simple printf
	  with a more acceptable Aqsis::log() directive.
	  Since the mingw debug version of aqsis doesn't crash but the
	  release did; I'm hoping by turnoff the inline and removing
	  printf() it will work.

2006-10-31 17:16  cgtobix

	* SConstruct: Fix for the problems with SCons 0.96.92

2006-10-31 11:40  pgregory

	* SConstruct: Try an alternate fix for the problems with 0.96.92 of
	  SCons.

2006-10-31 11:38  pgregory

	* SConstruct, aqsistypes/SConscript, build_support.py,
	  distribution/SConscript, distribution/macosx/SConscript,
	  distribution/win/SConscript, texturing/plugins/SConscript: Revert
	  previous change, did not suitably fix the problem.

2006-10-31 10:23  pgregory

	* SConstruct, aqsistypes/SConscript, build_support.py,
	  distribution/SConscript, distribution/macosx/SConscript,
	  distribution/win/SConscript, texturing/plugins/SConscript:
	  Refactor the Distribute functionality in the hope that it
	  corrects a problem with the latest SCons.

2006-10-30 14:17  ltatkinson

	* content/ribs/features/occlusion/envlight.rib,
	  content/ribs/features/occlusion/envlight.sl,
	  content/ribs/features/occlusion/occlmap.py,
	  content/ribs/features/occlusion/occlmap.rib,
	  content/ribs/features/occlusion/world.rib: Updated 'occlusion'
	  example content to remove zbuffer 'filter' warning and make more
	  aesthetically pleasing.

2006-10-30 12:55  joron

	* testing/regression/RIBs/Bugs/Bug1586027/jobs.cfg: Remove
	  array.sl; no need for it.

2006-10-30 12:38  joron

	* texturing/teqser/teqser.cpp: Minor edit; "\n" -> std::endl
	  

2006-10-30 12:25  joron

	* testing/regression/RIBs/Bugs/Bug1586027/jobs.cfg: Minor edit
	  change

2006-10-30 00:39  joron

	* shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp: I forgot a space character
	  for compiled.

2006-10-30 00:38  joron

	* shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  texturing/teqser/teqser.cpp: [Bug 1585720 ] - make sure teqser,
	  aqsl, aqsltell output the same version as aqsis.

2006-10-30 00:34  joron

	* shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp: Add the date and time when
	  it is outputting its version (as in aqsis).

2006-10-28 14:00  pgregory

	* SConstruct, distribution/SConscript, distribution/macosx,
	  distribution/macosx/SConscript, distribution/macosx/bundle,
	  distribution/macosx/bundle/Info.plist,
	  distribution/macosx/bundle/SConscript,
	  distribution/macosx/bundle/aqsis.icns: Refactor the MacOSX bundle
	  stuff, now mostly stored in distribution/macosx/bundle. A new
	  target (only available if running on a Mac) 'bundle' serves as a
	  starting point for anyone knowledgable of the MacOSX bundle
	  format to build an auto generated bundle from.

2006-10-28 13:01  pgregory

	* platform/darwin/SConscript: Disable link time stripping as there
	  is a bug in the 4.01 version of GCC.
	  Need to add stripping as a separate step in the SCons build at
	  some point.

2006-10-27 22:35  pgregory

	* renderer/render/options.cpp: Fix bug #1586027
	  The Get???OptionWrite calls were always creating
	  CqParameterTypedUniform, even if the specified arraysize was > 1,
	  now they create CqParameterTypedUniformArray when necessary.

2006-10-27 22:28  pgregory

	* testing/regression/RIBs/Bugs/Bug1586027,
	  testing/regression/RIBs/Bugs/Bug1586027/Bug1586027.rib,
	  testing/regression/RIBs/Bugs/Bug1586027/jobs.cfg,
	  testing/regression/reference/Bug1586027.tif: Add test case for
	  bug #1586037

2006-10-26 22:35  ltatkinson

	* distribution/win/nsis/setup.nsi: AQSISHOME environment variable,
	  within the (NSIS) Win32 installer, was pointing to the 'bin'
	  directory and not the root installation directory.

2006-10-25 14:01  pgregory

	* INSTALL: Update INSTALL instructions to reflect the new SCons
	  based build process, as per the Wiki.

2006-10-25 09:16  pgregory

	* SConstruct, platform/win32/Options.py, platform/win32/SConscript:
	  Update the Win32 libs module, now includes custom makefiles to
	  make it easy to build for Win32/VC as and when it's necessary to
	  update. Also supports building with different versions of VC, see
	  build instructions in the various subfolders
	  (build_for_aqsis.txt) for details.
	  Update the SConstruct file to change the order of setting up
	  options and environment values. We need a temporary environment
	  to pass into the platform specific Options.py files, but it
	  cannot have it's environment passed onto the real one, as the
	  PATH will have been setup for the default version of VC, and the
	  options to allow you to change it (MSVS_VERSION) will not work.
	  The side effect of this is that the various Options.py files must
	  ONLY change the opts, not the environment, any changes to the
	  environment in there will be lost, changes to the environment,
	  such as PATH are to be done in the platform specific SConscript
	  files.

2006-10-24 03:19  joron

	* renderer/render/parameters.h: eliminate warnings signed/unsigned
	  integer comparaison, and unused variable j.

2006-10-24 03:10  joron

	* renderer/render/attributes.h: remove another warning hash was not
	  used.

2006-10-24 03:01  joron

	* renderer/render/patch.h: fix a warning about the comparaison
	  between signed and unsigned integer.

2006-10-24 02:58  joron

	* renderer/render/surface.h: fix a warning about a mismatch between
	  unsigned and signed integer.

2006-10-24 02:49  joron

	* renderer/render/points.h: remove the warning between a missmatch
	  between signed and unsigned integer.

2006-10-24 02:47  joron

	* renderer/render/nurbs.cpp: remove warnings about the mismatch
	  between signed and unsigned integer.

2006-10-24 02:41  joron

	* renderer/render/parameters.h: Remove a warning about complaint
	  about the difference between signed and unsigned.

2006-10-24 02:30  joron

	* renderer/render/curves.h: Remove unused variables pp0, pp1
	  width0, width1, maxwidthraster according to gcc 3.3 -wall

2006-10-23 23:01  pgregory

	* shadercompiler/shadervm/shadervariable.h: Default "ArrayLength"
	  for non-array variables is 1, not 0.

2006-10-23 23:00  pgregory

	* renderer/render/cubiccurves.cpp, renderer/render/curves.h: Change
	  the way that parameter variables are indexed in curves when the
	  curve is periodic.
	  The old method was not correctly calculating the indices
	  according to sub-curves within a group.

2006-10-23 22:55  pgregory

	* testing/regression/reference/Bug1275071.tif,
	  testing/regression/reference/lincurve_test2.tif: Update reference
	  images to reflect changes to curve rendering.

2006-10-23 19:06  joron

	* renderer/render/cubiccurves.cpp: This is the same thing as before
	  but instead of using an if (macro) on each assignment I prefer to
	  see the code with one if statement to make it very similar to the
	  rest of the code.

2006-10-23 17:04  joron

	* renderer/render/curves.cpp: Same thing as before

2006-10-23 17:03  joron

	* renderer/render/SConscript, renderer/render/cubiccurves.cpp,
	  renderer/render/linearcurves.cpp: Minor re-organization for
	  curves.cpp; I just moved the code for CqLinearCurves*** to
	  linearcurves.cpp same for CqCubicCurv*. to cubiccurves.cpp

2006-10-23 14:23  joron

	* renderer/render/blobby.cpp: remove _ in front of local variables.

2006-10-23 14:21  joron

	* renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h: Rename the class member to not
	  have _ in front of them; that code was given by K-3D and was
	  causing problem between _N and runtime on sparc/sun environment.
	  

2006-10-23 01:13  joron

	* renderer/render/parameters.h: Make sure the arrayIndex is not
	  defined twice.

2006-10-22 09:58  pgregory

	* renderer/render/nurbs.cpp, renderer/render/nurbs.h,
	  renderer/render/parameters.h, renderer/render/patch.h,
	  renderer/render/points.h, renderer/render/surface.h: Update the
	  handling of array primitive vars that get passed as varying
	  variables to shaders. i.e. varying, vertex, facevarying, and
	  facevertex.

2006-10-20 15:34  pgregory

	* renderer/render/ri.cpp, rib/api/apicache.xsl,
	  rib/api/apidebug.xsl, rib/api/apivalidate.xsl: Clean up some of
	  the per API call macros, capitalise them for clarity.
	  Add macros to extract parameters in the varargs versions of the
	  API calls, just to make things easier to change.
	  Add some checking to the varargs code to check for empty lists.

2006-10-19 12:54  pgregory

	* SConstruct, build_check.py: Add and extra SCons command line
	  option, 'no_fltk', to allow controlled disabling of FLTK support.
	  Add some extra output during checking, just for clarity.

2006-10-19 12:43  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py: Minor
	  update for orthographic shadowmap generation. I added a "Window
	  Size" property to the properties for lights, so in the case of
	  orthographic shadow maps that don't cover the full scene, the
	  ScreenWindow parameter can be easily adjusted. This is probably
	  going to be temporary until I figure out a way of calculating the
	  area covered by the camera projection and using that to better
	  position the screen coordinates.
	  
	  Also, I added a "Reset object data" button to object properties
	  to cover situations where blender seems to get confused when
	  changing light types.

2006-10-18 13:55  pgregory

	* shadercompiler/aqsl/SConscript: More problems with spaces in
	  build directory

2006-10-18 12:56  pgregory

	* shadercompiler/aqsl/SConscript: Hopefully avoid problems with
	  spaces in build directory

2006-10-17 16:18  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py: Bug fix
	  for hemilights

2006-10-17 12:34  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py: Minor
	  bug fixes, etc.

2006-10-14 14:42  pgregory

	* renderer/render/ri_debug.h: Fix an error in the parameter list
	  output function for handling strings. When allocating a buffer
	  that will be filled with strcpy, it's important to include the
	  nul terminator in the size calculation.

2006-10-14 14:40  pgregory

	* renderer/render/procedural.cpp: Fix error in the call to
	  RiReadArchive, as it is the varying argument count based version
	  of the API call, it needs to be terminated with a RI_NULL to mark
	  the end of the parameter list.

2006-10-14 14:38  pgregory

	* testing/regression/RIBs/Dh82/aircraft.rib: Fix texture file
	  naming, various case issues meant the file didn't render
	  successfully on case sensitive file systems, i.e. Linux.

2006-10-13 16:51  joron

	* testing/regression/RIBs/Bugs/Bug1502737,
	  testing/regression/RIBs/Bugs/Bug1502737/Bug1502737.rib,
	  testing/regression/RIBs/Bugs/Bug1502737/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1502737/show_st.sl,
	  testing/regression/reference/Bug1502737.tif: Add the new bug
	  1502737 into RTS

2006-10-13 15:52  pgregory

	* renderer/render/ri.cpp: Fix part of bug #1502737, the 'rewriting'
	  of RiPointsGeneralPolygons to
	  RiPointsPolygons by triangulation was getting the remapping of
	  'facevarying'
	  primitive variables wrong when they were arrays. The array size
	  was queried, but
	  only used in some of the indexing.
	  
	  Now the array size is used to modify the element size directly,
	  resulting in
	  simpler, correct indexing.

2006-10-13 15:32  pgregory

	* renderer/render/ri.cpp, renderer/render/ri_debug.h,
	  rib/api/apidebug.xsl: Add some extra code to the RI interface
	  debug output, now tries to output parameter
	  lists as well.

2006-10-11 15:17  joron

	* testing/regression/RIBs/Dh82,
	  testing/regression/RIBs/Dh82/82ABANDP.png,
	  testing/regression/RIBs/Dh82/82ABANDP.tif,
	  testing/regression/RIBs/Dh82/82aBLW.png,
	  testing/regression/RIBs/Dh82/82aBLW.tif,
	  testing/regression/RIBs/Dh82/82aBRW.png,
	  testing/regression/RIBs/Dh82/82aBRW.tif,
	  testing/regression/RIBs/Dh82/82aCFUS.png,
	  testing/regression/RIBs/Dh82/82aCFUS.tif,
	  testing/regression/RIBs/Dh82/82aFFUS.png,
	  testing/regression/RIBs/Dh82/82aFFUS.tif,
	  testing/regression/RIBs/Dh82/82aPANEL.png,
	  testing/regression/RIBs/Dh82/82aPANEL.tif,
	  testing/regression/RIBs/Dh82/82aRFUS.png,
	  testing/regression/RIBs/Dh82/82aRFUS.tif,
	  testing/regression/RIBs/Dh82/82aSTABS.png,
	  testing/regression/RIBs/Dh82/82aSTABS.tif,
	  testing/regression/RIBs/Dh82/82aTLW.png,
	  testing/regression/RIBs/Dh82/82aTLW.tif,
	  testing/regression/RIBs/Dh82/82aTRW.png,
	  testing/regression/RIBs/Dh82/82aTRW.tif,
	  testing/regression/RIBs/Dh82/82apilot.png,
	  testing/regression/RIBs/Dh82/82apilot.tif,
	  testing/regression/RIBs/Dh82/Dh82.rib,
	  testing/regression/RIBs/Dh82/aircraft.rib,
	  testing/regression/RIBs/Dh82/jobs.cfg,
	  testing/regression/RIBs/Dh82/textures.rib,
	  testing/regression/RIBs/Dh82/x3d_material.sl,
	  testing/regression/reference/Dh82.tif: Add a test case for the
	  lack of speed of aqsis.
	  This is intended to run agaist pixie, air, 3delight.

2006-10-11 11:38  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated the 'Other'
	  component/string, seen during the installation process, to be
	  'Libraries' which should be more obvious to (potential)
	  developers.

2006-10-09 21:47  ShortWave

	* tools/BtoR/BtoRMain.py: Bugfix, missing comma

2006-10-09 20:03  ShortWave

	* tools/BtoR/BtoRMain.py: Bugfix for BMRT attributes, one attribute
	  was missing a default value, resulting in a crash.

2006-10-09 19:22  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py: Bugfix for non-initialized
	  lights causing a crash at rendertime.

2006-10-09 12:21  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py: Bug fix
	  for previous commit

2006-10-09 02:04  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRTypes.py: In this episode:
	  
	  Pixie support
	  Render-specific object-level attributes.
	  Modifications made to auto-AO for aqsis.
	  Modified material list to allow checkbox style selection of
	  materials for deletion, and made that whole thing work better.
	  Added an "Eyesplits" property to lights for tweaking of shadowmap
	  eyesplits parameters.
	  
	  Some bug fixes too.
	  
	  Bug fixes, some extra error trapping.

2006-10-06 16:02  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py: Yet again...see previous

2006-10-06 15:58  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py: Update #2, see previous commit

2006-10-06 15:50  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py: Update to fix minor property
	  bug.

2006-10-06 15:32  ShortWave

	* tools/BtoR/BtoRMain.py: Updated to fix problem with
	  implementation-specific options not updating in Render properties
	  (export dialog) when the renderer was changed in global settings.

2006-10-06 12:27  ShortWave

	* tools/BtoR/BtoRMain.py: update to allow shader search path
	  recursion. The "recurse" checkbox is on the right hand side of
	  the path

2006-10-06 03:01  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py: This
	  version supports storing seperate shader path setups PER RENDERER
	  so multiple renderers and shader paths can be configured and
	  stored. Switching to a new renderer takes affects mostly
	  immediately, but a few changes to the material system remain to
	  be made.
	  
	  Some bugs have been squashed in the layer lighting area, that all
	  works as expected.

2006-10-03 17:24  joron

	* testing/regression/RIBs/Bugs/Bug1567059,
	  testing/regression/RIBs/Bugs/Bug1567059/Bug1567059.rib,
	  testing/regression/RIBs/Bugs/Bug1567059/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1567059/liquidpoint.sl,
	  testing/regression/reference/Bug1567059.tif: Add the bug 1567059
	  into the RTS

2006-10-03 07:11  pgregory

	* shadercompiler/slparse/typecheck.cpp: Fix bug #1567059 "Colour
	  issue when rendering Liquid(Maya) RIBs"
	  The shader compiler was producing incorrect results in certain
	  cases of
	  compiling code with 'triple' operators. That is, a
	  (float,float,float)
	  expression.
	  
	  Specifically, the typechecking was incorrectly traversing the
	  subexpression
	  list, not taking into account the fact that one subexpression
	  typecheck
	  might result in it being replaced with a typecast.

2006-09-28 14:31  joron

	* testing/regression/RIBs/Bugs/Bug1275071,
	  testing/regression/RIBs/Bugs/Bug1275071/Bug1275071.rib,
	  testing/regression/RIBs/Bugs/Bug1275071/jobs.cfg,
	  testing/regression/reference/Bug1275071.tif: Add the test case
	  Bug1275071 into RTS for comparison between different renderers.

2006-09-27 19:04  ShortWave

	* tools/BtoR/BtoRMain.py: Update to resolve case checking for
	  platform type (Windows vs. Mac vs. Linux)

2006-09-27 14:46  ShortWave

	* tools/BtoR/BtoRMain.py: Updated to solve problem with
	  renderer-specific options/attributes causing a crash when a given
	  renderer has no configured options or attributes.

2006-09-27 12:23  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py: Bug fix for param updates in
	  lighting shader.

2006-09-26 01:25  ShortWave

	* tools/BtoR/BtoRGUIClasses.py: update with a lot of changes,
	  refinements and updates.
	  
	  Changes thus far:
	  Enhanced method of dealing with renderer-specific options. They
	  are self-rendering now.
	  Better lighting control. Support for lighting control on layers
	  (at least within Neqsus, but not controlled within blender)
	  
	  Properties work a LOT better. Some things are still rocky there,
	  but I'm not perfect.
	  
	  Other things: Better shader control, more generalized property
	  support, bug fixes all around, some minor UI enhancements...The
	  alternate, non-cgkit-based shader params are supported now (for
	  situations where no matter what you do, cgkit simply won't parse
	  your shaders. The alternate system parses data returned from a
	  shader tell app (e.g. sltell, aqsltell, sdrinfo) and generates
	  the shader list for you.
	  
	  Added some preliminary support for lighting roles, but as yet
	  that doesn't do anything. The ultimate goal is to be able to
	  generate seperate render passes for each "lighting role" based on
	  the setup in Neqsus.
	  
	  Lots of other stuff, but much too numerous to discuss ATM.

2006-09-26 01:23  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRTypes.py: update with a lot of changes,
	  refinements and updates.
	  
	  Changes thus far:
	  Enhanced method of dealing with renderer-specific options. They
	  are self-rendering now.
	  Better lighting control. Support for lighting control on layers
	  (at least within Neqsus, but not controlled within blender)
	  
	  Properties work a LOT better. Some things are still rocky there,
	  but I'm not perfect.
	  
	  Other things: Better shader control, more generalized property
	  support, bug fixes all around, some minor UI enhancements...The
	  alternate, non-cgkit-based shader params are supported now (for
	  situations where no matter what you do, cgkit simply won't parse
	  your shaders. The alternate system parses data returned from a
	  shader tell app (e.g. sltell, aqsltell, sdrinfo) and generates
	  the shader list for you.
	  
	  Added some preliminary support for lighting roles, but as yet
	  that doesn't do anything. The ultimate goal is to be able to
	  generate seperate render passes for each "lighting role" based on
	  the setup in Neqsus.
	  
	  Lots of other stuff, but much too numerous to discuss ATM.

2006-09-18 14:56  joron

	* displays/display/display.cpp: This is most a cleanup activity.
	  Replace unsigned char where replace by TqUchar
	  int TqInt
	  Move CompositeAlpha() to the same place as WriteAsTiff()
	  Use CompositeAlpha for the file driver part too.

2006-09-17 23:34  pgregory

	* shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/slparse/parser.yy: Fix the implementation of the
	  SL function "textureinfo". The vmoutput code was presuming that
	  the texture name is always a variable, this is not the case, it
	  can be any arbitrary expression. This showed up as an assertion
	  in the test for bug #1556643.
	  
	  Now the name is passed as an expression as a child of the
	  textureinfo node, and output properly.

2006-09-16 13:18  joron

	* displays/display/display.cpp: Restore alpha compositing with the
	  framebuffer.

2006-09-15 20:10  joron

	* displays/display/display.cpp: Make sure the framebuffer of aqsis
	  won't crash if provided with short per component.

2006-09-14 21:43  pgregory

	* rib/rib2/parser.yy: Add some simple checking for the validity of
	  tags in the SubdivisionMesh parser. Fails if the ntags and nargs
	  parameters don't match properly, i.e. the length of nargs[]
	  should be ntags*2.

2006-09-14 21:26  joron

	* testing/regression/RIBs/Bugs/Bug1556643/Bug1556643.rib: Fix the
	  test case.

2006-09-14 15:50  joron

	* testing/regression/reference/Bug1546943.tif: Commit a reference
	  file just to make sure RTS is not broken but that special case.

2006-09-14 15:48  joron

	* testing/regression/RIBs/Bugs/Bug1546943/Bug1546943.rib: I create
	  for now a 8bit output so the RTS will be ok by the output. But
	  output16.tif which was causing a crash.

2006-09-14 15:39  joron

	* testing/regression/RIBs/Bugs/Bug1546943,
	  testing/regression/RIBs/Bugs/Bug1546943/Bug1546943.rib,
	  testing/regression/RIBs/Bugs/Bug1546943/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1546943/liquidspot.sl: This is
	  the regression addition for the bug 1546943

2006-09-14 13:53  joron

	* testing/regression/reference/Bug1556643.tif: Add the reference
	  for the new regression test.

2006-09-14 11:57  joron

	* testing/regression/RIBs/Bugs/Bug1556643,
	  testing/regression/RIBs/Bugs/Bug1556643/Bug1556643.rib,
	  testing/regression/RIBs/Bugs/Bug1556643/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1556643/s.sl: This is the
	  regression addition for the bug 1556643

2006-09-14 11:57  joron

	* renderer/render/environment.cpp, renderer/render/shadowmap.cpp,
	  renderer/render/texturemap.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp: Fix for bug
	  #1556643; it make textureinfo() more solid in particular when a
	  file doesn't exist and/or if a file is loaded but it is not the
	  same type of texturemap. The only case which is more solid is
	  when aqsis loads only one texturemap texture(), environment()
	  and/or shadow() and later textureinfo() is called again.

2006-09-14 11:53  joron

	* renderer/render/renderer.cpp: This is will init all the type of
	  shaders including the default one "null" which is used in case
	  when aqsis don't find a surface shader.

2006-09-13 09:32  minty

	* testing/regression/RIBs/Performance/filter_simple_catmullrom.py,
	  testing/regression/RIBs/Performance/filter_simple_gauss.py,
	  testing/regression/RIBs/Performance/filter_simple_sinc.py,
	  testing/regression/RIBs/Performance/parse_many.py,
	  testing/regression/RIBs/Performance/plane_occ.py,
	  testing/regression/RIBs/Performance/sample_comp_transp.py,
	  testing/regression/RIBs/Performance/sample_dof_many.py,
	  testing/regression/RIBs/Performance/sample_dof_mb_many.py,
	  testing/regression/RIBs/Performance/sample_mb_move_many.py,
	  testing/regression/RIBs/Performance/sample_mb_move_single.py,
	  testing/regression/RIBs/Performance/sample_mb_rotate_steps.py,
	  testing/regression/RIBs/Performance/sample_push_test.py,
	  testing/regression/RIBs/Performance/sample_simple.py,
	  testing/regression/RIBs/Primitives/coneparams1.py,
	  testing/regression/RIBs/Primitives/sphereparams1.py,
	  testing/regression/RIBs/Primitives/torusparams1.py,
	  testing/regression/RIBs/Procedurals/detailproc.py,
	  testing/regression/RIBs/Procedurals/sphereproc.py,
	  testing/regression/clean.py, testing/regression/rendertester.py:
	  Set the execute property for all the python scripts in the RTS.

2006-09-12 23:48  pgregory

	* shadercompiler/shadervm/shadervm.h: Fix regression
	  Curves/lincurve_test3.rib. When cloning a shader, the flag that
	  indicates whether it was declared inside or outside the
	  WorldBegin/End block should not be copied from the clone, but
	  instead determined from the current status.

2006-09-12 20:46  pgregory

	* testing/regression/RIBs/Flower/GSHdisplacementtest.rib,
	  testing/regression/RIBs/Flower/GSHsinedisp.sl,
	  testing/regression/RIBs/Flower/jobs.cfg,
	  testing/regression/reference/GSHdisplacementtest.tif: Fix test
	  Flower, having confirmed the validity of the original Aqsis
	  results, the kludge in the shader to make Aqsis render like other
	  reference implementations (that were in fact incorrect) has been
	  removed, and the reference image updated to reflect the new
	  result.

2006-09-12 14:09  pgregory

	* renderer/render/micropolygon.cpp, renderer/render/nurbs.cpp,
	  renderer/render/points.cpp, renderer/render/polygon.cpp,
	  renderer/render/quadrics.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp: Fix a problem
	  with GCC on Linux and MacOSX, comparing two TqBools with (a == b)
	  doesn't always work.
	  Specifically, the value returned from GetHandedness() on
	  CqTransform() wasn't guaranteed to be 0 or 1,
	  so direct comparison of value is bad. Instead now uses boolean
	  comparison operators for safety.

2006-09-12 14:06  pgregory

	* renderer/render/curves.cpp: Fix recent CqCubicCurvesGroup change
	  to work on Windows/VC6.

2006-09-12 09:38  pgregory

	* renderer/render/curves.cpp, renderer/render/curves.h: Fix the
	  regression on Curves/catmull-rom.rib. The change to support the
	  two stage 'posting' of
	  primitives (for multipass rendering) meant that the catmull-rom
	  curve groups are passed directly to
	  the primitive store, but the bound calculation didn't take into
	  account that not all basis types
	  result in a hull that bounds the curve.
	  
	  Now the bound calculation on CqCubicCurvesGroup automatically
	  converts to Bezier during calculation.

2006-09-10 00:30  pgregory

	* testing/regression/reference/Bug1266044.tif,
	  testing/regression/reference/Bug1326794.tif: Change reference
	  images after new fix for bug #1326794.

2006-09-10 00:28  pgregory

	* renderer/render/imagepixel.cpp: Fix for bug #1326794. The
	  previous fix clamped opacity at the RI API level. This is not
	  correct, as the surface shaders premultiply by alpha so the
	  opacity had to be as specified to get the right results. However,
	  it is necessary for alpha compositing values to be 0..1, so they
	  are now clamped at the time of combining (compositing) samples.

2006-09-07 22:40  pgregory

	* renderer/render/ri.cpp: Revert change 336. The fix for bug
	  #1326794 introduced a regression on bug #906365. The fix for
	  #1326794 is not to clamp the opacity, further investigation is
	  needed.
	  
	  Comparing the output of Aqsis with other renderers shows that the
	  light pink colour that the centre sphere is mostly coloured is
	  the right colour, we need to determine what is causing the
	  artefacts, I suspect it's something to do with occlusion or
	  colour combining.

2006-09-06 19:59  pgregory

	* testing/regression/reference/detail.tif,
	  testing/regression/reference/funcset6.tif: Update reference
	  images.
	  
	  funcset6.tif - changes due to reimplementation of periodic noise.
	  detail.tif - changes due to correct implementation of distancing
	  calculation after transformation.

2006-09-05 14:00  pgregory

	* renderer/render/curves.cpp: Remove errant debug logging used
	  during previous fix.

2006-09-05 13:29  pgregory

	* renderer/render/curves.cpp, renderer/render/ri.cpp: Fix the
	  regression for Bug1102605. The cubic curves group was being split
	  and posted in the RiCurves
	  call, which was fine before, but now we have the two stage scene
	  setup due to multipass rendering it
	  is no longer a suitable solution. The reason being that the width
	  doesn't get properly transformed
	  when posting to the world.

2006-09-04 08:48  pgregory

	* renderer/render/ri.cpp: Accidentally broke the non-multipass mode
	  when fixing the multipass
	  (autoshadows) mode. It is important when rendering non-multipass
	  that
	  the image is 'setup' as the primitives are all fasttracked into
	  the
	  pipe, and this process needs the bucket information. In multipass
	  mode,
	  this information isn't needed until the RenderWorld call when the
	  cached
	  primitives are entered into the pipeline.

2006-09-01 15:08  pgregory

	* renderer/render/renderer.cpp, renderer/render/renderer.h,
	  renderer/render/ri.cpp: Fix the rendering of autoshadows.
	  
	  There was a problem with the order in which the options were
	  stored
	  and restored, and when the camera transformation was applied.
	  
	  Now the camera transformation is done outside the RenderWorld
	  call
	  as part of the function that is requesting the render. This
	  ensures
	  that the options are pushed before changing the transformation,
	  and
	  popped before restoring it. The reason for this is that the code
	  that
	  sets up the camera needs access to the ScreenWindow etc. options.

2006-09-01 15:05  pgregory

	* platform/default/SConscript: Enable the proper use of debug
	  information when debug=true is specified on the command line.

2006-09-01 15:04  pgregory

	* renderer/render/parameters.h: Fix a minor problem with a specific
	  version of gcc, was getting it's knickers in a twist
	  about the use of Type() in a templatised function. Forcing the
	  use of 'this' seems
	  to solve it.

2006-08-30 12:08  joron

	* displays/display/display.cpp: [ 1546943 ] crash when rendering
	  16bit or floating point tiffs
	  
	  this will handle the "short" pixels for the file display.

2006-08-28 15:44  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRAdapterClasses.py,
	  tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py: This commit
	  is because SVN lost it's mind and mangled versions(Or maybe it's
	  my fault, who knows?)

2006-08-27 19:18  ShortWave

	* tools/BtoR/BtoRMain.py: Update for problems with framebuffer
	  rendering on linux, now allows setting a render property to
	  disable framebuffer.
	  
	  Added Max eyesplits as a render property.

2006-08-26 14:23  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRAdapterClasses.py,
	  tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRTypes.py: Latest update, contains better error
	  checking, and some particular fixes for BMRT (specifically, BMRT
	  seems to want \\ instead of \ in file paths)
	  
	  Other bugs fixed, an a preliminary Log window added.

2006-08-19 19:14  ShortWave

	* tools/BtoR/bml.sl: bml.sl spotlight shader from the blenderman
	  project.

2006-08-19 14:26  ShortWave

	* tools/BtoR/BtoRMain.py: Bug fix for name error when testing for
	  existing of shaders on a given path.

2006-08-19 14:10  ShortWave

	* tools/BtoR/BtoRMain.py: minor update. pops up a dialog if a
	  shader search path is invalid. Useful for troubleshooting shader
	  problems.

2006-08-19 13:56  ShortWave

	* tools/BtoR/BtoRMain.py: Debug update #2

2006-08-19 13:50  ShortWave

	* tools/BtoR/BtoRMain.py: Update for debugging shader path issues

2006-08-19 04:40  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRGUIClasses.py,
	  tools/BtoR/BtoRMain.py: Less crashworthy version, with an
	  exception handler added to the main event loop. Makes it a bit
	  more reslient...
	  
	  FOV fix in place...problem was an extra FrameApsectRatio that had
	  crept in during initial testing and I forgot to take it out.
	  
	  Light shaders don't appear to be load shader parameters
	  correctly. That will be corrected shortly.

2006-08-18 19:58  ShortWave

	* tools/BtoR/BtoRMain.py:

2006-08-18 19:46  ShortWave

	* tools/BtoR/BtoRMain.py: Removed BtoRXML warning on startup. It
	  was needless.

2006-08-18 19:35  ShortWave

	* tools/BtoR/BtoR.py: Updated so blender can autoload the script
	  via the Scripts window "Render" menu.

2006-08-18 19:09  ShortWave

	* tools/BtoR/BtoRMain.py: One more bug fix, with the renderer not
	  picking up the correct render binary

2006-08-18 19:01  ShortWave

	* tools/BtoR/BtoRMain.py: Minor bug fix that halted rendering.

2006-08-18 18:01  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRGUIClasses.py,
	  tools/BtoR/BtoRMain.py: Saving ability restored: Note that you
	  will have to completely replace any saved BtoRXML files.
	  
	  This now completely saves ALL system properties, including AOV
	  settings, render properties, extra options, lighting properties,
	  and occlusion groups.
	  
	  Object and material data remain untouched by any of this.
	  Pre-existing material definition files should load normally.

2006-08-16 18:46  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRGUIClasses.py,
	  tools/BtoR/BtoRMain.py, tools/BtoR/BtoRTypes.py: Lots of minor
	  updates:
	  Changed default values for DOF, and occlusion map generation to
	  be False.
	  
	  Modified render method so when the render button is pushed,
	  shadowmaps are generated and rendered, and then the scene itself
	  is rendered.
	  
	  Modified materials panel to allow material transforms via
	  transform properties in the material panel.
	  (translate/rotation/scale)
	  
	  Various other bug fixes too minor to note.
	  
	  More to follow.

2006-08-15 22:27  ShortWave

	* tools/BtoR/BtoRMain.py: Latest version - this version has a
	  reworked UI, with a new property system.
	  
	  It supports:
	  Arbitrary output variables
	  Extra RiOPtions via the "Extra Options" panel on render settings.
	  "Render Properties" to configure global render settings.
	  Ambient Occlusion light groups - for assigning a given light to a
	  given AO light source, useful for grouping lights with large
	  distances between subjects.
	  
	  Much much *MUCH* more automation.
	  
	  Another commit to follow once I get the save ability restored.
	  

2006-08-15 22:24  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRAdapterClasses.py,
	  tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRSpaceHandler.py, tools/BtoR/BtoRTypes.py: Latest
	  version - this version has a reworked UI, with a new property
	  system.
	  
	  It supports:
	  Arbitrary output variables
	  Extra RiOPtions via the "Extra Options" panel on render settings.
	  "Render Properties" to configure global render settings.
	  Ambient Occlusion light groups - for assigning a given light to a
	  given AO light source, useful for grouping lights with large
	  distances between subjects.
	  
	  Much much *MUCH* more automation.
	  
	  Another commit to follow once I get the save ability restored.
	  

2006-08-10 22:10  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRAdapterClasses.py,
	  tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py:
	  Latest/Greatest

2006-08-08 21:47  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRGUIClasses.py,
	  tools/BtoR/BtoRMain.py: Latest & Greatest.

2006-08-08 13:13  ShortWave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRGUIClasses.py,
	  tools/BtoR/BtoRMain.py: Save/restore currently broken until I fix
	  the property system I just invented.

2006-08-08 11:50  shortwave

	* tools/BtoR/BtoRAdapterClasses.py, tools/BtoR/BtoRGUIClasses.py,
	  tools/BtoR/BtoRMain.py: Added the ability to create arbitrary
	  lists of properties for any object type. Properties now appear in
	  a scrolling list. Property types include normal integer, float,
	  boolean, and string values, as well as colors and menu
	  properties.

2006-08-05 11:33  pgregory

	* content/ribs/scenes/vase/vase.rib: Added a shader searchpath to
	  the content/shaders/* folders.

2006-08-04 23:31  ShortWave

	* tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py: Bug fix for
	  menu selection, and main menu update.

2006-08-04 15:46  pgregory

	* testing/regression/renderers.cfg,
	  testing/regression/rendertester.py: Changed the way renderer and
	  shader compiler commands are specified in
	  the Renderer class. Instead of a single string, which may contain
	  arguments, they are now a string list, first string is the
	  command,
	  subsequent strings the optional arguments. This is because the
	  previous
	  method breaks on Unix systems when the shell=True argument is
	  passed to
	  subprocess.Popen.
	  
	  With the old system, the command line worked out to be...
	  
	  /bin/sh -c ""aqsis --nocolor" test.rib"
	  
	  which failed because "aqsis --nocolor" doesn't exist.
	  
	  Also, modified the way the command is passed to Popen, as on Unix
	  systems, if the 'args' property is a list, the first value is the
	  command line (in it's entirety), and subsequent values are
	  arguments to
	  the shell, not to Aqsis. i.e.
	  
	  subprocess.Popen(["aqsis", "test.rib"]...)
	  
	  results in
	  
	  /bin/sh -c aqsis test.rib
	  
	  where test.rib goes to the shell not Aqsis, and thus Aqsis sits
	  there
	  waiting for stdin input. The way to fix this is to use
	  subprocess.list2cmdline to combine the array of args into one
	  before
	  calling Popen.

2006-08-04 13:11  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRAdapterClasses.py,
	  tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRSpaceHandler.py, tools/BtoR/BtoRTypes.py: Latest
	  update, still a bit rocky

2006-07-19 18:07  joron

	* testing/regression/RIBs/Bugs/Bug1063660/Bug1063660.rib,
	  testing/regression/RIBs/Bugs/Bug1063660/jobs.cfg: fix the
	  dependencies between the lightsource and the rib files.
	  fix the searchpath directive for the shaders.

2006-07-19 17:23  joron

	* testing/regression/reference/bug946045.tif,
	  testing/regression/reference/lincurve_test1.tif,
	  testing/regression/reference/lincurve_test2.tif,
	  testing/regression/reference/pnts_var_params.tif: add missing
	  reference files.

2006-07-18 10:24  joron

	* renderer/render/ri_cache.h: One less warning...
	  ri_cache.h:82: warning: deleting `void*' is undefined
	  I took what was done in the line of 79 which was not complaining

2006-07-18 01:27  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRAdapterClasses.py,
	  tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRSpaceHandler.py, tools/BtoR/BtoRTypes.py:

2006-07-17 20:26  joron

	* renderer/render/quadrics.cpp: One less warning eg. make sure the
	  prototype of the EstimateGridsize() agrees with its usage.

2006-07-17 14:21  joron

	* testing/regression/RIBs/Camera/jobs.cfg: Put only the new test
	  0mm.rib

2006-07-17 12:00  joron

	* testing/regression/reference/0mm.tif: reference for 0mm.rib.

2006-07-17 11:58  joron

	* testing/regression/RIBs/Camera/0mm.rib,
	  testing/regression/RIBs/Camera/cameras/Camera.002-0000.rib: This
	  is the same as 25mm.rib but without and Depth of field directive.

2006-07-15 15:32  joron

	* renderer/render/points.h: Remove warning for:
	  `class Aqsis::CqMovingMicroPolygonKeyPoints' has virtual
	  functions but non-virtual destructor

2006-07-14 15:35  joron

	* testing/regression/RIBs/Flower/GSHdisplacementtest.rib: minor
	  thing; make sure the truedisplacement was declared first.

2006-07-14 15:16  joron

	* testing/regression/RIBs/Flower/GSHdisplacementtest.rib,
	  testing/regression/reference/GSHdisplacementtest.tif: Maximize
	  the details so this test could really show up the best of the
	  displacement shader

2006-07-14 14:27  joron

	* renderer/render/ishaderexecenv.h: Small changes; to remove one
	  assignment and only divide the result.

2006-07-14 13:09  joron

	* testing/regression/reference/GSHdisplacementtest.tif: refresh the
	  reference file

2006-07-14 12:57  joron

	* testing/regression/RIBs/Flower/GSHdisplacementtest.rib: add the
	  truedisplacement to let bmrt, air happy

2006-07-14 12:39  joron

	* testing/regression/RIBs/Camera/jobs.cfg,
	  testing/regression/RIBs/Flower/GSHsinedisp.sl,
	  testing/regression/RIBs/Flower/jobs.cfg,
	  testing/regression/RIBs/Procedurals/constanttex.sl: Change
	  slightly the jobs.cfg to reflect the source and the permision for
	  these new tests.

2006-07-14 11:35  joron

	* testing/regression/RIBs/Flower/GSHdisplacementtest.rib: Add a
	  inline declaration

2006-07-14 11:31  joron

	* testing/regression/reference/GSHdisplacementtest.tif: this is to
	  check-in the reference file.

2006-07-14 11:31  joron

	* testing/regression/RIBs/Flower,
	  testing/regression/RIBs/Flower/GSHdisplacementtest.rib,
	  testing/regression/RIBs/Flower/GSHglowoutline.sl,
	  testing/regression/RIBs/Flower/GSHsinedisp.sl,
	  testing/regression/RIBs/Flower/jobs.cfg: This test is to
	  illustrate large displacement shader

2006-07-14 11:26  joron

	* testing/regression/RIBs/Camera,
	  testing/regression/RIBs/Camera/250mm.rib,
	  testing/regression/RIBs/Camera/25mm.rib,
	  testing/regression/RIBs/Camera/cameras,
	  testing/regression/RIBs/Camera/cameras/Camera-0000.rib,
	  testing/regression/RIBs/Camera/cameras/Camera.001-0000.rib,
	  testing/regression/RIBs/Camera/jobs.cfg,
	  testing/regression/RIBs/Camera/lamps,
	  testing/regression/RIBs/Camera/lamps/Lamp-0000.rib,
	  testing/regression/RIBs/Camera/lamps/Lamp.001-0000.rib,
	  testing/regression/RIBs/Camera/objects,
	  testing/regression/RIBs/Camera/objects/Cube-0000.rib,
	  testing/regression/RIBs/Camera/objects/Plane-0000.rib,
	  testing/regression/RIBs/Camera/wcscenes,
	  testing/regression/RIBs/Camera/wcscenes/Scene-0000_SceneBeauty.rib:
	  add the two examples

2006-07-14 11:21  joron

	* testing/regression/reference/250mm.tif,
	  testing/regression/reference/25mm.tif: Add the result for both
	  250mm.rib, 25mm.rib

2006-07-13 14:19  joron

	* renderer/render/ishaderexecenv.h: Slight changes a division by
	  1.0 is a bit overkill.

2006-07-13 13:43  joron

	* renderer/render/ishaderexecenv.h: Fix another warning... but this
	  is one is subtile;
	  Here Retu and Retv could be used without being initialized first.
	  when either val1 == val2 and/or u2 == u1 (v2 == v1).
	  So to circumvent the problem I set Retu and Retv to val1-val2
	  and modify if statement since val1==val2 is taken care I only
	  check if
	  u1==u2 and/or v2==v2 (not not divide by zero)

2006-07-12 13:17  joron

	* testing/regression/RIBs/Shading/spline_basis.sl: This shader is
	  to test the basis directive of spline shadeops... I change
	  the array definition of colors so all the renderers could display
	  their best
	  picture.

2006-07-11 14:51  joron

	* testing/regression/RIBs/Scenes/test_.rib,
	  testing/regression/reference/test_.tif: add a reference file for
	  the new test. and make sure the test_.rib produces test_.tif

2006-07-11 13:28  joron

	* renderer/render/imagebuffer.cpp: Remove a warning again... the
	  compiler could not determine the variable could be set in all the
	  case; I init to a NULL knowning it will be set later anyway.

2006-07-11 02:55  joron

	* displays/d_sdcBMP/d_sdcBMP.cpp, renderer/render/texturemap.cpp:
	  Remove more warnings.

2006-07-11 02:51  joron

	* renderer/aqsis/aqsis.cpp: This is allowing aqsis to support
	  change of priority from the CLI.

2006-07-11 02:50  joron

	* renderer/render/libaqsis.def: somehow the signature of both
	  m_maxsamples, m_samples influences the export variable from
	  libaqsis.dll. I need to turn off their export directives.

2006-07-11 00:53  joron

	* renderer/render/ri.cpp: Trivial warning; remove an unused
	  variable.

2006-07-11 00:25  joron

	* testing/regression/RIBs/Scenes/jobs.cfg,
	  testing/regression/RIBs/Scenes/test_.rib: Make sure this is part
	  of the regression test suite.

2006-07-11 00:06  joron

	* renderer/render/attributes.h, renderer/render/blobby.cpp,
	  renderer/render/parameters.h, renderer/render/ri.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/symbols.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h: This is to fix some
	  warnings; most of them are really harmless; the order of the
	  parameters for the constructor, unused variables. One was
	  potentially dangerous variables could be used without initialized
	  (subdivision2.h).
	  Some were so-so blobbly.cpp not all the switch/cases where
	  handled;they could not but the compiler could not know that.

2006-07-10 17:11  joron

	* displays/d_sdcWin32/d_sdcWin32.cpp: make sure the window class is
	  registered even under mingw environment.

2006-07-10 14:01  joron

	* displays/d_sdcWin32/SConscript: this is removing the .lib
	  extension so mingw should be in principle able to link properly.

2006-07-10 11:37  minty

	* displays/d_sdcWin32/interface.c: Fix type mismatch, nsdpy.h is a
	  standard interface, TODO
	  investigate if other renderers use size_t or int.

2006-07-07 15:18  mbaas

	* content/ribs/features/occlusion/occlmap.py: Modified the script
	  so that it either works with cgkit1 or cgkit2

2006-07-07 13:13  joron

	* testing/regression/RIBs/Bugs/Bug1266044/Bug1266044.rib,
	  testing/regression/RIBs/Bugs/Bug1496341/Bug1496341.rib: Edit
	  slightly the both rib files (remove stupid mistakes)

2006-07-07 13:12  joron

	* testing/regression/reference/Bug1266044.tif,
	  testing/regression/reference/Bug1326794.tif,
	  testing/regression/reference/Bug1496341.tif: Add the reference
	  tif files for the new regression tests

2006-07-07 13:06  joron

	* testing/regression/RIBs/Bugs/Bug1266044/Bug1266044.rib,
	  testing/regression/RIBs/Bugs/Bug1326794/Bug1326794.rib,
	  testing/regression/RIBs/Bugs/Bug1496341/Bug1496341.rib: make sure
	  the rendering is saved into a tiff file.

2006-07-07 11:17  joron

	* testing/regression/RIBs/Bugs/Bug1266044,
	  testing/regression/RIBs/Bugs/Bug1266044/Bug1266044.rib,
	  testing/regression/RIBs/Bugs/Bug1266044/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1326794,
	  testing/regression/RIBs/Bugs/Bug1326794/Bug1326794.rib,
	  testing/regression/RIBs/Bugs/Bug1326794/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1496341,
	  testing/regression/RIBs/Bugs/Bug1496341/Bug1496341.rib,
	  testing/regression/RIBs/Bugs/Bug1496341/jobs.cfg: Add finally the
	  Regression ribs files since three bugs were closed recently.

2006-07-07 02:25  joron

	* thirdparty/maketextures, thirdparty/maketextures/SConscript,
	  thirdparty/maketextures/maketextures.c: This is a very small
	  utility (even silly) which looks into the current
	  directory and output a rib file in order to create mipmap files
	  for aqsis. Using
	  MakeTexture ....
	  You could use the compression as you like if you do the following
	  
	  maketextures "string compression" "packbits" will
	  output something like:
	  
	  MakeTexture "vase.tif" "vase.tx" "periodic" "periodic" "box" 1.0
	  1.0 "string compression" "packbits"

2006-07-07 00:27  joron

	* SConstruct: Add a conditional directive which determines if pdiff
	  is found into the path... and if not it will create pdiff into
	  output/bin. otherwise it doesn't nothing... later the regression
	  suite could be done since pdiff is found (same path as aqsis).

2006-07-07 00:13  joron

	* thirdparty/pdiff, thirdparty/pdiff/CMakeLists.txt,
	  thirdparty/pdiff/CompareArgs.cpp, thirdparty/pdiff/CompareArgs.h,
	  thirdparty/pdiff/LPyramid.cpp, thirdparty/pdiff/LPyramid.h,
	  thirdparty/pdiff/Metric.cpp, thirdparty/pdiff/Metric.h,
	  thirdparty/pdiff/PerceptualDiff.cpp, thirdparty/pdiff/README.txt,
	  thirdparty/pdiff/RGBAImage.cpp, thirdparty/pdiff/RGBAImage.h,
	  thirdparty/pdiff/SConscript, thirdparty/pdiff/gpl.txt: This is
	  checkin here in case of the user doesn't have pdiff already
	  compiled/linked... Since aqsis regression tests required pdiff...
	  
	  I think I could find a way to set scons to determine to recompile
	  this only pdiff is not found in the path/environment.

2006-07-07 00:10  joron

	* displays/d_exr/d_exr.cpp: Adjust the comment. Lack of good
	  example in openexr took me a longer time than expected to find
	  the cause.

2006-07-06 23:32  joron

	* SConstruct, displays/d_sdcWin32, displays/d_sdcWin32/ReadMe.txt,
	  displays/d_sdcWin32/SConscript,
	  displays/d_sdcWin32/d_sdcWin32.cpp,
	  displays/d_sdcWin32/d_sdcWin32.h,
	  displays/d_sdcWin32/interface.c: add a win32 framebuffer but only
	  for win32 platform.

2006-07-06 23:16  joron

	* displays/d_exr/d_exr.cpp: Add to the header the current
	  Chromaticities
	  It will give the same output as 3delight, pixie.

2006-07-06 00:02  pgregory

	* shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll: Fix a problem with scope
	  hiding. When I changed the parser to introduce a new scope within
	  a block ('{'...'}') as per the spec., variables defined outside
	  the block, but still within the current function were no longer
	  visible. Now, all variable checks scan up the scope stack until
	  they hit a terminal scope, i.e. one introduced by a function
	  definition.
	  
	  This is only a temporary fix, the correct solution is to
	  introduce a proper nested symbol table, which is a much bigger
	  job.

2006-07-05 19:54  joron

	* shadercompiler/shadervm/shadervm2.cpp: Fixed a memory leak when
	  we use the dsoshadeops.

2006-07-05 16:09  ltatkinson

	* content/ribs/features/occlusion/render.bat: BAT file updated to
	  support occlusion map generation for the 'envlight' example.

2006-07-05 13:44  joron

	* texturing/teqser/teqser.cpp: add to the help message we support
	  the mitchell filter.

2006-07-05 11:26  joron

	* shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp: This is to make sure the
	  pool of shadervariables will work better. it was leaking memory
	  when uniform string were allocated but never Release for
	  filterstep, texture in general.

2006-07-04 20:48  pgregory

	* content, content/ribs, content/ribs/features,
	  content/ribs/features/aov, content/ribs/features/blobby,
	  content/ribs/features/blobby/air,
	  content/ribs/features/blobby/prman,
	  content/ribs/features/blobby/pseudonym,
	  content/ribs/features/blobby/shortwave,
	  content/ribs/features/deformation_mb,
	  content/ribs/features/layeredshaders,
	  content/ribs/features/occlusion,
	  content/ribs/features/subdivision, content/ribs/scenes,
	  content/ribs/scenes/microbe, content/ribs/scenes/vase,
	  content/shaders, content/shaders/displacement,
	  content/shaders/imager, content/shaders/light,
	  content/shaders/surface, renderer/render/renderer.cpp,
	  renderer/render/ri.cpp: Add some meaningful error messages when
	  AOV variables aren't properly declared.

2006-07-01 14:40  pgregory

	* rib/ri2rib/plstore.h: Fix a problem reported by Randolf Schultz
	  (Ayam3D), ri2rib wasn't handling empty parameter lists properly.

2006-07-01 14:33  pgregory

	* ., SConstruct, platform/win32, platform/win32/Options.py,
	  renderer/render, shadercompiler/slparse,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slparse/parser.yy, testing/regression,
	  texturing/plugins/tga2tif: Switch on debugging output in the
	  debug build of slparse. Helps to track down parsing problems.
	  
	  Implement scoping for blocks, so that variables can be
	  re-declared in if/for blocks.
	  
	  Introduce some changes to the Win32 SCons files to allow the
	  upgrade of bison to 2.1 from 1.35 (1.35 crashed with inline
	  actions).

2006-06-30 23:23  c42f

	* shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp: (trivial change)
	  removed svn:executable property flags from new shadeop files.

2006-06-30 03:14  joron

	* renderer/render/procedural.cpp: Fix a spelling error... it is
	  "procedural" instead of "procedure".

2006-06-28 23:58  pgregory

	* renderer/render/renderer.cpp, renderer/render/ri.cpp: Move the
	  preparation of trimcurve now that the transformation of the
	  primitives is different (related to the implementation of
	  multipass rendering). It is important that the trimcurve is only
	  prepped when the object has been transformed into camera space.

2006-06-28 23:25  joron

	* shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shadeops1.cpp,
	  shadercompiler/shaderexecenv/shadeops2.cpp,
	  shadercompiler/shaderexecenv/shadeops3.cpp,
	  shadercompiler/shaderexecenv/shadeops4.cpp,
	  shadercompiler/shaderexecenv/shadeops5.cpp,
	  shadercompiler/shaderexecenv/shadeops6.cpp,
	  shadercompiler/shaderexecenv/shadeops7.cpp,
	  shadercompiler/shaderexecenv/shadeops8.cpp,
	  shadercompiler/shaderexecenv/shadeops_comp.cpp,
	  shadercompiler/shaderexecenv/shadeops_deriv.cpp,
	  shadercompiler/shaderexecenv/shadeops_illum.cpp,
	  shadercompiler/shaderexecenv/shadeops_inter.cpp,
	  shadercompiler/shaderexecenv/shadeops_math.cpp,
	  shadercompiler/shaderexecenv/shadeops_matrx.cpp,
	  shadercompiler/shaderexecenv/shadeops_rand.cpp,
	  shadercompiler/shaderexecenv/shadeops_text.cpp,
	  shadercompiler/shaderexecenv/shadeops_tmap.cpp: This is to move
	  the files shadeops.cpp, shadeops1.cpp,... to
	  better filename.

2006-06-28 11:36  joron

	* renderer/render/filters.cpp, renderer/render/renderer.cpp,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shadeops1.cpp,
	  shadercompiler/shaderexecenv/shadeops2.cpp,
	  shadercompiler/shaderexecenv/shadeops3.cpp,
	  shadercompiler/shaderexecenv/shadeops4.cpp,
	  shadercompiler/shaderexecenv/shadeops5.cpp,
	  shadercompiler/shaderexecenv/shadeops6.cpp,
	  shadercompiler/shaderexecenv/shadeops7.cpp,
	  shadercompiler/shaderexecenv/shadeops8.cpp: This is splitting
	  shadeops.cpp into multiple parts.
	  shadeops.cpp (Lights related)
	  shadeops1.cpp (Math related)
	  shadeops2.cpp (Antialias related)
	  shadeops3.cpp (Noise, random related)
	  shadeops4.cpp (Color, vector componets related)
	  shadeops5.cpp (Matrix, transform related)
	  shadeops6.cpp (Texture, shadow, env, bake, occlusion related)
	  shadeops7.cpp (printf, SO_external related)
	  shadeops8.cpp (interrogation like surface(), atmosphere(), ...
	  related)
	  
	  renderer.cpp is to protect agians null pointers
	  flters.cpp is to init the mitchell with 1/3, 1/3 as pbrt.

2006-06-27 11:46  joron

	* renderer/aqsis/aqsis.cpp: Revert the change to append the
	  framebuffer; now it is replacing altogether the directive as
	  before.

2006-06-26 22:00  pgregory

	* renderer/render/inlineparse.cpp, renderer/render/ishaderdata.h,
	  renderer/render/isurface.h, renderer/render/parameters.cpp,
	  renderer/render/parameters.h, renderer/render/polygon.cpp,
	  renderer/render/renderer.cpp, renderer/render/ri.cpp,
	  renderer/render/subdivision2.cpp, renderer/render/surface.cpp,
	  renderer/render/surface.h: Implement the type "facevertex", like
	  "facevarying" only uses natural subdivision to dice. This should
	  match 3Delight in functionality. Now "facevarying" uses linear
	  interpolation, as "varying" does. Only applies to polygon and
	  subdivision types.

2006-06-26 02:57  ShortWave

	* tools/BtoR/BtoRGUIClasses.py, tools/BtoR/BtoRMain.py,
	  tools/BtoR/BtoRSpaceHandler.py: This update includes minor GUI
	  updates, a BtoR spacehandler script to pass object selections
	  back to BtoR, and the BtoRMain.py script, the central part of
	  BtoR.
	  
	  This contains the working material editor, with save/restore &
	  preview ability.
	  
	  The material editor preview probably has a few scale issues, so
	  that needs to be reworked. I'm probably going to export something
	  from Rhino that's to a more appropriate scale for blender.
	  
	  Note that exception handling for problematic shaders remains to
	  be added before this is considered stable.

2006-06-25 16:41  Anteru

	* renderer/render/parameters.h: * added typedefs for canonical
	  parameter types

2006-06-21 12:17  ShortWave

	* tools/BtoR/BtoRGUIClasses.py: BtoR GUI lib update

2006-06-21 10:43  joron

	* renderer/render/ri.cpp: [ 1326794 ] Opacity values >1 may lead to
	  rendering artifacts

2006-06-20 22:48  pgregory

	* SConstruct: Disable the bundle target.

2006-06-20 21:21  pgregory

	* SConstruct, platform/darwin/SConscript,
	  platform/darwin/bundle_tool.py: Alter the basic way Options are
	  stored in the graphics state.
	  This refactor means it is possible to store a reference
	  (CqOptionsPtr) to
	  the current options state and know that any future modifications
	  will not
	  affect the stored version, much the same as Attributes work.

2006-06-20 19:09  joron

	* renderer/render/imagers.cpp, renderer/render/ishader.h,
	  renderer/render/lights.cpp, renderer/render/shaders.cpp,
	  renderer/render/shaders.h, shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: [ 1496341 ] Parameters not
	  passed to Imager shaders; in fact the shaders did not know what
	  type they were. So I set the type of shader (for Imager and
	  Lightsource) and change shadervm to initialise accordingly.
	  

2006-06-20 17:08  joron

	* shadercompiler/shadervm/shadervm.cpp: [ 1496341 ] Parameters not
	  passed to Imager shaders

2006-06-20 15:33  joron

	* renderer/render/ri.cpp: Just test when right == left and/or
	  top==bottom

2006-06-20 10:57  joron

	* renderer/render/ri.cpp: [1266044] I consider illegal the test
	  cases where bottom >= top and/or
	  left >= right.

2006-06-20 08:19  pgregory

	* aqsistypes/sstring.cpp, aqsistypes/sstring.h,
	  renderer/render/attributes.cpp, renderer/render/attributes.h,
	  renderer/render/blobby.cpp, renderer/render/curves.cpp,
	  renderer/render/nurbs.cpp, renderer/render/options.h,
	  renderer/render/parameters.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/polygon.cpp,
	  renderer/render/quadrics.cpp, renderer/render/ri.cpp,
	  renderer/render/subdivision2.cpp, renderer/render/surface.cpp,
	  renderer/render/surface.h, shadercompiler/shadervm/shadervm.cpp:
	  Rollback change #320, the changes implemented as part of the
	  parameter lookup optimisation may rely on compiler behaviour,
	  this needs more investigation. I suggest opening a 'proposal'
	  page in the Wiki for discussion.

2006-06-19 23:03  joron

	* renderer/render/ri.cpp: [ 1266044 ] Wrong CropWindow values -
	  crash
	  
	  I will just make sure the parameters provided to RiCropWindow();
	  left and right must be different same for bottom and top.

2006-06-19 15:08  ShortWave

	* tools/BtoR/BtoRGUIClasses.py, tools/BtoR/README.GUI,
	  tools/BtoR/UITest.py: Latest version of BtoRGUIClasses.py, many
	  bugs fixed. This is considered a beta version of the lib, have
	  fun with it.

2006-06-19 13:58  mbaas

	* testing/regression/reference/bug1497559.tif,
	  testing/regression/reference/spline_basis.tif: Added reference
	  images for the new tests. I left out the one for bug 1502753
	  (pnts_var_params.rib) as this image is still affected by another
	  bug (the 'width' parameters aren't taken into account). The disks
	  should only have half the radius as they have now. I'll add the
	  reference image once the bug is fixed.

2006-06-19 13:55  mbaas

	* testing/regression/RIBs/Bugs/Bug1497559,
	  testing/regression/RIBs/Bugs/Bug1497559/array.sl,
	  testing/regression/RIBs/Bugs/Bug1497559/bug1497559.rib,
	  testing/regression/RIBs/Bugs/Bug1497559/jobs.cfg,
	  testing/regression/RIBs/Points/jobs.cfg,
	  testing/regression/RIBs/Points/pnts_var_params.rib,
	  testing/regression/RIBs/Points/pnts_var_params.sl,
	  testing/regression/RIBs/Shading/jobs.cfg,
	  testing/regression/RIBs/Shading/spline_basis.rib,
	  testing/regression/RIBs/Shading/spline_basis.sl: Added a test for
	  bug 1497559, bug 1310740 (as Points/pnts_var_params.rib) and bug
	  1502753 (as Shading/spline_basis.rib)

2006-06-18 21:57  pgregory

	* shadercompiler/slparse/parser.yy: Provide additional fix for bug
	  #1502751 by not allowing invalid array initialisers to compile.

2006-06-18 21:23  pgregory

	* shadercompiler/shadervm/shadervm.cpp: Fix bug #1497559, array
	  shader variables need to be copied element by element.

2006-06-17 06:08  mbaas

	* testing/regression/rendertester.py: Tests that didn't create any
	  output at all (because of a crash or assertion failure) were
	  reported as having passed.

2006-06-16 09:04  pgregory

	* renderer/render/micropolygon.h, renderer/render/parameters.h:
	  When setting the 'index' of a micropolygon, it actually refers to
	  the shading point that represents the MP, so the assert has to be
	  against the number of shading points, not the number of
	  micropolygons.
	  
	  Remove an invalid assert in the parameters, the size of the value
	  doesn't have to match the size of the variable, as it is going to
	  be diced to fit.

2006-06-16 00:59  joron

	* aqsistypes/sstring.cpp, aqsistypes/sstring.h,
	  renderer/render/attributes.cpp, renderer/render/attributes.h,
	  renderer/render/blobby.cpp, renderer/render/curves.cpp,
	  renderer/render/nurbs.cpp, renderer/render/options.h,
	  renderer/render/parameters.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/polygon.cpp,
	  renderer/render/quadrics.cpp, renderer/render/ri.cpp,
	  renderer/render/subdivision2.cpp, renderer/render/surface.cpp,
	  renderer/render/surface.h, shadercompiler/shadervm/shadervm.cpp:
	  I speed up the creation of any parameters within aqsis.
	  Parameters are a key elements. Each attributes, options and
	  parameters attached to any primitives are found easier and faster
	  and using less memory.
	  
	  I choose the following when we are looking for a parameter we are
	  really interessed if two parameters's name match. Eg. you loop
	  into all the variable to match to a certain parameters names like
	  "st". I used to compared only adress of string and kept track of
	  each strings (for a parameter) into a local table of strings with
	  paramaters.cpp.
	  
	  A lot of code was changed because instead of saving a m_strName
	  as CqString I used a simple char * where ultimely pointed as
	  mentionned earlier to a table of strings. The table of strings
	  (class) are defined with sstring.cpp, sstring.h. We could use as
	  many table of strings as required but remember the table are
	  meant to be found an equal string it is no way a relational
	  database. You do a CqStringTable::Get() to get a new string,
	  ::Dump to print to the console, ::Wipe() to delete the strings
	  entries.

2006-06-15 08:07  pgregory

	* renderer/render/micropolygon.h, renderer/render/points.cpp,
	  renderer/render/points.h, shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: Fix some more issues with the
	  difference between micropolygons/grids used in 'normal'
	  primitives, and points. CacheHitTestValues is not valid for
	  points micropolygons so override with emtpy functions. Assigning
	  primitive variables to shader varaibles is also different, for
	  points they are copied verbatim, one value per micropolygon, for
	  other primitive types they need to be diced according to the type
	  of primitive.

2006-06-15 07:50  mbaas

	* renderer/render/parameters.h: Removed an assertion that doesn't
	  belong into the method CopyToShaderVariable()

2006-06-15 07:19  pgregory

	* renderer/render/ri.cpp: Added another code review tag

2006-06-14 14:39  ltatkinson

	* AUTHORS, aqsistypes/aqerror.h, aqsistypes/aqsis.h,
	  aqsistypes/aqsis_types.h, aqsistypes/bitvector.cpp,
	  aqsistypes/bitvector.h, aqsistypes/cellnoise.cpp,
	  aqsistypes/cellnoise.h, aqsistypes/color.cpp, aqsistypes/color.h,
	  aqsistypes/exception.h, aqsistypes/file.cpp, aqsistypes/file.h,
	  aqsistypes/list.h, aqsistypes/lowdiscrep.cpp,
	  aqsistypes/lowdiscrep.h, aqsistypes/matrix.cpp,
	  aqsistypes/matrix.h, aqsistypes/noise.cpp, aqsistypes/noise.h,
	  aqsistypes/plugins.cpp, aqsistypes/plugins.h, aqsistypes/pool.h,
	  aqsistypes/posix/aqsis_compiler.h,
	  aqsistypes/posix/file_system.cpp, aqsistypes/random.cpp,
	  aqsistypes/random.h, aqsistypes/refcount.cpp,
	  aqsistypes/spline.cpp, aqsistypes/spline.h,
	  aqsistypes/sstring.cpp, aqsistypes/sstring.h,
	  aqsistypes/validate.h, aqsistypes/vector2d.cpp,
	  aqsistypes/vector2d.h, aqsistypes/vector3d.cpp,
	  aqsistypes/vector3d.h, aqsistypes/vector4d.cpp,
	  aqsistypes/vector4d.h, aqsistypes/win32/aqsis_compiler.h,
	  aqsistypes/win32/file_system.cpp,
	  content/shaders/imager/filmgrain.sl,
	  displays/display/display.cpp, displays/display/display.h,
	  displays/display/displayhelpers.c, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/ddmanager/ndspy.h, renderer/raytrace/raytrace.cpp,
	  renderer/render/attributes.cpp, renderer/render/attributes.h,
	  renderer/render/bilinear.h, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/bound.cpp,
	  renderer/render/bound.h, renderer/render/bucket.cpp,
	  renderer/render/bucket.h, renderer/render/bunny.cpp,
	  renderer/render/bunny.h, renderer/render/clippingvolume.h,
	  renderer/render/condition.cpp, renderer/render/condition.h,
	  renderer/render/converter.cpp, renderer/render/converter.h,
	  renderer/render/csgtree.cpp, renderer/render/csgtree.h,
	  renderer/render/curves.cpp, renderer/render/curves.h,
	  renderer/render/environment.cpp, renderer/render/filters.cpp,
	  renderer/render/focus.h, renderer/render/forwarddiff.h,
	  renderer/render/genpoly.cpp, renderer/render/genpoly.h,
	  renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/iddmanager.h,
	  renderer/render/idsoshadeops.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/imagers.cpp,
	  renderer/render/imagers.h, renderer/render/inlineparse.cpp,
	  renderer/render/inlineparse.h, renderer/render/ioptions.h,
	  renderer/render/ishaderexecenv.h, renderer/render/kdtree.h,
	  renderer/render/lath.cpp, renderer/render/lath.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/lookuptable.h, renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/motion.h, renderer/render/mpdump.cpp,
	  renderer/render/mpdump.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/objectinstance.h,
	  renderer/render/occlusion.cpp, renderer/render/occlusion.h,
	  renderer/render/options.cpp, renderer/render/options.h,
	  renderer/render/parameters.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/plane.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.cpp,
	  renderer/render/procedural.h, renderer/render/quadrics.cpp,
	  renderer/render/quadrics.h, renderer/render/render.cpp,
	  renderer/render/render.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/ri_cache.h, renderer/render/rifile.h,
	  renderer/render/shadeop.h, renderer/render/shaders.cpp,
	  renderer/render/shaders.h, renderer/render/shadowmap.cpp,
	  renderer/render/stats.cpp, renderer/render/stats.h,
	  renderer/render/subdivision2.cpp, renderer/render/subdivision2.h,
	  renderer/render/surface.cpp, renderer/render/surface.h,
	  renderer/render/symbols.cpp, renderer/render/symbols.h,
	  renderer/render/teapot.cpp, renderer/render/teapot.h,
	  renderer/render/texturemap.cpp, renderer/render/texturemap.h,
	  renderer/render/transform.cpp, renderer/render/transform.h,
	  rib/miqser/miqser.cpp, rib/ri2rib/ascii.cpp, rib/ri2rib/ascii.h,
	  rib/ri2rib/binary.cpp, rib/ri2rib/binary.h,
	  rib/ri2rib/context.cpp, rib/ri2rib/context.h,
	  rib/ri2rib/dictionary.cpp, rib/ri2rib/dictionary.h,
	  rib/ri2rib/error.cpp, rib/ri2rib/error.h,
	  rib/ri2rib/inlineparse.cpp, rib/ri2rib/inlineparse.h,
	  rib/ri2rib/options.h, rib/ri2rib/output.cpp, rib/ri2rib/output.h,
	  rib/ri2rib/outstream.cpp, rib/ri2rib/outstream.h,
	  rib/ri2rib/plstore.cpp, rib/ri2rib/plstore.h, rib/rib2/bdec.cpp,
	  rib/rib2/bdec.h, rib/rib2/librib.cpp, rib/rib2/libribtypes.h,
	  shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/dsoshadeops.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/icodegen.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/libslparse.h,
	  shadercompiler/slxargs/rcdummy.cpp,
	  shadercompiler/slxargs/slx.cpp, shadercompiler/slxargs/slx.h,
	  texturing/plugins/bake2tif/bake2tif.c,
	  texturing/plugins/bmp2tif/bmp2tif.c,
	  texturing/plugins/exr2tif/exr2tif.cpp,
	  texturing/plugins/gif2tif/gif2tif.c,
	  texturing/plugins/jpg2tif/jpg2tif.c,
	  texturing/plugins/pcx2tif/pcx2tif.c,
	  texturing/plugins/png2tif/png2tif.c,
	  texturing/plugins/ppm2tif/ppm2tif.c,
	  texturing/plugins/tga2tif/tga2tif.c, thirdparty/aqiv/iv.c,
	  thirdparty/aqiv/sgigt.h, version.h.in: Updated all (old)
	  references of 'pgregory@aqsis.com' to 'pgregory@aqsis.org' within
	  the source code.

2006-06-14 08:42  pgregory

	* aqsistypes/aqerror.h: Change review tags, brackets caused HTML
	  problems.

2006-06-14 08:33  pgregory

	* aqsistypes/aqerror.h: Checking the addition of code review tags
	  at various levels.

2006-06-11 13:11  joron

	* renderer/render/renderer.cpp, renderer/render/symbols.h: Make
	  aqsis faster... each we are looking for a parameter we take a
	  hash key from the string to look for... then it is a good idea to
	  save it for later. so we don't need to do the hash() call in
	  subsequent search/find.

2006-06-10 13:07  joron

	* renderer/aqsis/aqsis.cpp: if the user want to use -d option with
	  aqsis then instead of replacing the display it will append the
	  framebuffer... therefore it is easier to use aqsis for testing
	  purpose.

2006-06-10 13:05  joron

	* aqsistypes/spline.cpp, shadercompiler/shaderexecenv/shadeops.cpp:
	  this set the spline constructor to be consistant with the spec of
	  renderman to
	  be catmull-rom,
	  this will speedup the spline() with arrays which are uniform.

2006-06-10 12:06  pgregory

	* renderer/render/ilightsource.h, renderer/render/imagers.cpp,
	  renderer/render/imagers.h, renderer/render/ishader.h,
	  renderer/render/ishaderdata.h, renderer/render/ishaderexecenv.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/parameters.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/shaders.h,
	  renderer/render/subdivision2.cpp, renderer/render/surface.cpp,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp: Change the way micropoly
	  grids are constructed and shaded.
	  There is a difference between the data represented by a grid
	  that comes from a 'normal' primitive, and from a RiPoints
	  primitive.
	  In a normal grid, there are nxm polys and (n+1)x(m+1) shading
	  points
	  to allow for interpolation across the grid, for points, there are
	  nxm polys and shading points. Now the construction code, which
	  is common between the normal grid and the points grid, requests
	  the number of shading points and the number of polys from the
	  class
	  itself before constructing the shaderexecenv, thus the points
	  grid
	  can report a different value.
	  
	  Fix the handling of varying values on points primitives, the
	  values are
	  copied directly to the shadervariable, without dicing, whereas
	  normally
	  the values are diced into the grid structure.
	  
	  Fixes bug [1310740]

2006-06-09 01:18  joron

	* shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/shadervm/shadervm1.cpp: [ 1502751 ] Invalid array
	  size crashes aqsis
	  just make sure we don't write outside of the boundaries of an
	  array.
	  [ 1502753 ] Incorrect spline() output
	  just make sure against NULL pointers.

2006-06-08 01:58  joron

	* renderer/render/bunny.cpp: I use now subdivision mesh instead of
	  polygons to draw the bunny geometry.
	  I used k3d to convert to sds and using the result I merged back
	  to the proper place.
	  
	  I add a scene using the new geometry "bunny" under testings;
	  bunny.rib.
	  
	  I also provide the equivalent sds under the same directory.

2006-06-07 21:40  joron

	* renderer/render/bucket.cpp, renderer/render/bunny.h,
	  renderer/render/ri.cpp, testing/regression/RIBs/Scenes/bunny.rib,
	  testing/regression/RIBs/Scenes/sdsbunny.rib: I use now
	  subdivision mesh instead of polygons to draw the bunny geometry.
	  I used k3d to convert to sds and using the result I merged back
	  to the proper place.
	  
	  I add a scene using the new geometry "bunny" under testings;
	  bunny.rib.
	  
	  I also provide the equivalent sds under the same directory.

2006-06-06 22:37  joron

	* renderer/render/SConscript, renderer/render/bunny.cpp,
	  renderer/render/bunny.h, renderer/render/ri.cpp,
	  testing/regression/RIBs/Primitives/simplebunny.rib: Add support
	  for RiGeometry "bunny"; it is done for now with RiPointsPolygon()
	  for the first version.
	  
	  It will be more elegant to load the bunny.obj from stanford site
	  to a modeller which is capable to convert the polygon to SDS and
	  save as RIB file format... than re-integrate within ri.cpp and
	  bunny.cpp,h.

2006-06-05 10:13  ltatkinson

	* SConstruct: Updated SCons to not require Python 2.4, but instead
	  2.3 as requested by Paul Gregory.

2006-06-04 10:57  joron

	* thirdparty/aqiv, thirdparty/aqiv/SConscript,
	  thirdparty/aqiv/getopt.c, thirdparty/aqiv/iv.c,
	  thirdparty/aqiv/p40rudd.tx, thirdparty/aqiv/sgigt.c,
	  thirdparty/aqiv/sgigt.h: This is pseudoclone of iv.exe; it is for
	  reference only. I never got the chance to make it scons
	  compliant.
	  
	  p40rudd.tx is a mipmap tif file used to test the result aqiv.
	  support :
	  
	  'W' Warning for tiff
	  'E' toggle the error
	  'Z', 'z' rest to default
	  'D', 'd' goes up,down into the directory hierarchy (for mipmap
	  tiff files)
	  '0' goes the best level. (level 0)
	  '<', '>' prev and next file (from the cli)
	  '.' first file
	  'r', 'g', 'b', 'a' redonly green only,

2006-06-03 15:51  c42f

	* SConstruct: Fixed the build system to correctly compile on the
	  x86_64 architecture.

2006-06-03 04:47  c42f

	* shadercompiler/shadervm/shadervariable.h: Every second line was
	  blank, making the code very difficult to read - removed
	  these.

2006-05-26 13:34  minty

	* renderer/render/SConscript: Distribute ioptions.h

2006-05-26 06:28  pgregory

	* renderer/render/csgtree.cpp, renderer/render/csgtree.h,
	  renderer/render/imagepixel.cpp, renderer/render/imagepixel.h,
	  renderer/render/occlusion.cpp: Alter the way samples are stored
	  at sample time.
	  The sampler used to try to retain depth order of the samples
	  by searching and inserting at the correct point. For scenes
	  with huge depth complexity, like the nebula image, this is
	  very costly (O(N^2)), so now, it just stores the samples,
	  while recording the maximum opaque depth for occlusion culling
	  purposes, and then sorts them at the end when combining the
	  samples.
	  
	  Also, removed the 'grid-line' test from
	  CqOcclustionTree::SampleMPG
	  as the test is not valid, and other ways of overcoming the
	  problem
	  would be more appropriate.

2006-05-21 20:07  mbaas

	* testing/regression/rendertester.py: Execute commands via the
	  shell (otherwise 'aqsis' wasn't found on Windows)

2006-05-20 15:54  c42f

	* testing/regression/rendertester.py: Modified execute() to use the
	  subprocess module rather than temporary files.

2006-05-18 15:59  mbaas

	* testing/regression/rendertester.py: Did some 'quick' changes so
	  that the 'pdiff' utility is used for determining whether a test
	  has failed or not

2006-05-17 22:56  pgregory

	* SConstruct: Fix tar dist extension.

2006-05-17 22:54  pgregory

	* SConstruct, distribution/win/nsis/SConscript: Fix the SCons
	  dist_zip and dist_tar targets. The NSIS builder was doing some
	  checking that couldn't succeed because the NSISDEFINES was being
	  setup in a copy of the environment.
	  Also make the dist_zip and dist_tar targets dependent on
	  'release'.

2006-05-14 19:49  pgregory

	* distribution/win/nsis/setup.nsi: Make the output of the NSIS
	  build go to the 'output' folder with everything else.

2006-05-13 01:40  c42f

	* renderer/ddmanager/ddmanager.cpp: * Fixed weird formatting issue
	  in ddmanager.cpp - there was an extra blank line
	  for each newline. Should be much easier to read now.

2006-05-11 15:29  pgregory

	* shadercompiler/shaderexecenv/shadeops.cpp: Fix issues with
	  incorrect return values from the ambient occlusion shadeop.
	  
	  There was some code in there that apparently was supposed to
	  prevent the negative check for cosangle when used in a surface
	  shader. Firstly I cannot understand why this is necessary, commit
	  comments for the change don't explain this. Secondly, the check
	  for if it is a surface shader was odd, checking if a
	  transformation is identity, unreliable and invalid.

2006-05-10 21:14  pgregory

	* shadercompiler/shaderexecenv/shadeops.cpp: Reverted change 193,
	  clamping to 0--1 is not a valid fix, we need to ensure that the
	  result is in range properly.

2006-05-08 22:42  joron

	* renderer/render/imagebuffer.cpp: Turnoff the options which are
	  not supported well by aqsis.

2006-05-06 23:05  pgregory

	* distribution/win/nsis/SConscript: Fix the previous commit, now
	  the dependency is safe as it was depending on an Alias.

2006-05-06 22:55  pgregory

	* distribution/win/nsis/SConscript: Make the Win32 NSIS installer
	  target depend on the 'release' target.

2006-05-06 12:18  mbaas

	* displays/display/display.cpp, displays/display/display.h:
	  Progress reporting was assuming a 'horizontal' bucket order and
	  didn't work with other orders. The display now counts the number
	  of pixels it has received (stored in m_pixelsReceived) and uses
	  that for computing the progress (this assumes that no area of the
	  image gets sent twice). I also fixed the 'flickering' of the
	  percentage number in the window header by using a fixed width for
	  the output.

2006-05-06 12:15  mbaas

	* renderer/render/imagebuffer.cpp: Progress reporting was assuming
	  a 'horizontal' bucket order and didn't work with other orders. I
	  modified the computation of 'iBucket' (=the number of processed
	  buckets), it's no longer computed for each bucket but it is a now
	  a counter that is increased by 1 in each loop iteration.

2006-05-06 10:47  mbaas

	* renderer/render/imagebuffer.h: NextBucket() had two doxygen
	  comments, one in the header and one in the .cpp file (doxygen
	  only processes one of them). I turned the comment in the header
	  into a regular comment.

2006-05-06 10:45  mbaas

	* renderer/render/bucket.h: Fixed a typo inside a comment

2006-05-06 10:45  mbaas

	* renderer/aqsis/aqsis.cpp, renderer/render/imagebuffer.cpp: Added
	  some (doxygen) comments.

2006-05-06 10:41  mbaas

	* rib/rib2ri/librib2ri.cpp: Added some (doxygen) comments.

2006-04-30 23:42  pgregory

	* testing/regression/RIBs/Bugs/Bug1471457/Bug1471457.rib,
	  testing/regression/RIBs/Bugs/Bug1471457/jobs.cfg: Fix the test
	  for bug #1471457.
	  
	  The shader path in the job specification was invalid.
	  The searchpath wasn't properly setup in the test rib.

2006-04-30 23:38  pgregory

	* renderer/render/surface.cpp,
	  testing/regression/RIBs/Bugs/Bug1471457,
	  testing/regression/RIBs/Bugs/Bug1471457/Bug1471457.rib,
	  testing/regression/RIBs/Bugs/Bug1471457/jobs.cfg,
	  testing/regression/reference/Bug1471457.tif: Fix bug #1471457 :
	  Can't use atmospheric and displacement shaders together.
	  
	  There was a test in the CqSurface::Uses() function that was
	  supposed to check for the absence of any shader assignment, and
	  in that case return 0. However, the test was faulty, and in fact
	  checked for the _presence_ of all three and returned 0.
	  
	  Added a test case for the above bug to the RTS.

2006-04-30 19:50  pgregory

	* renderer/render/ioptions.h: Fix a problem with the initialisation
	  of parameters on MSVC.
	  
	  The IqOptions class declared the default value for arraySize to
	  0, and the CqOptions class declared it as 1. 1 is correct.

2006-04-30 01:57  joron

	* content/ribs/features/blobby/air,
	  content/ribs/features/blobby/air/aqsis.jpg,
	  content/ribs/features/blobby/air/blobplane.rib: Add a example
	  with dbo_plane. (dbo_plane DBO is already available via
	  svn/aqsis/aqsis/thirdparty/dbo_plane)
	  
	  I assign a gradient imager shader just behing the blobbies.
	  
	  The result blobplane.tif was converted to jpeg format for the
	  benefice of
	  others.
	  
	  It might be a good idea to use air renderer to render
	  blobplane.rib and compare the result with the current version of
	  aqsis.

2006-04-30 01:06  joron

	* renderer/render/blobby.cpp: In case of the AIR DBO; it seems
	  somehow more logic to read the bounding box
	  from the DBO and make sure only the point with the bounding box
	  could be
	  evaluated. I also choose only the positive point (z > 0).

2006-04-29 10:13  pgregory

	* renderer/render/micropolygon.cpp, renderer/render/ri.cpp,
	  renderer/render/surface.cpp: Revert the camera motion blur
	  handling to the original, more appropriate way.
	  
	  Camera transformation is stored in a standard CqTransform, along
	  with any transformation motion. At WorldBegin, the current
	  transformation is cleared and the camera transformation stored.
	  When calculating bounding boxes for primitives, the
	  AdjustBoundForTransformationMotion function on the base class now
	  also takes into account any movement imparted by a moving camera.
	  Similarly, when projecting the micropolygons during the Split()
	  function, camera transformation motion is acounted for at the
	  same time as object transformation motion.
	  
	  This makes more sense, and is essential for the support of
	  automatic rendering passes. Before, the 'main' camera motion was
	  applied to the objects, which meant during rendering of auto
	  passes, like autoshadows, the objects would be moving accordind
	  to the camera motion which doesn't make sense for a shadow pass.

2006-04-28 22:24  joron

	* thirdparty/dbo_plane/ScottI.txt: Add to the dbo_plane example the
	  official replay from Scott I.

2006-04-28 21:32  pgregory

	* renderer/render/blobby.cpp: Fix the recent blobby changes to
	  compile under Windows.
	  
	  The DBO code uses the Win32 API function GetModuleFileName and so
	  needs to include the windows.h header file.

2006-04-28 12:50  joron

	* SConstruct, renderer/render/blobby.cpp, renderer/render/blobby.h,
	  thirdparty/dbo_plane, thirdparty/dbo_plane/SConscript,
	  thirdparty/dbo_plane/dbo_plane.c,
	  thirdparty/dbo_plane/implicit.h: Add back AIR' dbo support for
	  blobby.

2006-04-26 12:15  joron

	* renderer/render/SConscript, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/implicit.h: reverting

2006-04-26 11:57  joron

	* renderer/render/blobby.cpp, renderer/render/implicit.h: Adjust
	  implicit.h to be agnostic and blobby.cpp too.

2006-04-26 09:44  pgregory

	* shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervm1.cpp: Apply patches from Chris
	  Foster to implement matrix multiplication and division services
	  for the shading language, and to reformat the matrix output from
	  the SL printf function to be more usable.
	  
	  ------------------------
	  
	  Here's another patch. This one provides matrix multiplication and
	  division services for the shading language.
	  
	  I've tested it by:
	  1) running the regression tests against an untouched copy of the
	  latest
	  svn - they both produce the same output
	  2) writing a shader to spit out the results of M1*M2 and M1/M2
	  via
	  printf, and compare to an external program (cgkit & matlab)
	  
	  The file is matrix_shadeops.patch
	  
	  I'm attaching another patch as well (printf_matrix_format.patch).
	  This
	  one changes the formatting which the printf function gives to
	  matrices
	  in the shader language. In particular, it prints matrices on a
	  single
	  line which is IMHO much easier to work with, particulary since
	  the
	  output can be filtered by unix utilities such as sort and uniq.
	  3delight also uses a single line format.

2006-04-26 09:40  pgregory

	* aqsistypes/matrix.cpp, aqsistypes/matrix.h: Apply patch from
	  Chris Foster to fix some inconsistencies in the matrix
	  implementation.
	  
	  --------------------------
	  
	  This one resolves the issue surrounding calls to
	  matrix(f) for some float f in the shader language. It also fixes
	  an
	  uninitialised data bug in the same constructor (m_fIdentity was
	  uninitialised).

2006-04-26 01:11  joron

	* renderer/render/SConscript, renderer/render/blobby.cpp,
	  renderer/render/blobby.h: Add support for Air' DBO support. In
	  advent the dbo is not compiled for your platform I took the
	  liberty to hardcoded with blobby.cpp the dbo_plane which is very
	  common to air.

2006-04-26 01:09  joron

	* renderer/render/implicit.h: add implicit.h (directly from air) we
	  might want to ask the permission ???

2006-04-25 22:49  pgregory

	* renderer/ddmanager/ddmanager.cpp,
	  renderer/render/imagebuffer.cpp, renderer/render/irenderer.h,
	  renderer/render/ishader.h, renderer/render/lights.cpp,
	  renderer/render/micropolygon.cpp, renderer/render/nurbs.cpp,
	  renderer/render/options.cpp, renderer/render/patch.cpp,
	  renderer/render/points.cpp, renderer/render/polygon.cpp,
	  renderer/render/quadrics.cpp, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/shaders.h, renderer/render/shadowmap.cpp,
	  renderer/render/subdivision2.cpp, renderer/render/surface.cpp,
	  renderer/render/transform.cpp,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: Change the matSpaceToSpace
	  functions on the core renderer to take IqTransform*'s for the
	  object and shader transformations.
	  
	  A first step to making the camera motion blur work as it used to,
	  with camera transformation containing the camera motion, rather
	  than transferring it to the objects as it currently does.

2006-04-25 22:04  ltatkinson

	* distribution/win/nsis/setup.nsi: NSIS script updated to support
	  manual builing of Win32/64 installers (after recent mod).

2006-04-25 13:58  pgregory

	* distribution/win/nsis/SConscript,
	  distribution/win/nsis/setup.nsi: Fix NSIS installer so that it
	  can create an installer from a build created using the MinGW
	  tools.
	  
	  The library suffix for the link libraries changes depending on
	  the compiler, .lib for MS compilers, .a for GCC.

2006-04-22 13:24  romainbehar

	* renderer/render/marchingcubes.cpp: Fixed compilation error (GCC
	  4)

2006-04-22 01:30  joron

	* renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/lookuptable.h, renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h, renderer/render/ri.cpp: speedup
	  by make sure the marching cubes is using array of integers
	  instead of array of characters
	  the PLANE will work.

2006-04-20 00:58  joron

	* renderer/render/blobby.cpp, renderer/render/ri.cpp: blobby.cpp:
	  Increase the enclosing around the bounding box it seems too small
	  for segments.
	  ri.cpp: Make the code a bit more clean.

2006-04-19 15:15  Anteru

	* renderer/render/filters.cpp: * added _qShare to the filters so
	  they are properly exported under Visual C++ 7.1, probably applies
	  for 6.0 too.

2006-04-19 12:32  joron

	* renderer/render/ri.cpp: Remove some ifdef
	  Divide more conquer more.
	  Instead of 4 parts, let put 8 parts

2006-04-19 05:03  joron

	* renderer/render/ri.cpp: A quick optimization to force to deal
	  with the blobby with four parts in essence Divide to conquer

2006-04-19 01:52  joron

	* renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h, renderer/render/ri.cpp:
	  blobby.cpp break in piece a blobby so the marching cubes won't
	  take all the memory.
	  blobby.h goes with the refactoring.
	  ri.cpp small refactor to
	  marchingcubes.cpp rename some type to be consistant with Aqsis
	  marchingcubes.h rename some type to be consistant

2006-04-18 11:51  joron

	* renderer/render/blobby.cpp, renderer/render/marchingcubes.cpp,
	  renderer/render/marchingcubes.h, renderer/render/ri.cpp: make
	  sure bobby.cpp, marchingcubes.cpp doesn't allow too big marching
	  cubes to be created.

2006-04-18 09:49  pgregory

	* renderer/render/blobby.cpp: Fix a compile error under Win32/MinGW

2006-04-17 19:58  pgregory

	* platform/win32/SConscript: Don't force the boost headers under
	  MinGW, boost location MUST be specified on the command line.

2006-04-17 19:56  pgregory

	* renderer/render/LookUpTable.h, renderer/render/MarchingCubes.cpp,
	  renderer/render/MarchingCubes.h: Remove invalid duplicate
	  filenames that cause a problem on systems with case insensitive
	  filesystems, i.e. Windows.

2006-04-17 16:19  romainbehar

	* renderer/render/ri.cpp: Blobby's bounding-box is clipped before
	  being projected into raster space

2006-04-16 22:47  romainbehar

	* renderer/render/SConscript, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/marchingcubes.cpp,
	  renderer/render/ri.cpp: Blobbies adapt to output pixel size
	  (width and height) properly; fixed blobby segment

2006-04-16 15:24  joron

	* renderer/render/lookuptable.h, renderer/render/marchingcubes.h:
	  add it back but in lowercase.

2006-04-16 15:18  joron

	* renderer/render/marchingcubes.cpp: add back but this is time in
	  lowercase .

2006-04-16 15:15  joron

	* renderer/render/SConscript, renderer/render/blobby.cpp,
	  renderer/render/ri.cpp: add back a dependencies between the
	  shadingrate and the multiplier for the marching cube algo. It is
	  not perfect but you could have more/less controls over the number
	  of generated polygons and it is fairly proportional to the size
	  of the format.

2006-04-15 15:51  romainbehar

	* renderer/render/LookUpTable.h, renderer/render/MarchingCubes.cpp,
	  renderer/render/MarchingCubes.h, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/ri.cpp: Better and
	  Faster Marching Cubes algorithm for RiBlobbies, implementation
	  from Thomas Lewiner, http://www.acm.org/jgt/papers/LewinerEtAl03/

2006-04-13 15:27  pgregory

	* renderer/render/nurbs.h, renderer/render/patch.h,
	  renderer/render/points.h, renderer/render/polygon.h,
	  renderer/render/procedural.h, renderer/render/quadrics.h,
	  renderer/render/teapot.h: Clarify the counts for FaceVarying
	  variables from the 3.3 spec.
	  Remove todo's.

2006-04-13 12:43  pgregory

	* rib/ri2rib/error.cpp: Revert previous change, using Aqsis::log()
	  in ri2rib isn't valid, as it's a standalone library, and can't be
	  dependent on the logging functionality.

2006-04-13 10:46  joron

	* renderer/render/blobby.cpp: Remove some warnings; and optimize a
	  bit the sum of the contribution per opcodes

2006-04-13 10:27  joron

	* content/ribs/features/blobby/prman/dent.tif,
	  content/ribs/features/blobby/prman/hand.tif,
	  content/ribs/features/blobby/pseudonym/bigblobby.tif: I don't
	  want to check-end the renderer images

2006-04-13 10:25  joron

	* content/ribs/features/blobby, content/ribs/features/blobby/prman,
	  content/ribs/features/blobby/prman/blend.rib,
	  content/ribs/features/blobby/prman/check.rib,
	  content/ribs/features/blobby/prman/dent.rib,
	  content/ribs/features/blobby/prman/dent.tif,
	  content/ribs/features/blobby/prman/first.rib,
	  content/ribs/features/blobby/prman/hand.rib,
	  content/ribs/features/blobby/prman/hand.tif,
	  content/ribs/features/blobby/prman/lumpy.sl,
	  content/ribs/features/blobby/prman/pairs.rib,
	  content/ribs/features/blobby/prman/repel.rib,
	  content/ribs/features/blobby/prman/segspiral.rib,
	  content/ribs/features/blobby/prman/stripes.sl,
	  content/ribs/features/blobby/prman/sub.rib,
	  content/ribs/features/blobby/prman/texture.rib,
	  content/ribs/features/blobby/prman/vert.rib,
	  content/ribs/features/blobby/pseudonym,
	  content/ribs/features/blobby/pseudonym/bigblobby.rib,
	  content/ribs/features/blobby/pseudonym/bigblobby.tif,
	  content/ribs/features/blobby/pseudonym/blobbytest.rib,
	  content/ribs/features/blobby/shortwave,
	  content/ribs/features/blobby/shortwave/BlobSegmentRA.rib,
	  content/ribs/features/blobby/shortwave/BlobsPlaneRA.rib,
	  content/ribs/features/blobby/shortwave/BlobsSegmentRA.rib,
	  content/ribs/features/blobby/shortwave/blobplane.rib,
	  content/ribs/features/blobby/shortwave/blobsegment.rib,
	  content/ribs/features/blobby/shortwave/blobsegments.rib: this is
	  basically the test cases I'm using against aqsis new features.
	  some comes from prman application notes #31
	  some comes from shortwave
	  some comes from pseudonym

2006-04-13 02:13  joron

	* renderer/render/SConscript, renderer/render/blobby.cpp,
	  renderer/render/blobby.h, renderer/render/filters.cpp,
	  renderer/render/ri.cpp: Extract Ri...Filter() from ri.cpp and put
	  them into filters.cpp
	  Make sure we split the Cs parameter if provided into RiBlobby(),
	  RiBlobbyV()
	  in ri.cpp
	  Blobby.cpp, blobby.h will provide a certain weight based on the
	  proximity of point to any of its operands.

2006-04-12 20:39  pgregory

	* renderer/render/ri.cpp: Fix a bug with layered shaders. The
	  transformation wasn't being set on the layered container shader.

2006-04-12 13:21  pgregory

	* AUTHORS: Updated Authors list

2006-04-11 23:47  ltatkinson

	* distribution/win/nsis/setup.nsi: Simplified Windows installer
	  (NSIS) script in regards to 'Content'.

2006-04-11 22:59  ltatkinson

	* content/ribs/features/layeredshaders/render.bat: Examples updated
	  to support BAT file rendering.

2006-04-11 22:58  ltatkinson

	* content/ribs/features/aov/aov.rib,
	  content/ribs/features/aov/render.bat,
	  content/ribs/features/deformation_mb/primitives1.rib,
	  content/ribs/features/deformation_mb/render.bat,
	  content/ribs/features/occlusion/envlight.rib,
	  content/ribs/features/occlusion/render.bat,
	  content/ribs/features/subdivision/creases.rib,
	  content/ribs/features/subdivision/render.bat,
	  content/ribs/scenes/microbe/microbe.rib,
	  content/ribs/scenes/microbe/render.bat,
	  content/ribs/scenes/vase/render.bat,
	  content/ribs/scenes/vase/vase.rib: Examples updated to support
	  BAT file rendering.

2006-04-11 15:48  pgregory

	* content/ribs/features/layeredshaders/render.bat: Updated batch
	  file to have more error control

2006-04-08 14:18  romainbehar

	* renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/ri.cpp: * RiBlobby code cleanup
	  * began implentation of Split() and Clone() functions to support
	  new autoshadows architecture
	  * ToDo : complete implementations, adapt voxel size to output
	  picture resolution

2006-04-07 20:37  pgregory

	* renderer/render/bucket.cpp, renderer/render/ioptions.h,
	  renderer/render/options.cpp, renderer/render/options.h,
	  renderer/render/ri.cpp: Replace the very specific
	  ScreenWindowCalled(), FrameAspectRatioCalled() etc. functions
	  with a more generic
	  bitvector flag option "System", "CameraFlags"

2006-04-07 16:14  pgregory

	* renderer/render/bucket.cpp, renderer/render/condition.cpp,
	  renderer/render/graphicsstate.h, renderer/render/ioptions.h,
	  renderer/render/options.cpp, renderer/render/options.h,
	  renderer/render/renderer.cpp, renderer/render/renderer.h,
	  renderer/render/ri.cpp: Fix bug #1452736 - motion blur and
	  SubdivisionMesh.
	  The transformation applied during instantiation of a SDS mesh
	  wasn't taking into account the
	  time, and therefore wasn't applying the transform for the correct
	  frame.

2006-04-07 02:41  joron

	* renderer/render/blobby.cpp, renderer/render/ri.cpp,
	  renderer/render/stats.cpp, renderer/render/stats.h: Add a
	  specific counter for the blobbies opcodes (segment, sphere, plane
	  and constants)
	  Adjustment of blobby.cpp, ri.cpp to deal with the current
	  shadingrate and somehow to figure the bounding box of the
	  result/blobbies.

2006-04-06 17:33  ltatkinson

	* distribution/win/nsis/setup.nsi: Updated to support correct
	  'include' directory.

2006-04-06 01:08  joron

	* renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h, renderer/render/ri.cpp: make
	  sure jule_bloomenthal.cpp,h are very very close to k-3d
	  implementation.
	  and try to speedup a bit blobby.cpp, in particular make it very
	  very close the
	  current implementation of k-3d implementation... it gives the
	  choice of marching cube or tetrahedon triangulation.
	  
	  blobby.h could return the bounding box. later ri.cpp will benefit
	  for it.

2006-04-05 02:28  joron

	* renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h, renderer/render/ri.cpp:
	  blobby.cpp, blobby.h: adjust the operands in order to support
	  divide, and plane, hopefull constant and
	  jules_bloomenthal.cpp,h: makecube algo.
	  ri.cpp minor stuff.

2006-04-04 12:54  pgregory

	* renderer/ddmanager/ddmanager.cpp, renderer/render/bucket.cpp,
	  renderer/render/condition.cpp, renderer/render/curves.cpp,
	  renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagers.cpp, renderer/render/ishader.h,
	  renderer/render/itransform.h, renderer/render/micropolygon.cpp,
	  renderer/render/nurbs.cpp, renderer/render/options.h,
	  renderer/render/patch.cpp, renderer/render/points.cpp,
	  renderer/render/quadrics.cpp, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/rifile.h, renderer/render/shaders.h,
	  renderer/render/stats.cpp, renderer/render/subdivision2.cpp,
	  renderer/render/texturemap.cpp,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp: Alter the basic way
	  Options are stored in the graphics state.
	  This refactor means it is possible to store a reference
	  (CqOptionsPtr) to
	  the current options state and know that any future modifications
	  will not
	  affect the stored version, much the same as Attributes work.

2006-04-03 23:29  ltatkinson

	* distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi: Updated to support 'AQSISHOME'
	  environment variable (requested by 'Liquid' team), plus a few
	  minor changes.

2006-04-01 22:27  pgregory

	* shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp: Fix bug #1274816.
	  In the code that processes a function call, the stack of variable
	  translation tables was being popped even if there were no
	  arguments to the function. Now it is only popped if one is
	  pushed, i.e. there are arguments.

2006-04-01 22:10  pgregory

	* shadercompiler/slpp/pp.h: Increase the artificial filenamesize
	  limit to 1000 from 80.
	  Still don't like having an artificial limit, but it's use
	  is too ingrained in the PP preprocessor to remove it right now,
	  something for the future.

2006-04-01 16:01  pgregory

	* testing/regression/RIBs/Bugs/Bug1452736,
	  testing/regression/RIBs/Bugs/Bug1452736/Bug1452736.rib,
	  testing/regression/RIBs/Bugs/Bug1452736/Mesh0.rib,
	  testing/regression/RIBs/Bugs/Bug1452736/Mesh30.rib,
	  testing/regression/RIBs/Bugs/Bug1452736/jobs.cfg,
	  testing/regression/reference/Bug1452736.tif: Add a test case for
	  bug #1452736

2006-04-01 12:37  joron

	* renderer/render/ri.cpp: oups; after a merge I forgot to include
	  blobby.h

2006-04-01 12:33  joron

	* renderer/render/SConscript, renderer/render/ri.cpp: add support
	  for blobbies. this is a first version
	  which I don't want to loose. I will continue to work on
	  some issues/caveats I already found.

2006-04-01 12:24  joron

	* renderer/render/blobby.cpp, renderer/render/blobby.h,
	  renderer/render/jules_bloomenthal.cpp,
	  renderer/render/jules_bloomenthal.h: this is the code from Romain
	  which was a bit modified by me to be like aqsis style guideline.
	  
	  it is the implementation for blobby and its polygonizer; right
	  now some caveats are there. divide, subtract doesn't work,
	  segments are not working either.
	  remain to implement repression plane and constant blobby.
	  some work need to be done with the polygonizer itself in
	  particular anything around the bounding box,
	  yet another polygonizer could be good too and the equation
	  (implicit_functor) could be exact and give as DSO later.

2006-03-31 20:53  pgregory

	* platform/win32/SConscript, renderer/render/ri.cpp,
	  rib/miqser/SConscript: Fix a couple of small compilagtion
	  problems with the Win32 MingW build.

2006-03-30 21:37  pgregory

	* renderer/aqsis/aqsis.cpp: Simple change to aqsis help, mainly to
	  check buildbot notification

2006-03-27 16:18  pgregory

	* shadercompiler/shadervm/dsoshadeops.cpp,
	  testing/systemtests/dsotest/dsotest.rib: Add some more useful
	  information output to the DSO shadeop search to enable better
	  debugging
	  of the DSO loading process.
	  Updated the DSO test to setup the DSO path properly so that it
	  works.

2006-03-25 18:24  mbaas

	* testing/regression/rendertester.py: Use the os.path.join()
	  function to create the command to execute a file. This ensures
	  that the correct path separator is used (the forward slash wasn't
	  working on Windows).

2006-03-24 13:56  pgregory

	* rib/rib2/parser.yy, rib/rib2/scanner.ll: Add some extra potential
	  for information output, if an unrecognised request is found, it
	  can possibly print the errant request on the error stream.

2006-03-24 13:56  pgregory

	* rib/rib2/bdec.cpp: Fix an error in the binary parser, was
	  treating characters < 200 as ascii, whereas the real cutoff is
	  127.

2006-03-24 13:53  pgregory

	* testing/regression/RIBs/RIBProcessing/ascii_gzip.rib,
	  testing/regression/RIBs/RIBProcessing/binary.rib,
	  testing/regression/RIBs/RIBProcessing/binary_gzip.rib:
	  Regenerated with new miqser which contains a critical fix of the
	  binary parser.

2006-03-24 12:00  pgregory

	* rib/miqser/miqser.cpp: Add an argument to miqser so that it can
	  optionally output the StandardDeclarations to the resulting RIB,
	  just in case the RIB is destined for a renderer that doesn't
	  produce the same default declarations as aqsis.

2006-03-24 11:51  pgregory

	* renderer/aqsis/aqsis.cpp, rib/miqser/miqser.cpp,
	  rib/rib2/librib.cpp, rib/rib2/librib.h, rib/rib2/parser.yy:
	  Update the implementation of StandardDeclarations so that it is
	  possible to pass in a NULL RendermanInterface. If that is so, the
	  declarations are registered with the parser, but not with the
	  'renderer'. This allows miqser to parse safely, without
	  outputting the default declarations to every file it processes.

2006-03-23 23:03  pgregory

	* testing/regression/reference/binary.tif: Fix the binary reference
	  image, accidentally committed 3Delight rendering.

2006-03-23 22:28  pgregory

	* testing/regression/RIBs/RIBProcessing/ascii_gzip.rib,
	  testing/regression/RIBs/RIBProcessing/binary.rib,
	  testing/regression/RIBs/RIBProcessing/binary_gzip.rib,
	  testing/regression/RIBs/RIBProcessing/jobs.cfg,
	  testing/regression/RIBs/RIBProcessing/torus.rib.gz,
	  testing/regression/RIBs/RIBProcessing/torus_bin.rib,
	  testing/regression/RIBs/RIBProcessing/torus_bin.rib.gz,
	  testing/regression/reference/ascii_gzip.tif,
	  testing/regression/reference/binary.tif,
	  testing/regression/reference/binary_gzip.tif,
	  testing/regression/reference/torus_bin.tif,
	  testing/regression/reference/torus_bin_gzip.tif,
	  testing/regression/reference/torus_gzip.tif,
	  testing/regression/rendertester.py: Update the binary/gzip RIB
	  tests, they now use files generated
	  by 'miqser' so we have more control over them.

2006-03-23 22:27  pgregory

	* rib/ri2rib/binary.cpp: Fix a problem in the output of binary RIB
	  data.
	  The output of encoded requests was not outputting the
	  request code properly, because it was being processed as an
	  int, instead of a char, so all requests were getting the code
	  '\00'.

2006-03-23 00:03  pgregory

	* SConstruct, renderer/aqsis/SConscript: Enable the new 'miqser'
	  tool.

2006-03-23 00:01  pgregory

	* rib/rib2/parser.yy: Fix the handling of lightsource handles, 0 is
	  not an invalid handle, a handle can be anything.
	  The ri2rib library returns incrementing integers as handles, so 0
	  is valid.

2006-03-23 00:00  pgregory

	* rib/ri2rib/output.cpp, rib/ri2rib/output.h, rib/ri2rib/ri.cpp:
	  Fix ri2rib to not 'require' the use of the RI_??? tokens, it is
	  not a requirement, but an option.

2006-03-22 23:59  pgregory

	* rib/miqser, rib/miqser/SConscript, rib/miqser/miqser.cpp: Add a
	  new tool 'miqser' (mixer) for processing RIB files.

2006-03-22 16:49  pgregory

	* shadercompiler/aqsltell/aqsltell.cpp: Fix output of matrix types
	  to all be on one line, makes more sense.

2006-03-21 17:06  pgregory

	* renderer/render/attributes.cpp, renderer/render/bound.h,
	  renderer/render/renderer.cpp, renderer/render/ri.cpp: Fix recent
	  changes to LOD to work on Windows.

2006-03-20 23:29  pgregory

	* renderer/render/attributes.cpp, renderer/render/imagebuffer.cpp,
	  renderer/render/renderer.cpp, renderer/render/ri.cpp,
	  testing/regression/RIBs/Misc/detail.rib: Fix the handling of
	  LevelOfDetail, broken since the introduction of auto* rendering.
	  May be a little slower processing primitives now, as the bound
	  needs to be transformed into raster space for each surface, but
	  under normal operation it should be negligible.
	  This actually showed that our LOD has not ever worked properly,
	  and in fact the regression suite test was showing the wrong
	  result.

2006-03-20 16:00  pgregory

	* aqsistypes/color.h, aqsistypes/noise1234.h,
	  renderer/render/points.h: Remove extra class specifications,
	  gcc4.1 complains about them.
	  Added empty operator% to CqColor, used by the shaderVM macros,
	  gcc4.1 needs
	  a real implementation.

2006-03-13 13:06  ShortWave

	* tools/BtoR/BtoRGUIClasses.py, tools/BtoR/UITest.py,
	  tools/BtoR/__init__.py: This is version 0.1a of the BtoR GUI
	  Library.
	  
	  The BtoRGUIClasses.py is the GUI in its entirety.
	  
	  UITest.py is a simple script to demonstrate the UI with some of
	  the major features, including the BtoR Shader parameter editors
	  (various parameter types, e.g. Color, float, matrix, etc.)

2006-03-13 13:03  ShortWave

	* tools/BtoR/BtoR.py, tools/BtoR/ConfirmDialog.bpg,
	  tools/BtoR/ShaderEditor.py, tools/BtoR/ShaderEditorGUI.bpg,
	  tools/BtoR/ShaderEditorGUI.py, tools/BtoR/dialog.py: Removed
	  file/folder

2006-03-11 16:54  joron

	* shadercompiler/shaderexecenv/shadeops.cpp: Well let clamp the
	  result between 0..1.0

2006-03-11 15:38  mbaas

	* testing/regression/RIBs/Bugs/Bug931713/jobs.cfg: The 'dented'
	  shader was missing from the list of shaders and didn't get
	  compiled for this test.

2006-03-11 15:33  mbaas

	* testing/regression/RIBs/Bugs/Bug938941/bug938941.rib: Switched to
	  lzw compression

2006-03-11 15:31  mbaas

	* testing/regression/reference/Bug1013736.tif,
	  testing/regression/reference/Bug1023260.tif,
	  testing/regression/reference/Bug1049628.tif,
	  testing/regression/reference/Bug1063660.tif,
	  testing/regression/reference/Bug1073845.tif,
	  testing/regression/reference/Bug1104545.tif,
	  testing/regression/reference/bug1013736.tif,
	  testing/regression/reference/bug1023260.tif,
	  testing/regression/reference/bug1049628.tif,
	  testing/regression/reference/bug1063660.tif,
	  testing/regression/reference/bug1073845.tif,
	  testing/regression/reference/bug1104545.tif,
	  testing/regression/reference/bug1220286.tif: Updated reference
	  images (some had to be deleted/added to make them uppercase)

2006-03-11 15:23  mbaas

	* testing/regression/reference/Bug1052918.tif,
	  testing/regression/reference/Bug1066350.tif,
	  testing/regression/reference/bug1052918.tif,
	  testing/regression/reference/bug1066350.tif,
	  testing/regression/reference/bug938941.tif: Updated reference
	  images

2006-03-11 14:58  mbaas

	* testing/regression/reference/bug902510.tif: Updated reference
	  image

2006-03-11 14:26  mbaas

	* testing/regression/RIBs/Bugs/Bug902510/bug902510.rib,
	  testing/regression/RIBs/Bugs/Bug902510/texture,
	  testing/regression/RIBs/Bugs/Bug902510/texture.map: The texture
	  file was broken which is why it couldn't be read by Aqsis and the
	  test failed. Obviously the file has once been added as ascii to
	  the previous cvs repository. I added the original version as
	  'texture.map' and removed 'texture'.

2006-03-11 13:59  mbaas

	* testing/regression/reference/Bug1049839.tif,
	  testing/regression/reference/Bug1144077.tif,
	  testing/regression/reference/Bug1175571.tif,
	  testing/regression/reference/Bug1184401.tif,
	  testing/regression/reference/BugThreeLights.tif,
	  testing/regression/reference/anim00.tif,
	  testing/regression/reference/anim01.tif,
	  testing/regression/reference/anim02.tif,
	  testing/regression/reference/anim03.tif,
	  testing/regression/reference/anim04.tif,
	  testing/regression/reference/anim05.tif,
	  testing/regression/reference/anim06.tif,
	  testing/regression/reference/anim07.tif,
	  testing/regression/reference/anim08.tif,
	  testing/regression/reference/anim09.tif,
	  testing/regression/reference/anim10.tif,
	  testing/regression/reference/anim11.tif,
	  testing/regression/reference/anim12.tif,
	  testing/regression/reference/anim13.tif,
	  testing/regression/reference/anim14.tif,
	  testing/regression/reference/anim15.tif,
	  testing/regression/reference/anim16.tif,
	  testing/regression/reference/anim17.tif,
	  testing/regression/reference/anim18.tif,
	  testing/regression/reference/anim19.tif,
	  testing/regression/reference/anim20.tif,
	  testing/regression/reference/anim21.tif,
	  testing/regression/reference/anim22.tif,
	  testing/regression/reference/anim23.tif,
	  testing/regression/reference/anim24.tif,
	  testing/regression/reference/anim25.tif,
	  testing/regression/reference/anim26.tif,
	  testing/regression/reference/anim27.tif,
	  testing/regression/reference/anim28.tif,
	  testing/regression/reference/anim29.tif,
	  testing/regression/reference/anim30.tif,
	  testing/regression/reference/anim31.tif,
	  testing/regression/reference/anim32.tif,
	  testing/regression/reference/anim33.tif,
	  testing/regression/reference/anim34.tif,
	  testing/regression/reference/anim35.tif,
	  testing/regression/reference/anim36.tif,
	  testing/regression/reference/anim37.tif,
	  testing/regression/reference/anim38.tif,
	  testing/regression/reference/anim39.tif,
	  testing/regression/reference/anim40.tif,
	  testing/regression/reference/anim41.tif,
	  testing/regression/reference/anim42.tif,
	  testing/regression/reference/anim43.tif,
	  testing/regression/reference/anim44.tif,
	  testing/regression/reference/anim45.tif,
	  testing/regression/reference/anim46.tif,
	  testing/regression/reference/anim47.tif,
	  testing/regression/reference/anim48.tif,
	  testing/regression/reference/anim49.tif,
	  testing/regression/reference/bezier.tif,
	  testing/regression/reference/bug1013736.tif,
	  testing/regression/reference/bug1014043.tif,
	  testing/regression/reference/bug1023260.tif,
	  testing/regression/reference/bug1030593.tif,
	  testing/regression/reference/bug1049628.tif,
	  testing/regression/reference/bug1052918.tif,
	  testing/regression/reference/bug1063660.tif,
	  testing/regression/reference/bug1066350.tif,
	  testing/regression/reference/bug1073845.tif,
	  testing/regression/reference/bug1104545.tif,
	  testing/regression/reference/bug771953.tif,
	  testing/regression/reference/bug830790.tif,
	  testing/regression/reference/bug900120.tif,
	  testing/regression/reference/bug906365.tif,
	  testing/regression/reference/bug925879.tif,
	  testing/regression/reference/bug931713.tif,
	  testing/regression/reference/bug938755.tif,
	  testing/regression/reference/bug942638.tif,
	  testing/regression/reference/catmull-rom.tif,
	  testing/regression/reference/csg_test2.tif,
	  testing/regression/reference/eyeplanetest.tif,
	  testing/regression/reference/lincurve_test4.tif,
	  testing/regression/reference/linear.tif,
	  testing/regression/reference/vase.tif: Updated the reference
	  images that changed because of different sampling points and
	  similar stuff

2006-03-11 13:57  mbaas

	* testing/regression/rendertester.py: When a test produces no image
	  but a reference image is available the tool was reporting that as
	  a 'missing reference image' instead of a failure. This is fixed
	  now.

2006-03-11 13:55  mbaas

	* testing/regression/RIBs/Bugs/Bug1220286/jobs.cfg: Removed the
	  'known issues' entry as according to the SF bug tracker the bug
	  is closed (and the image looks ok to me)

2006-03-11 13:54  mbaas

	* testing/regression/RIBs/Bugs/Bug938941/jobs.cfg: Added a 'known
	  issues' entry about the missing variable-sharpness feature and
	  created a reference image

2006-03-11 13:50  mbaas

	* testing/regression/RIBs/Misc/eyeplanetest.rib: Changed the color
	  of the plane so that the plane can be seen on a white background

2006-03-10 12:58  joron

	* shadercompiler/shaderexecenv/shadeops.cpp: [1439011] Revert the
	  changes made and basically turn off the optimization when it is a
	  surface shader.

2006-03-10 12:56  joron

	* shadercompiler/shadervm/shadervm.h: fix a non reported core dump
	  with aqsltell

2006-03-08 11:06  pgregory

	* renderer/aqsis/aqsis.cpp,
	  shadercompiler/shaderexecenv/shadeops.cpp: Apply 64bit AMD patch
	  from Chris Foster.

2006-03-07 20:59  mbaas

	* testing/regression/reference/NuPatch.tif,
	  testing/regression/reference/PointsGeneralPolygons.tif,
	  testing/regression/reference/Sphere.tif,
	  testing/regression/reference/cam_mb.tif,
	  testing/regression/reference/cellnoise.tif,
	  testing/regression/reference/colpervertex_test.tif,
	  testing/regression/reference/coneparams1.tif,
	  testing/regression/reference/coordsys_test.tif,
	  testing/regression/reference/croptest.tif,
	  testing/regression/reference/csg_test.tif,
	  testing/regression/reference/defsurf.tif,
	  testing/regression/reference/delayedproc.tif,
	  testing/regression/reference/dof.tif,
	  testing/regression/reference/dofmb.tif,
	  testing/regression/reference/env_test.tif,
	  testing/regression/reference/funcset1.tif,
	  testing/regression/reference/funcset11.tif,
	  testing/regression/reference/funcset2.tif,
	  testing/regression/reference/funcset3.tif,
	  testing/regression/reference/funcset4.tif,
	  testing/regression/reference/funcset5.tif,
	  testing/regression/reference/funcset7.tif,
	  testing/regression/reference/funcset8.tif,
	  testing/regression/reference/funcset9.tif,
	  testing/regression/reference/genpoly_test.tif,
	  testing/regression/reference/invtrig.tif,
	  testing/regression/reference/matte.tif,
	  testing/regression/reference/mblur.tif,
	  testing/regression/reference/mblur2a.tif,
	  testing/regression/reference/mblur2b.tif,
	  testing/regression/reference/mblur_1x1.tif,
	  testing/regression/reference/mesh_uniform.tif,
	  testing/regression/reference/mod_st2_test.tif,
	  testing/regression/reference/mod_st_test.tif,
	  testing/regression/reference/orientation.tif,
	  testing/regression/reference/orientation_onesided.tif,
	  testing/regression/reference/periodic_test.tif,
	  testing/regression/reference/points1.tif,
	  testing/regression/reference/poly_test.tif,
	  testing/regression/reference/polyuser.tif,
	  testing/regression/reference/quads_test.tif,
	  testing/regression/reference/readarchive.tif,
	  testing/regression/reference/real_env_test.tif,
	  testing/regression/reference/reverseorientation.tif,
	  testing/regression/reference/runsphereproc.tif,
	  testing/regression/reference/sds_displacement.tif,
	  testing/regression/reference/simplecone.tif,
	  testing/regression/reference/simplecylinder.tif,
	  testing/regression/reference/simplenurbs.tif,
	  testing/regression/reference/simplesphere.tif,
	  testing/regression/reference/skew1.tif,
	  testing/regression/reference/softshadow.tif,
	  testing/regression/reference/sphereparams1.tif,
	  testing/regression/reference/std_st_test.tif,
	  testing/regression/reference/sticky_patch.tif,
	  testing/regression/reference/subdiv1.tif,
	  testing/regression/reference/subdiv2.tif,
	  testing/regression/reference/subdiv3.tif,
	  testing/regression/reference/subdiv4.tif,
	  testing/regression/reference/teapotgeom.tif,
	  testing/regression/reference/test_func_setup.tif,
	  testing/regression/reference/tmap_test.tif,
	  testing/regression/reference/torusparams1.tif,
	  testing/regression/reference/trig.tif,
	  testing/regression/reference/trim_test.tif,
	  testing/regression/reference/userparams.tif,
	  testing/regression/reference/uv_test.tif: Updated some reference
	  images (on WinXP)

2006-03-07 20:48  mbaas

	* testing/regression/RIBs/Shading/SLFunctions/jobs.cfg: Remove the
	  known issue remark about the texture map as this is fixed

2006-03-07 20:47  mbaas

	* testing/regression/RIBs/Primitives/jobs.cfg,
	  testing/regression/RIBs/Primitives/trim_test.rib: Changed the
	  color of the NURBS patch from white to orange so that it can
	  actually be seen on a white background (now that alpha is
	  supported by the test tool)

2006-03-07 19:53  mbaas

	* testing/regression/reference/shadowpos_1.tif,
	  testing/regression/reference/shadowpos_60.tif,
	  testing/regression/reference/shadtest.tif: Updated some reference
	  images to reflect recent changes to the random number generation

2006-03-07 13:23  joron

	* displays/display/display.cpp: [ 1444331 ] alpha_channel problem
	  on Mac OSX

2006-03-07 12:10  joron

	* shadercompiler/shaderexecenv/shadeops.cpp: [1439011] cclusion()
	  returns 0 in occluded areas
	  A call to occlusion() sometimes returns 0 in areas that
	  should actually be occluded when used into a surface shader.
	  [1439011] cclusion() returns 0 in occluded areas
	  A call to occlusion() sometimes returns 0 in areas that
	  should actually be occluded when used into a surface shader.
	  [1439011] cclusion() returns 0 in occluded areas
	  A call to occlusion() sometimes returns 0 in areas that
	  should actually be occluded when used into a surface shader.
	  [1439011] cclusion() returns 0 in occluded areas
	  A call to occlusion() sometimes returns 0 in areas that
	  should actually be occluded when used into a surface shader.

2006-03-06 00:25  pgregory

	* renderer/render/ishader.h, renderer/render/ri.cpp,
	  renderer/render/shaders.h, shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: Fix the lighting problem with
	  lightsources defined outside the WorldBegin/End block.
	  The problem is that at definition time, the shader's idea of
	  'camera' space is identity, while
	  at 'preparation' time, it is different, it is the real camera
	  space either that defined as the
	  camera in the RIB (i.e. at the time of RiWorldBegin) or that
	  defined during a custom render
	  pass, like autoshadows.
	  
	  As this can only possibly affect lightsources, because it is
	  illegal to define other shader types
	  outside the world block, we now check if the lightsource is being
	  defined outside the world block
	  at definition time, and if so, just go ahead and initialise the
	  parameters now, as they are
	  invariant under any camera space changes applied during and auto*
	  pass. In addition we store
	  with a shader whether it was defined outside the world block, and
	  if so, ignore the request
	  to 'prepare' the shader, as it is already properly prepared.

2006-03-03 23:59  joron

	* renderer/render/ri.cpp, renderer/render/texturemap.cpp,
	  rib/api/api.xml, rib/ri2rib/output.cpp, rib/ri2rib/ri.cpp,
	  rib/rib2/librib.h, rib/rib2/parser.yy, rib/rib2/scanner.ll,
	  rib/rib2ri/librib2ri.cpp, rib/rib2ri/librib2ri.h,
	  rib/rib2stream/librib2stream.cpp, rib/rib2stream/librib2stream.h,
	  texturing/teqser/teqser.cpp: Introduce a mitchell filterpixel.
	  Similar to prman and air.
	  This is similar to gaussian filter but requires less width/height
	  to achieve
	  the same goal.

2006-03-03 07:53  pgregory

	* renderer/render/irenderer.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h:

2006-03-01 13:01  mw_matti

	* renderer/render/imagebuffer.cpp: refused to compile with 7.1 -
	  added cast to 'double' so sqrt is no longer ambiguous

2006-03-01 02:35  joron

	* renderer/render/bucket.cpp, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp:
	  bucket.cpp remove rand() and use instead CqRandom
	  imagebuffer.cpp, imagebuffer.h NextBucket() which allows
	  Horizontal, Vertical Next bucket
	  imagepixel.cpp zap random_shuffle and do mini shuffle by hand.

2006-03-01 01:40  joron

	* displays/d_sdcBMP/d_sdcBMP.cpp: make sure the lowerendian() works
	  in both powerpc and nt.
	  make sure the user could call multiple times this driver.

2006-02-28 13:01  joron

	* displays/d_sdcBMP/d_sdcBMP.cpp: It will swap by figure out itself
	  if it is lowendian or bigendian.

2006-02-28 12:18  joron

	* SConstruct: Add support for a bmp display driver.
	  it compiles the d_bmp.<dylib> or d_bmp.dll
	  it will produce a valid bmp even on unix (it does on macosx)

2006-02-28 04:03  joron

	* displays/display/display.cpp: Personnally I prefer integer for
	  seconds instead of exposant notation.

2006-02-28 04:01  joron

	* displays/d_sdcBMP, displays/d_sdcBMP/ReadMe.txt,
	  displays/d_sdcBMP/SConscript, displays/d_sdcBMP/d_sdcBMP.cpp,
	  displays/d_sdcBMP/d_sdcBMP.dsp: This is to add bmp display driver
	  for all platforms... handy to have a bmp instead of tif.
	  
	  Display "vase.bmp" "bmp" "rgb"

2006-02-28 03:54  joron

	* renderer/render/ri.cpp,
	  shadercompiler/shaderexecenv/shadeops.cpp: [ 1439011 ]
	  occlusion() returns 0 in occluded areas

2006-02-27 17:13  pgregory

	* aqsistypes/spline.cpp, aqsistypes/spline.h: Apply patch from
	  Chris Foster to correct the assumption that "power" basis is the
	  same as "linear" basis. Now has a proper "linear" basis matrix.

2006-02-26 00:56  joron

	* shadercompiler/shaderexecenv/shadeops.cpp: [ 1438678 ]
	  occlusion() sometimes returns -1.#IND
	  If the number of maps is 1 than both for loop should be executed
	  only once. If the first ever point is behind the sample don't
	  divide by zero.

2006-02-25 16:59  mbaas

	* testing/regression/RIBs/Shadows/jobs.cfg,
	  testing/regression/RIBs/Shadows/shadowpos_1.rib,
	  testing/regression/RIBs/Shadows/shadowpos_60.rib,
	  testing/regression/RIBs/Shadows/spot.sl,
	  testing/regression/reference/shadowpos_1.tif,
	  testing/regression/reference/shadowpos_60.tif: Added two shadow
	  map tests

2006-02-25 16:58  mbaas

	* testing/regression/RIBs/Shadows,
	  testing/regression/RIBs/Shadows/.cvsignore: Ignore compiled
	  shaders

2006-02-25 16:56  mbaas

	* testing/regression/clean.py: Remove shadow maps and zfiles in the
	  RIBs tree

2006-02-25 02:07  joron

	* renderer/render/shadowmap.cpp, renderer/render/texturemap.h: [
	  bugfix for 1433837 ] Shadow map artifacts in current cvs version
	  It corrects the bug where the shadow shifts with the increase of
	  width parameter (reported by Mattias).

2006-02-24 20:51  mbaas

	* testing/regression/rendertester.py: By default, the TIFF
	  conversion command is now an empty string as PIL 1.1.5 should be
	  able to read the images itself. You can still set the conversion
	  command in a config file if you need it for some reason. When
	  deleting the temporary files created during execution of a
	  command it could sometimes happen that the remove() command
	  failed (it seems it was executed too quickly after closing a
	  file...?!). Now the tool waits for a short moment when that
	  happens and then tries again.

2006-02-23 12:54  mw_matti

	* testing/regression/RIBs/Performance/filter_simple_catmullrom.py,
	  testing/regression/RIBs/Performance/filter_simple_gauss.py,
	  testing/regression/RIBs/Performance/filter_simple_sinc.py,
	  testing/regression/RIBs/Performance/parse_many.py,
	  testing/regression/RIBs/Performance/plane_occ.py,
	  testing/regression/RIBs/Performance/sample_comp_transp.py,
	  testing/regression/RIBs/Performance/sample_dof_many.py,
	  testing/regression/RIBs/Performance/sample_dof_mb_many.py,
	  testing/regression/RIBs/Performance/sample_mb_move_many.py,
	  testing/regression/RIBs/Performance/sample_mb_move_single.py,
	  testing/regression/RIBs/Performance/sample_mb_rotate_steps.py,
	  testing/regression/RIBs/Performance/sample_push_test.py,
	  testing/regression/RIBs/Performance/sample_simple.py: fixed
	  missing RiFrameEnd and missing () after RiEnd
	  
	  * possible bug: Aqsis didn't notice the missing RiFrameEnd

2006-02-23 12:37  mw_matti

	* testing/regression/RIBs/Performance/sample_dof_mb_many.py: *
	  sample_dof_mb_many Extreme motion blur/depth of field test. This
	  gives me sample misses: 133466923 (99.5%)

2006-02-23 11:05  mw_matti

	* testing/regression/RIBs/Performance,
	  testing/regression/RIBs/Performance/filter_simple_catmullrom.py,
	  testing/regression/RIBs/Performance/filter_simple_gauss.py,
	  testing/regression/RIBs/Performance/filter_simple_sinc.py,
	  testing/regression/RIBs/Performance/parse_many.py,
	  testing/regression/RIBs/Performance/plane_occ.py,
	  testing/regression/RIBs/Performance/sample_comp_transp.py,
	  testing/regression/RIBs/Performance/sample_dof_many.py,
	  testing/regression/RIBs/Performance/sample_mb_move_many.py,
	  testing/regression/RIBs/Performance/sample_mb_move_single.py,
	  testing/regression/RIBs/Performance/sample_mb_rotate_steps.py,
	  testing/regression/RIBs/Performance/sample_push_test.py,
	  testing/regression/RIBs/Performance/sample_simple.py: added some
	  simple performance tests:
	  
	  * filter_simple_* Renders 64 thin patches with very wide filters
	  (32,32)
	  * parse_many Render 4096*16 Spheres, this one takes equally long
	  for parsing and for rendering. This scene needs to be extended to
	  stress the parser even more.
	  * plane_occ One opaque plane behind another - the second plane
	  shouldn't be rendered. Compare frame 1 to frame 2, if the second
	  frame created more MPGs something went wrong.
	  * sample_comp_transp Renders 128 transparent planes
	  * sample_dof_many Renders 24 planes
	  * sample_mb_move_many Render 24 moving planes
	  * sample_mb_move_single A single plane moving from the top right
	  to the bottom left
	  * sample_mb_rotate_steps Rotates a plane by 90 degress, uses 10
	  steps
	  * sample_push_test Renders a fullscreen plane that should not
	  push any MPGs as there is no motion blur, depth of field or
	  displacement
	  * sample_simple Renders a plane with 48,48 samples per pixel.
	  Currently, this uses extreme amounts of memory

2006-02-22 17:52  pgregory

	* renderer/render/bucket.cpp: Fix a variable collision on Windows
	  VC++ 6.0

2006-02-22 17:11  pgregory

	* build_check.py, platform/default/SConscript: Remove the forced
	  disabling of FLTK for Linux, it will be disabled if not found.

2006-02-21 23:07  minty

	* renderer/render/bucket.cpp, renderer/render/imagebuffer.cpp,
	  renderer/render/imagepixel.cpp, renderer/render/imagepixel.h,
	  renderer/render/occlusion.cpp, renderer/render/occlusion.h: Fix
	  memory leak in occlusion tree
	  Provide correct deletion of KDTree node on DeleteHierachy
	  Fix sample shuffling to prevent excessive copying of data

2006-02-21 22:50  minty

	* aqsistypes/vector2d.h, aqsistypes/vector3d.h,
	  aqsistypes/vector4d.h: Ensure vectors get init'ed properly

2006-02-21 12:50  joron

	* renderer/render/texturemap.cpp: remove the old stuff and make
	  sure the stats are good for the primary
	  cache.

2006-02-21 10:46  minty

	* aqsistypes/spline.h: Respect the basis functions for spline()
	  Alias "power" as "linear"
	  Warn on an unknown basis and default to "linear"

2006-02-21 00:40  joron

	* renderer/render/shadowmap.cpp, renderer/render/texturemap.h:
	  Implement a pseudo mipmaps for the regular shadowmap (it is just
	  a speed up when you revisit a old tile)
	  
	  Fix the bug related to shadowmap artifacts introduced in CVS.
	  more or less the extra speed is only valid for occlusion map.
	  I give to the user for occlusion map the control of samples.

2006-02-20 15:53  pgregory

	* shadercompiler/shaderexecenv/shadeops.cpp: Make sure we can use
	  Aqsis::log() in the shadeops by disambiguating the use of the
	  math log() function.

2006-02-20 11:25  pgregory

	* testing/regression/RIBs/Bugs/Bug1013736/Bug1013736.rib,
	  testing/regression/RIBs/Bugs/Bug1014043/bug1014043.rib,
	  testing/regression/RIBs/Bugs/Bug1023260/Bug1023260.rib,
	  testing/regression/RIBs/Bugs/Bug1030593/bug1030593.rib,
	  testing/regression/RIBs/Bugs/Bug1049628/Bug1049628.rib,
	  testing/regression/RIBs/Bugs/Bug1049839/Bug1049839.rib,
	  testing/regression/RIBs/Bugs/Bug1052918/Bug1052918.rib,
	  testing/regression/RIBs/Bugs/Bug1063660/Bug1063660.rib,
	  testing/regression/RIBs/Bugs/Bug1066350/Bug1066350.rib,
	  testing/regression/RIBs/Bugs/Bug1073845/Bug1073845.rib,
	  testing/regression/RIBs/Bugs/Bug1102605/Bug1102605.rib,
	  testing/regression/RIBs/Bugs/Bug1104545/Bug1104545.rib,
	  testing/regression/RIBs/Bugs/Bug1144077/Bug1144077.rib,
	  testing/regression/RIBs/Bugs/Bug1175571/Bug1175571.rib,
	  testing/regression/RIBs/Bugs/Bug1184401/Bug1184401.rib,
	  testing/regression/RIBs/Bugs/Bug1220286/bug1220286.rib,
	  testing/regression/RIBs/Bugs/Bug771953/bug771953.rib,
	  testing/regression/RIBs/Bugs/Bug830790/bug830790.rib,
	  testing/regression/RIBs/Bugs/Bug878587/bug878587.rib,
	  testing/regression/RIBs/Bugs/Bug900120/bug900120.rib,
	  testing/regression/RIBs/Bugs/Bug902510/bug902510.rib,
	  testing/regression/RIBs/Bugs/Bug906365/bug906365.rib,
	  testing/regression/RIBs/Bugs/Bug925879/bug925879.rib,
	  testing/regression/RIBs/Bugs/Bug931713/bug931713.rib,
	  testing/regression/RIBs/Bugs/Bug938755/bug938755.rib,
	  testing/regression/RIBs/Bugs/Bug942508/bug942508.rib,
	  testing/regression/RIBs/Bugs/Bug942638/bug942638.rib,
	  testing/regression/RIBs/Bugs/Bug948827/bug948827.rib,
	  testing/regression/RIBs/Bugs/BugThreeLights/BugThreeLights.rib,
	  testing/regression/RIBs/Curves/bezier.rib,
	  testing/regression/RIBs/Curves/catmull-rom.rib,
	  testing/regression/RIBs/Curves/lincurve_test1.rib,
	  testing/regression/RIBs/Curves/lincurve_test2.rib,
	  testing/regression/RIBs/Curves/lincurve_test3.rib,
	  testing/regression/RIBs/Curves/lincurve_test4.rib,
	  testing/regression/RIBs/Curves/linear.rib,
	  testing/regression/RIBs/DepthOfField/dof.rib,
	  testing/regression/RIBs/DepthOfField/dofmb.rib,
	  testing/regression/RIBs/Misc/anim.rib,
	  testing/regression/RIBs/Misc/coordsys_test.rib,
	  testing/regression/RIBs/Misc/croptest.rib,
	  testing/regression/RIBs/Misc/defsurf.rib,
	  testing/regression/RIBs/Misc/detail.rib,
	  testing/regression/RIBs/Misc/eyeplanetest.rib,
	  testing/regression/RIBs/Misc/matte.rib,
	  testing/regression/RIBs/MotionBlur/cam_mb.rib,
	  testing/regression/RIBs/MotionBlur/mblur.rib,
	  testing/regression/RIBs/MotionBlur/mblur2a.rib,
	  testing/regression/RIBs/MotionBlur/mblur2b.rib,
	  testing/regression/RIBs/MotionBlur/mblur_1x1.rib,
	  testing/regression/RIBs/ObjectInstance/NuPatch.rib,
	  testing/regression/RIBs/ObjectInstance/PointsGeneralPolygons.rib,
	  testing/regression/RIBs/ObjectInstance/Sphere.rib,
	  testing/regression/RIBs/Points/points1.rib,
	  testing/regression/RIBs/Polygons/genpoly_test.rib,
	  testing/regression/RIBs/Polygons/poly_test.rib,
	  testing/regression/RIBs/Primitives/colpervertex_test.rib,
	  testing/regression/RIBs/Primitives/coneparams1.py,
	  testing/regression/RIBs/Primitives/periodic_test.rib,
	  testing/regression/RIBs/Primitives/quads_test.rib,
	  testing/regression/RIBs/Primitives/simplecone.rib,
	  testing/regression/RIBs/Primitives/simplecylinder.rib,
	  testing/regression/RIBs/Primitives/simplenurbs.rib,
	  testing/regression/RIBs/Primitives/simplesphere.rib,
	  testing/regression/RIBs/Primitives/sphereparams1.py,
	  testing/regression/RIBs/Primitives/teapotgeom.rib,
	  testing/regression/RIBs/Primitives/torusparams1.py,
	  testing/regression/RIBs/Primitives/trim_test.rib,
	  testing/regression/RIBs/Procedurals/delayedproc.rib,
	  testing/regression/RIBs/Procedurals/rundetailproc.rib,
	  testing/regression/RIBs/Procedurals/runsphereproc.rib,
	  testing/regression/RIBs/RIBProcessing/readarchive.rib,
	  testing/regression/RIBs/RIBProcessing/torus_bin.rib,
	  testing/regression/RIBs/Scenes/vase.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset1.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset10.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset11.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset2.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset3.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset4.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset5.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset6.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset7.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset8.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset9.rib,
	  testing/regression/RIBs/Shading/SLFunctions/invtrig.rib,
	  testing/regression/RIBs/Shading/SLFunctions/test_func_setup.rib,
	  testing/regression/RIBs/Shading/SLFunctions/trig.rib,
	  testing/regression/RIBs/Shading/cellnoise.rib,
	  testing/regression/RIBs/Shadows/shadtest.rib,
	  testing/regression/RIBs/Shadows/softshadow.rib,
	  testing/regression/RIBs/Sidedness/orientation.rib,
	  testing/regression/RIBs/Sidedness/orientation_onesided.rib,
	  testing/regression/RIBs/Sidedness/reverseorientation.rib,
	  testing/regression/RIBs/SolidModeling/csg_test.rib,
	  testing/regression/RIBs/SolidModeling/csg_test2.rib,
	  testing/regression/RIBs/Subdivision/sds_displacement.rib,
	  testing/regression/RIBs/Subdivision/subdiv1.rib,
	  testing/regression/RIBs/Subdivision/subdiv2.rib,
	  testing/regression/RIBs/Subdivision/subdiv3.rib,
	  testing/regression/RIBs/Subdivision/subdiv4.rib,
	  testing/regression/RIBs/SurfaceParameters/mesh_uniform.rib,
	  testing/regression/RIBs/SurfaceParameters/mod_st2_test.rib,
	  testing/regression/RIBs/SurfaceParameters/mod_st_test.rib,
	  testing/regression/RIBs/SurfaceParameters/polyuser.rib,
	  testing/regression/RIBs/SurfaceParameters/std_st_test.rib,
	  testing/regression/RIBs/SurfaceParameters/userparams.rib,
	  testing/regression/RIBs/SurfaceParameters/uv_test.rib,
	  testing/regression/RIBs/Texturing/env_test.rib,
	  testing/regression/RIBs/Texturing/real_env_test.rib,
	  testing/regression/RIBs/Texturing/sticky_patch.rib,
	  testing/regression/RIBs/Texturing/tmap_test.rib,
	  testing/regression/RIBs/Transformations/skew1.rib,
	  testing/regression/reference/Bug1049839.tif,
	  testing/regression/reference/Bug1102605.tif,
	  testing/regression/reference/Bug1144077.tif,
	  testing/regression/reference/Bug1175571.tif,
	  testing/regression/reference/Bug1184401.tif,
	  testing/regression/reference/BugThreeLights.tif,
	  testing/regression/reference/NuPatch.tif,
	  testing/regression/reference/PointsGeneralPolygons.tif,
	  testing/regression/reference/Sphere.tif,
	  testing/regression/reference/anim00.tif,
	  testing/regression/reference/anim01.tif,
	  testing/regression/reference/anim02.tif,
	  testing/regression/reference/anim03.tif,
	  testing/regression/reference/anim04.tif,
	  testing/regression/reference/anim05.tif,
	  testing/regression/reference/anim06.tif,
	  testing/regression/reference/anim07.tif,
	  testing/regression/reference/anim08.tif,
	  testing/regression/reference/anim09.tif,
	  testing/regression/reference/anim10.tif,
	  testing/regression/reference/anim11.tif,
	  testing/regression/reference/anim12.tif,
	  testing/regression/reference/anim13.tif,
	  testing/regression/reference/anim14.tif,
	  testing/regression/reference/anim15.tif,
	  testing/regression/reference/anim16.tif,
	  testing/regression/reference/anim17.tif,
	  testing/regression/reference/anim18.tif,
	  testing/regression/reference/anim19.tif,
	  testing/regression/reference/anim20.tif,
	  testing/regression/reference/anim21.tif,
	  testing/regression/reference/anim22.tif,
	  testing/regression/reference/anim23.tif,
	  testing/regression/reference/anim24.tif,
	  testing/regression/reference/anim25.tif,
	  testing/regression/reference/anim26.tif,
	  testing/regression/reference/anim27.tif,
	  testing/regression/reference/anim28.tif,
	  testing/regression/reference/anim29.tif,
	  testing/regression/reference/anim30.tif,
	  testing/regression/reference/anim31.tif,
	  testing/regression/reference/anim32.tif,
	  testing/regression/reference/anim33.tif,
	  testing/regression/reference/anim34.tif,
	  testing/regression/reference/anim35.tif,
	  testing/regression/reference/anim36.tif,
	  testing/regression/reference/anim37.tif,
	  testing/regression/reference/anim38.tif,
	  testing/regression/reference/anim39.tif,
	  testing/regression/reference/anim40.tif,
	  testing/regression/reference/anim41.tif,
	  testing/regression/reference/anim42.tif,
	  testing/regression/reference/anim43.tif,
	  testing/regression/reference/anim44.tif,
	  testing/regression/reference/anim45.tif,
	  testing/regression/reference/anim46.tif,
	  testing/regression/reference/anim47.tif,
	  testing/regression/reference/anim48.tif,
	  testing/regression/reference/anim49.tif,
	  testing/regression/reference/bezier.tif,
	  testing/regression/reference/bug1013736.tif,
	  testing/regression/reference/bug1014043.tif,
	  testing/regression/reference/bug1023260.tif,
	  testing/regression/reference/bug1030593.tif,
	  testing/regression/reference/bug1049628.tif,
	  testing/regression/reference/bug1052918.tif,
	  testing/regression/reference/bug1063660.tif,
	  testing/regression/reference/bug1066350.tif,
	  testing/regression/reference/bug1073845.tif,
	  testing/regression/reference/bug1104545.tif,
	  testing/regression/reference/bug771953.tif,
	  testing/regression/reference/bug830790.tif,
	  testing/regression/reference/bug878587.tif,
	  testing/regression/reference/bug900120.tif,
	  testing/regression/reference/bug902510.tif,
	  testing/regression/reference/bug906365.tif,
	  testing/regression/reference/bug925879.tif,
	  testing/regression/reference/bug931713.tif,
	  testing/regression/reference/bug938755.tif,
	  testing/regression/reference/bug942508.tif,
	  testing/regression/reference/bug942638.tif,
	  testing/regression/reference/bug948827.tif,
	  testing/regression/reference/cam_mb.tif,
	  testing/regression/reference/catmull-rom.tif,
	  testing/regression/reference/cellnoise.tif,
	  testing/regression/reference/colpervertex_test.tif,
	  testing/regression/reference/complexnurbs1.tif,
	  testing/regression/reference/coneparams1.tif,
	  testing/regression/reference/coordsys_test.tif,
	  testing/regression/reference/croptest.tif,
	  testing/regression/reference/csg_test.tif,
	  testing/regression/reference/csg_test2.tif,
	  testing/regression/reference/defsurf.tif,
	  testing/regression/reference/delayedproc.tif,
	  testing/regression/reference/detail.tif,
	  testing/regression/reference/disp1.tif,
	  testing/regression/reference/disp_poly.tif,
	  testing/regression/reference/dof.tif,
	  testing/regression/reference/dofmb.tif,
	  testing/regression/reference/env_test.tif,
	  testing/regression/reference/eyeplanetest.tif,
	  testing/regression/reference/funcset1.tif,
	  testing/regression/reference/funcset10.tif,
	  testing/regression/reference/funcset11.tif,
	  testing/regression/reference/funcset2.tif,
	  testing/regression/reference/funcset3.tif,
	  testing/regression/reference/funcset4.tif,
	  testing/regression/reference/funcset5.tif,
	  testing/regression/reference/funcset6.tif,
	  testing/regression/reference/funcset7.tif,
	  testing/regression/reference/funcset8.tif,
	  testing/regression/reference/funcset9.tif,
	  testing/regression/reference/genpoly_test.tif,
	  testing/regression/reference/invtrig.tif,
	  testing/regression/reference/lincurve_test3.tif,
	  testing/regression/reference/lincurve_test4.tif,
	  testing/regression/reference/linear.tif,
	  testing/regression/reference/matte.tif,
	  testing/regression/reference/mblur.tif,
	  testing/regression/reference/mblur2a.tif,
	  testing/regression/reference/mblur2b.tif,
	  testing/regression/reference/mblur_1x1.tif,
	  testing/regression/reference/mesh_uniform.tif,
	  testing/regression/reference/mod_st2_test.tif,
	  testing/regression/reference/mod_st_test.tif,
	  testing/regression/reference/orientation.tif,
	  testing/regression/reference/orientation_onesided.tif,
	  testing/regression/reference/periodic_test.tif,
	  testing/regression/reference/points1.tif,
	  testing/regression/reference/poly_test.tif,
	  testing/regression/reference/polyuser.tif,
	  testing/regression/reference/quads_test.tif,
	  testing/regression/reference/readarchive.tif,
	  testing/regression/reference/real_env_test.tif,
	  testing/regression/reference/reverseorientation.tif,
	  testing/regression/reference/rundetailproc.tif,
	  testing/regression/reference/runsphereproc.tif,
	  testing/regression/reference/sds_displacement.tif,
	  testing/regression/reference/shadtest.tif,
	  testing/regression/reference/simplecone.tif,
	  testing/regression/reference/simplecylinder.tif,
	  testing/regression/reference/simplenurbs.tif,
	  testing/regression/reference/simplesphere.tif,
	  testing/regression/reference/skew1.tif,
	  testing/regression/reference/softshadow.tif,
	  testing/regression/reference/sphereparams1.tif,
	  testing/regression/reference/std_st_test.tif,
	  testing/regression/reference/sticky_patch.tif,
	  testing/regression/reference/subdiv1.tif,
	  testing/regression/reference/subdiv2.tif,
	  testing/regression/reference/subdiv3.tif,
	  testing/regression/reference/subdiv4.tif,
	  testing/regression/reference/teapotgeom.tif,
	  testing/regression/reference/test_func_setup.tif,
	  testing/regression/reference/tmap_test.tif,
	  testing/regression/reference/torus_bin.tif,
	  testing/regression/reference/torus_bin_gzip.tif,
	  testing/regression/reference/torus_gzip.tif,
	  testing/regression/reference/torusparams1.tif,
	  testing/regression/reference/trig.tif,
	  testing/regression/reference/trim_test.tif,
	  testing/regression/reference/userparams.tif,
	  testing/regression/reference/uv_test.tif,
	  testing/regression/reference/vase.tif: Change output compression
	  to "lzw" to make the suite work well with PIL.

2006-02-16 10:42  minty

	* aqsistypes/logging.cpp, aqsistypes/noise1234.cpp,
	  aqsistypes/posix/file_system.cpp, aqsistypes/random.cpp,
	  aqsistypes/validate.h, aqsistypes/vector3d.h,
	  displays/d_xpm/aspXpm.cpp, displays/display/display.cpp,
	  platform/default/SConscript, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/render/attributes.h, renderer/render/bucket.cpp,
	  renderer/render/bucket.h, renderer/render/condition.cpp,
	  renderer/render/iattributes.h, renderer/render/iddmanager.h,
	  renderer/render/imagebuffer.cpp, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/ishaderdata.h,
	  renderer/render/ishaderexecenv.h, renderer/render/kdtree.h,
	  renderer/render/lath.cpp, renderer/render/micropolygon.cpp,
	  renderer/render/micropolygon.h, renderer/render/nurbs.cpp,
	  renderer/render/occlusion.cpp, renderer/render/options.h,
	  renderer/render/patch.cpp, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/quadrics.cpp, renderer/render/renderer.cpp,
	  renderer/render/ri.cpp, renderer/render/ri_cache.h,
	  renderer/render/shadowmap.cpp, renderer/render/subdivision2.cpp,
	  renderer/render/surface.h, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h, renderer/render/trimcurve.cpp,
	  rib/rib2/bdec.cpp, rib/rib2/librib.h, rib/rib2/parser.yy,
	  rib/rib2/scanner.ll, rib/rib2stream/librib2stream.cpp,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/icodegen.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll,
	  shadercompiler/slparse/typecheck.cpp,
	  shadercompiler/slparse/vardef.cpp,
	  shadercompiler/slxargs/slx.cpp,
	  texturing/plugins/bmp2tif/bmp2tif.c,
	  texturing/plugins/common/pixelsave.c,
	  texturing/plugins/gif2tif/gif2tif.c,
	  texturing/plugins/jpg2tif/jpg2tif.c,
	  texturing/plugins/pcx2tif/pcx2tif.c,
	  texturing/plugins/png2tif/png2tif.c,
	  texturing/plugins/tga2tif/tga2tif.c: Fix some compiler warnings
	  and enable -Wall for g++. These are mostly
	  signage errors and unused variables.

2006-02-10 15:15  pgregory

	* displays/display/display.cpp, platform/win32/SConscript,
	  renderer/ddmanager/ddmanager.cpp, renderer/raytrace/raytrace.h,
	  renderer/render/bucket.h, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/iattributes.h,
	  renderer/render/ilightsource.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/iraytrace.h,
	  renderer/render/irenderer.h, renderer/render/ishader.h,
	  renderer/render/ishaderdata.h, renderer/render/isurface.h,
	  renderer/render/itexturemap.h, renderer/render/itransform.h,
	  renderer/render/lath.cpp, renderer/render/lath.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/motion.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/patch.cpp,
	  renderer/render/patch.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.cpp,
	  renderer/render/procedural.h, renderer/render/quadrics.cpp,
	  renderer/render/quadrics.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/shaders.h, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h, renderer/render/transform.cpp,
	  renderer/render/transform.h, renderer/render/trimcurve.cpp,
	  renderer/render/trimcurve.h,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h: Merge in the autoshadows
	  work.
	  Auto shadows is now working in it's basic form. Use the option...
	  Option "Render" "integer multipass" [1]
	  ...to enable multipass rendering. Then for each lightsource that
	  needs a shadow map use the attribute...
	  Attribute "autoshadows" "string shadowmapname" ["<name>"]
	  "integer res" [<res>]
	  ...and use the same <name> in your lightsource shader parameter
	  list.
	  
	  Only works for 'transformed' lights at the moment, lights that
	  use "from" and "to" to specify the location and direction will
	  not work.

2006-02-03 15:16  minty

	* aqsisrc.in: Add debugdd to the aqsisrc.in

2006-02-03 15:15  minty

	* renderer/ddmanager/SConscript, renderer/ddmanager/ddmanager.cpp,
	  renderer/ddmanager/debugdd.cpp, renderer/ddmanager/debugdd.h: Add
	  debugdd, a statically linked display driver for debugging. This
	  helps when using
	  tools which cannot operate with dynamic linking, such as gcov and
	  gprof.

2006-02-03 15:12  minty

	* platform/default/SConscript: Disable fltk and multtimer for
	  linux, the former is crashing the dd, the latter
	  is currently producing rubbish numbers and leaks RAM.

2006-02-01 12:47  pgregory

	* SConstruct: Added an extra call to update the options on the
	  environment, so that the "install_prefix" is properly setup
	  before the default install locations are initialised. This works
	  because "install_prefix" is specified in the main SConstruct, and
	  not in the system specific configurations.
	  The second call to update the options will include only the ones
	  added in the system specific configuration.

2006-02-01 12:34  pgregory

	* SConstruct: Move the initialisation of the default install
	  folders to before the system SConscripts, allowing the systems
	  specific configurations to alter them should they need to.

2006-02-01 12:13  pgregory

	* SConstruct: Fixed some naming issues with the tar archive.
	  Added NSIS.py to the distribution archive.

2006-02-01 10:48  pgregory

	* SConstruct: Fix the dist_zip/dist_tar targets to package into a
	  folder with the aqsis version in it, and use that as the root in
	  the archive.

2006-01-31 19:42  ltatkinson

	* distribution/win/nsis/setup.nsi: Improved the display of example
	  content within the Windows 'Start Menu' (which inadvertantly
	  means we now ship an additional example file).

2006-01-31 19:27  ltatkinson

	* content/ribs/features/layeredshaders/render.bat: BAT file for
	  Win32/64 installer.

2006-01-31 19:12  ltatkinson

	* distribution/win/nsis/setup.nsi: Removed dependency on NSIS
	  'ShellLink' plugin.

2006-01-31 11:59  ltatkinson

	* distribution/win/nsis/setup.nsi: Fixed issue which required
	  either a log-off or reboot to activate the PATH changes made by
	  the installer - Now uses NSIS 'SendMessage' command.

2006-01-30 17:41  pgregory

	* NSIS.py, SConstruct, build_support.py, displays/d_exr/SConscript,
	  distribution/SConscript, distribution/win/SConscript,
	  distribution/win/nsis/SConscript, platform/win32/SConscript,
	  renderer/ddmanager/SConscript, shadercompiler/slpp/SConscript,
	  texturing/plugins/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/common/SConscript,
	  texturing/plugins/exr2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/png2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript: Refactor the source archive
	  building target to properly build all the necessary files.
	  Tested on Win32 only, including the NSIS installer.

2006-01-30 17:36  ltatkinson

	* distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi: Updated to support BAT file
	  rendering.

2006-01-30 17:34  ltatkinson

	* content/ribs/scenes/vase/render.bat: BAT file for Windows
	  installer.

2006-01-30 14:46  pgregory

	* SConstruct, distribution/win/nsis/setup.nsi: Integrate NSIS build
	  into the SCons system more, now passes the version information
	  through to NSIS at build time.

2006-01-30 13:39  ltatkinson

	* distribution/win/nsis/page_tasks.ini,
	  distribution/win/nsis/setup.nsi: Removed 'Don't update PATH'
	  option and all instances of setup 'Editions' (now focusing on 1
	  installer).

2006-01-30 11:22  mw_matti

	* SConstruct: small typo fixed

2006-01-30 11:15  pgregory

	* platform/win32/SConscript: Add support to the SCons build for the
	  NSIS installer.
	  Calling SCons with the target 'nsis-standard' will create the
	  standard NSIS Win32 installer if you have NSIS installed.

2006-01-30 10:07  minty

	* SConstruct: Remove the aqfb reference in SConstruct, aqfb isn't
	  in the tree yet.

2006-01-30 09:54  minty

	* aqsistypes/win32/SConscript: Fix quoting of the Export so that
	  win32 can build again.

2006-01-30 09:39  minty

	* aqsistypes/posix/SConscript, aqsistypes/win32/SConscript: Let
	  each paltform maintain it's own list of platform specific files
	  for the
	  build.

2006-01-29 18:23  ltatkinson

	* distribution, distribution/win, distribution/win/nsis,
	  distribution/win/nsis/page_tasks.ini: 'Additional Tasks' page for
	  NSIS installer (a dependency).

2006-01-27 12:00  minty

	* rib/api/SConscript: Make SCons install ri.inl, needed by ri.h

2006-01-27 11:59  minty

	* SConstruct, aqsistypes/SConscript, argparse/SConscript,
	  renderer/render/SConscript, rib/rib2/SConscript,
	  rib/rib2ri/SConscript, rib/rib2stream/SConscript,
	  shadercompiler/slxargs/SConscript: Make SCons install the headers
	  for the utility libraries

2006-01-26 00:38  pgregory

	* renderer/render/texturemap.h: Update Doxygen comments.

2006-01-25 17:09  minty

	* texturing/teqser/teqser.cpp: Update teqser to use log filtering
	  (Needs more owrk)

2006-01-25 16:55  minty

	* texturing/teqser/teqser.cpp: Correct the teqser help message

2006-01-25 04:10  joron

	* renderer/render/options.cpp, renderer/render/ri.cpp: The imager
	  shader default variables were not initialized so any default
	  values were assumed to be zero.
	  And I reversed the order between init and the local parameters
	  setup (from the rib file). So the shader is load up, initialize
	  default variables than the local variable setup is called.
	  
	  The net effect was any imager shader which depends on the default
	  value (like
	  aqsis/aqsis/contents/shader/imager/fakesky.sl) did not work
	  anymore.

2006-01-24 23:08  ltatkinson

	* content/shaders/imager/gradient.sl: Moved file here from
	  'shaders' (as this was the wrong place for it).

2006-01-23 14:02  pgregory

	* renderer/render/bucket.cpp: Fx bug #1412162 - Imager shader can't
	  change output alpha.
	  Now it recalculates the alpha as (Oi.r+Oi.g+Oi.b)/3.0 in the same
	  was as the non-imager alpha is calculated, except not taking into
	  account coverage, as it is presumed that the Oi calculated by the
	  imager affects the whole pixel.

2006-01-23 13:37  pgregory

	* SConstruct, renderer/render/SConscript: Fix the distribution of
	  the version.h file.

2006-01-23 13:36  pgregory

	* renderer/render/bucket.cpp, renderer/render/options.cpp,
	  renderer/render/options.h, renderer/render/ri.cpp: Modify the
	  Imager shader support so that it works more like the other shader
	  types, at least from the view of ri.cpp.
	  Add support for layered imager shaders.

2006-01-20 14:20  pgregory

	* Doxyfile: Update to the latest Doxygen release.

2006-01-20 09:42  pgregory

	* renderer/render/polygon.cpp, renderer/render/polygon.h: Fix bug
	  #141074. The transformation of RiPointsPolygons was broken due to
	  the work underway to support autoshadows.
	  
	  The polygon points class had a check to ensure that it was only
	  transformed once. This was because the individual polygons used
	  to pass their Transform() calls through to the points, and if a
	  transform was applied to a more than one of the member polygons,
	  the points would have been transform twice, incorrectly.
	  
	  Now, the points can be transformed as many times as required, but
	  the Transform() call on the individual polygons causes an error
	  and does nothing. This is safe because the individual polygons
	  don't enter the pipeline until the first split, at which point
	  the rendering has begun, so transforming the surfaces is invalid
	  anyway.

2006-01-19 09:50  pgregory

	* renderer/render/quadrics.cpp: Fix a problem with multiple
	  transforms on quadrics, it was post multiplying the
	  transformation matrix, whereas it needs to pre-multiply it. Not a
	  problem before as we only really ever transformed once at
	  instantiation time, but now, due to ongoing work for
	  auto-shadows, we transform twice, object-->world, then
	  world-->camera.

2006-01-18 10:04  mw_matti

	* renderer/render/shadowmap.cpp: fixed sqrt (int) being ambigious
	  under MSVC++ 7.1

2006-01-18 04:56  joron

	* renderer/render/texturemap.cpp: This is to fix any problem when
	  aqsis reaches the maximum of texture memory.
	  The destructor of the CqTextureMap will clean all the segment
	  partitions at the end of the life.

2006-01-18 01:28  joron

	* renderer/render/shadowmap.cpp, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h: This is to speed up enormously
	  occlusion() 256x256x256.
	  <aqsis/aqsis/content/ribs/features/occlusion> example
	  
	  I change a bit CqTextureMap class to contain two type of list of
	  segments.
	  One list as before (m_apFlat) which is straight list of
	  CqTextureMapBuffer.
	  Second list is an array of 256 lists which organized the tiles
	  according to the directory id. (index).
	  In case of occlusion each lists will have only the segment for a
	  certain shadowmap. cubic environment will hold roughly 6 lists (6
	  faces).
	  In case of mipmaps (regular texture) about the log2() of the
	  min(width,height )
	  
	  I simplify a lot the ::GetBuffer() to kept.

2006-01-17 16:14  pgregory

	* renderer/render/ri.cpp, rib/api/SConscript, rib/api/api.xml,
	  rib/api/apidebug.xsl: Add support for echoing the data for all Ri
	  calls to the log when debug output is enabled.
	  All handled via the XML/XSLT API description, generating output
	  code from the argument descriptions.
	  Currently doesn't output PARAMETERLIST arguments, only plain
	  arguments.

2006-01-16 22:25  shortwave

	* tools/BtoR/ShaderEditorGUI.py: Some updates and stuff, still
	  fixing things, don't expect it to work.

2006-01-16 14:15  shortwave

	* tools/BtoR/BtoR.py, tools/BtoR/BtoRconfig.xml,
	  tools/BtoR/ShaderEditorGUI.py, tools/BtoR/__init__.py: *** empty
	  log message ***

2006-01-16 06:22  joron

	* renderer/render/shadowmap.cpp, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h: occlusion() is a lot more faster.
	  You will see gain of performance something
	  like from 30 hours down to 4 or 5 minutes when you use occlusion
	  maps.
	  
	  Essentially I reduce the number of sampling for occlusion map
	  based on the fact a occlusion map has a lot of maps.
	  
	  Is this shadowmap an occlusion map (NumPages() > 1) ?
	  NumPages() contains the number of shadowmaps which were used
	  to create this occlusion map.
	  if ns, nt is computed assuming only one shadow map; let try
	  divide
	  both numbers by the sqrt() of the number of maps.
	  
	  eg: assuming I have 256 shadowmaps (256x256) in one occlusion map
	  and ns = nt = 16 (depends solely of the du,dv,blur)
	  Than the number of computations will be at the worst case
	  (re-visit each Z values on each shadowmaps).
	  256 shadows * ns * nt * 256 * 256. or the 4G operations.
	  
	  We need to reduce the number of operations by one or two order
	  of magnitude then.
	  An solution is to divide the numbers ns,nt by the sqrt(number of
	  shadows).
	  In the examples something in range of
	  256x256x256 x (16 x 16) / (8 x 8) or 256 x 256 x 256 x 2 x 2 or
	  6M
	  operations good start.
	  But what happens if you only have 4 shadows ?
	  256x256x256 x (16 x 16) /( 2 x 2) or 256x256x256x64 about 1G
	  it is worst than with 256 maps. So I chose another solution is to
	  do
	  following let recompute ns, nt so the number of operations will
	  never reach more 256k.
	  1) Bigger the number of shadowmap smaller ns, nt will be
	  required;
	  2) Bigger the shadowmaps than smaller ns, nt;
	  
	  if (NumPages() > 1) {
	  TqInt occl = (256 * 1024) / (NumPages() * XRes() * YRes());
	  occl = CEIL(sqrt(occl));
	  occl = MAX(2, occl);
	  ns = nt = occl;
	  }
	  
	  I also add the necessary support for occlusion maps to benefit
	  from
	  the same enhancement as the regular shadowmap mainly the minz
	  value.
	  Also made a cache for each shadowmaps based on the number of maps
	  instead of one per shadow it is not a std::map cache.

2006-01-14 19:52  joron

	* displays/display/display.cpp, renderer/render/shadowmap.cpp,
	  renderer/render/texturemap.cpp, renderer/render/texturemap.h:
	  make sure the occlusion maps benefit from the same kind of
	  optimization as the shadowmap could have. Mainly each shadowmap
	  composing an occlusion map store its minimum value. Later when
	  occlusion() is called it looks first if the min. value was saved
	  for a certain shadowmap and discard quickly the sample which
	  could have been in shadow.
	  
	  make sure the display compute the min value as double value (to
	  save in the tiff file as SMinSample).
	  
	  make sure if you use either MakeShadow, MakeOcclusion or output
	  directly as "shadow" the minimum value for a shadow is saved
	  correctly into the shadow tiff file or occlusion tiff file.

2006-01-13 06:06  joron

	* renderer/render/shadowmap.cpp: A sample could be declared not in
	  shadow if its Z value is smaller than the minimum z value of the
	  shadowmap (MinZ() if provided).

2006-01-13 03:24  joron

	* renderer/render/shadowmap.cpp: We could not test against the
	  minimum value of Z of shadowmap. For one is never really possible
	  to get that and it is wrong.

2006-01-13 02:13  joron

	* displays/display/display.cpp, renderer/render/micropolygon.cpp,
	  renderer/render/shadowmap.cpp, renderer/render/texturemap.h:
	  Speed up the shadow().: we do an area computation to evaluate the
	  z distance from the light in order to know if z value of an
	  object is in shadow or not.
	  
	  I tried to eliminate the area computation for three cases:
	  1) if a minimum value of z in a tiff shadowmap is greater than Z
	  of a point we know for sure the P is not in shadow.
	  2) if a minimum value of z in a tiff tile buffer is greater than
	  Z of a point
	  3) if a maximum value (not infinite) of tile buffer is lower than
	  Z of a point we know the P is in shadow.
	  
	  In order to have 1) I need to change slightly display.cpp
	  display.cpp will save the minimum Z value; later shadow() could
	  reject
	  any object which has z value lower than the minimum Z value of
	  the complete
	  tiff shadowmap.
	  
	  In order to do 2),3) I need to change shadowmap.cpp
	  shadowmap.cpp will visit each tile of shadowmap; it will compute
	  once the minz and maxz; if for a tile the minz/maxz will be used
	  to reduce computation required for the shadow.
	  
	  texturemap.h I add more method MinMax() for CqShadowMapBuffer.
	  
	  micropolygon.cpp is just a correction of orthograph.

2006-01-12 13:54  pgregory

	* SConstruct, build_check.py, platform/darwin/SConscript,
	  platform/default/SConscript, platform/win32/SConscript,
	  texturing/plugins/exr2tif/SConscript: Clean up the OpenEXR
	  support.

2006-01-12 13:34  joron

	* renderer/render/shadowmap.cpp: Small optimization; make sure the
	  first tile is not load but instead the real
	  first pertinant tile is loaded. Cache cohesion is preserved
	  better.
	  
	  Small optization; reduce the burden of computation of bias.

2006-01-12 13:00  pgregory

	* SConstruct, build_check.py, platform/win32/SConscript,
	  texturing/plugins/SConscript: Allow OpenEXR support to be
	  switched off cleanly should the libraries not be installed.

2006-01-11 03:56  joron

	* platform/default/SConscript: Active the MultiTimer.cpp for Linux
	  too... in principle it should work as
	  on macosx.

2006-01-11 03:38  joron

	* displays/d_exr/tst.rib, platform/darwin/SConscript: tst.rib is
	  just remove the tif production and keep only the .exr files
	  
	  SConscript is to trigger the stats back alive.

2006-01-11 03:34  joron

	* aqsistypes/MultiTimer.cpp, aqsistypes/MultiTimer.h: Put back the
	  stats for MacOSX.

2006-01-10 13:36  shortwave

	* tools/BtoR/BtoR.py, tools/BtoR/ConfirmDialog.bpg,
	  tools/BtoR/ShaderEditorGUI.bpg, tools/BtoR/ShaderEditorGUI.py,
	  tools/BtoR/dialog.py: Updated with modularized code, new shader
	  editor (still doesn't work, but it's here for people to look at
	  (and so I can download it at work, heh), and also has the
	  "confirm dialog".

2006-01-10 13:25  joron

	* SConstruct, aqsisrc.in, build_check.py,
	  displays/d_xpm/SConscript, platform/darwin/SConscript,
	  platform/default/SConscript, texturing/plugins/SConscript: add
	  support for OpenEXR; I add to scons the directives in order to
	  produce
	  both exr2tif and d_exr.

2006-01-10 03:28  joron

	* renderer/render/micropolygon.cpp: Put it back so fig12.12.rib
	  works again if you do
	  Option "renderer" "int spline" 1
	  see earlier check-in.

2006-01-08 14:18  joron

	* displays/d_exr/SConscript, displays/d_exr/exrtest.bat,
	  displays/d_exr/tst.rib: add the directive in order to output the
	  result of aqsis to OpenEXR.
	  I add also a small unit test call exrtest.bat, tst.rib in order
	  to know if
	  the display works.

2006-01-08 14:16  joron

	* texturing/plugins/exr2tif/SConscript: add the directive to
	  compile exr2tif plugin; it allows to read OpenEXR files to
	  convert to tiff file.

2006-01-05 13:32  shortwave

	* tools/BtoR, tools/BtoR/ShaderEditor.py: The shader editor code.
	  This code relied upon blenderman's support functions to save
	  material information, so it's not 100% yet. I plan to add XML
	  support to this, and the rest of BtoR, I'm providing this so
	  everyone can get a look at the method used (popen2, sltells,
	  etc). That will be changing to CgKit's method very soon.

2006-01-04 22:36  pgregory

	* platform/win32/SConscript, texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript: Enable libjpeg support
	  under MinGW.
	  Change link order in plugins, MinGW is order dependent with
	  respect to library linking.

2006-01-03 17:18  pgregory

	* build_check.py, platform/win32/SConscript,
	  renderer/render/libaqsis.def: Fix new logging to work on
	  Win32/MSVC.
	  Enable use of libjpeg for plugin support.
	  Add a check for libjpeg.

2006-01-03 14:42  pgregory

	* renderer/render/imagebuffer.cpp, renderer/render/imagebuffer.h,
	  renderer/render/ri.cpp: Implement 2 stage world setup in
	  preparation for auto-shadow pass.

2006-01-03 14:21  pgregory

	* platform/darwin/SConscript, renderer/render/micropolygon.cpp,
	  renderer/render/micropolygon.h: Fix #1396028 - Post displacement
	  Ng is incorrect. Now aqsis recalculates the geometric normal
	  after displacement.

2006-01-02 19:39  joron

	* testing/regression/RIBs/Scenes/test_.rib,
	  testing/regression/RIBs/Scenes/test_SW_0.rib: Put back into this
	  branch; the soft shadow test I have put into
	  aqsis/renderer/ribfiles a while ago.

2006-01-02 19:22  joron

	* SConstruct, aqsisrc.in: add d_xpm and make sure the plugins got
	  compiled/linked

2006-01-02 19:20  joron

	* displays/d_xpm, displays/d_xpm/README, displays/d_xpm/SConscript,
	  displays/d_xpm/aspXpm.cpp, displays/d_xpm/aspXpm.h,
	  displays/d_xpm/teapotgeom.rib, displays/d_xpm/xpm.cpp,
	  displays/d_xpm/xpm4pixie.cpp, displays/d_xpm/xpmtest.bat: add
	  back d_xpm into the aqsis/displays/x_xpm directory

2006-01-02 16:46  joron

	* texturing/plugins/SConscript: Add png2tif to the sequence of
	  built plugins/texturing.

2006-01-02 16:46  joron

	* texturing/plugins/png2tif/SConscript: Add back png2tif to the
	  sequence of built plugins/texturing.

2006-01-02 16:40  joron

	* texturing/plugins/SConscript,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/tga2tif/SConscript: instead of compiled a local
	  copy of pixelsave.c; at the beginning pixelsave.c will be
	  compiled and store as a static library. Than later all other
	  plugins will link (they are dynamic library) with a static
	  library. It will prevent multiples defined at linkage time since
	  some plugins are in fact built on top of others plugins. In that
	  case eg. tga2tif use jpg2tif will only like jpg2tif other like
	  pcx2tif will link with common library to resolve the save_tiff()
	  function.
	  
	  It has to be tested on NT/XP since it is possible this trick
	  won't work than it will be a matter to have the sequence of
	  build.
	  common first
	  jpg2tif second
	  ppm2tif third
	  than the rest of plugins could follow since
	  
	  tga2tif depends of jpg2tif
	  same for bmp2tif
	  
	  I will try to fix png2tif in a moment.

2006-01-02 16:34  joron

	* texturing/plugins/common/SConscript: Add the directive to create
	  a static library called common.lib, common.a which
	  is used later by all the texturing plugins to save to a tiff
	  file.
	  
	  More or less what was done prior into aqsis 1.0.0 to save a tiff
	  file.

2006-01-02 14:58  joron

	* shadercompiler/shaderexecenv/shadeops.cpp: If cosangle is equal
	  0.0f don't bother to poke the occlusion map the result
	  will be zero anyway.

2006-01-02 14:36  joron

	* renderer/render/micropolygon.cpp: This fix is only a temporary
	  measure only it allows other solution must be found
	  as soon as possible to replace it.
	  
	  if you set into your .aqsisrc
	  Option "render" "int spline" 1
	  than the computation of du, dv will change to be base of the
	  difference between
	  two du,dv from to colunm, row elements or based on spline()
	  interpolation.
	  
	  In an ideal world; the du,dv will be 1 for micropolygon from
	  polygon it relies on the behalf of the user to know better...
	  since no information is kept to know from what type of primitives
	  the microgrid comes from.
	  
	  Otherwise it will as before; fig12.12.rib (from arman) will
	  render correctly than.
	  
	  Here a part of the changes:
	  The rest is purely format (astyle was called on the file to make
	  it more readable).
	  
	  if (bSpline == TqTrue)
	  {
	  TqFloat v1, v2;
	  TqInt GridX = i % ( uRes + 1 );
	  
	  if ( GridX < uRes ) {
	  
	  pVar(EnvVars_u) ->GetValue( v1, i + 1 );
	  pVar(EnvVars_u) ->GetValue( v2, i );
	  TqFloat dv = v1 - v2;
	  pVar(EnvVars_du) ->SetFloat(dv, i );
	  sp_u[GridX] = CqVector4D(dv, 0, 0, 0);
	  } else {
	  // Make sure uRes at least equal to 4
	  if (uRes < 4) {
	  for (TqInt k= uRes; k < 4; k++) {
	  sp_u[k] = sp_u[uRes-1];
	  }
	  }
	  
	  CqVector4D res = sp_u.Evaluate(1.0f - 1.0f/(float) uRes);
	  
	  pVar(EnvVars_du) ->SetFloat( res.x(), i );
	  }
	  }
	  if ( USES( lUses, EnvVars_dv ) ){
	  TqFloat v1, v2;
	  TqInt GridY = ( i / ( uRes + 1 ) );
	  
	  if ( GridY < vRes ) {
	  pVar(EnvVars_v) ->GetValue( v1, i + uRes + 1 );
	  pVar(EnvVars_v) ->GetValue( v2, i );
	  TqFloat dv = v1 - v2;
	  pVar(EnvVars_dv) ->SetFloat( dv, i );
	  sp_v[GridY] = CqVector4D(dv, 0, 0, 0);
	  } else {
	  // Make sure vRes at least equal to 4
	  if (vRes < 4) {
	  for (TqInt k= vRes; k < 4; k++) {
	  sp_v[k] = sp_v[vRes-1];
	  }
	  }
	  CqVector4D res = sp_v.Evaluate(1.0f - 1.0f/(float) vRes);
	  pVar(EnvVars_dv) ->SetFloat( res.x(), i );
	  }
	  }

2006-01-02 13:21  joron

	* displays/display/display.cpp: Remove the output line with
	  "Compression type" ... from the output; it
	  was crashing somehow the display i/f for macosx.
	  
	  Increase the precision for the percentage

2005-12-28 16:46  tshead

	* aqsistypes/logging.cpp, aqsistypes/logging.h,
	  aqsistypes/plugins.cpp, argparse/aptest.cpp,
	  displays/display/display.cpp, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp, renderer/render/condition.cpp,
	  renderer/render/curves.cpp, renderer/render/environment.cpp,
	  renderer/render/graphicsstate.cpp,
	  renderer/render/imagebuffer.cpp, renderer/render/imagepixel.cpp,
	  renderer/render/mpdump.cpp, renderer/render/options.cpp,
	  renderer/render/polygon.cpp, renderer/render/procedural.cpp,
	  renderer/render/renderer.cpp, renderer/render/ri.cpp,
	  renderer/render/shadowmap.cpp, renderer/render/stats.cpp,
	  renderer/render/surface.cpp, renderer/render/surface.h,
	  renderer/render/texturemap.cpp, rib/api/apivalidate.xsl,
	  rib/ri2rib/error.cpp, rib/rib2/bdec.cpp,
	  rib/rib2/genkeywords.cpp, rib/rib2/librib.cpp,
	  shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/parser.yy, texturing/teqser/teqser.cpp:
	  BUG: Added Aqsis::log() to the logging API, to ensure that
	  logging consistently goes to the same stream, even on platforms
	  where shared libraries seem to each have their own cerr stream

2005-12-26 04:00  tshead

	* ., .cvsignore: STYLE: Hiding more built files from CVS

2005-12-26 03:37  tshead

	* ., .cvsignore, aqsistypes/posix, aqsistypes/posix/.cvsignore,
	  platform/default, platform/default/.cvsignore,
	  renderer/ddmanager, renderer/ddmanager/.cvsignore,
	  shadercompiler/slxargs, shadercompiler/slxargs/.cvsignore: STYLE:
	  hide some build-related files from CVS

2005-12-26 03:28  tshead

	* ReleaseNotes: STYLE: Fixed some spelling errors

2005-12-22 16:38  pgregory

	* platform/win32/SConscript: Enable debug build for MinGW

2005-12-21 20:29  pgregory

	* SConstruct: Fix the mingw workaround to work properly under
	  MacOSX and Posix.

2005-12-21 17:42  pgregory

	* platform/win32/SConscript: Fix the MinGW build to use win32libs
	  by default, negating the need for MSYS.

2005-12-21 15:57  pgregory

	* SConstruct, platform/win32/SConscript: Update to properly support
	  MinGW.
	  Fix a problem with the order of specification of
	  "install_prefix".

2005-12-21 13:14  pgregory

	* SConstruct, build_support.py, displays/display/SConscript,
	  platform/darwin/Options.py, platform/darwin/SConscript,
	  platform/default/Options.py, platform/default/SConscript,
	  platform/win32/Options.py, platform/win32/SConscript,
	  renderer/render/SConscript, rib/ri2rib/ri.cpp,
	  shaders/SConscript: Fix order processing of options and
	  environment in SCons build to ensure options work properly.

2005-12-20 22:31  pgregory

	* SConstruct, aqsistypes/win32/aqsis_compiler.h,
	  platform/win32/SConscript, renderer/render/SConscript,
	  renderer/render/texturemap.cpp: Support MingW in the Win32 build.

2005-12-19 21:19  pgregory

	* displays/display/SConscript, platform/darwin/SConscript,
	  platform/default/SConscript, renderer/render/renderer.cpp:
	  Re-enable the old FLTK framebuffer temporarily until the new
	  implementation is in place. Tested only on MacOSX at the moment.
	  Remove errant debug print statement.

2005-12-16 13:32  mbaas

	* renderer/aqsis/aqsis.cpp, renderer/render/ri.cpp: Added some info
	  messages to inform the user what Aqsis is doing

2005-12-14 21:25  pgregory

	* displays/display/display.cpp, shadercompiler/slparse/parser.yy:
	  Fix a problem with the output of log messages from within the
	  display dll under MacOSX, disabled logging output for now.
	  Fix bug #1379411 - Passing an array reference into a spline
	  function crashes aqsl.

2005-12-13 09:12  mbaas

	* build_check.py: Fixed a typo that makes the test fail on
	  non-Windows systems (the fltk header starts with an upper case
	  'F')

2005-12-12 23:25  mbaas

	* testing/regression/rendertester.py: Update to accommodate for the
	  removal of tifftopnm/pnmtotiff from win32libs.

2005-12-12 21:20  mbaas

	* SConstruct: Use the option files with full path information so
	  that they can also be found when SConscript files in deeper
	  directories are executed. Otherwise some options such as
	  'tiff_include_path' cannot be overridden by the user because the
	  platform dependent SConscript file will always dominate (because
	  it thinks the variable hasn't been set at all)

2005-12-12 18:12  pgregory

	* displays/display/SConscript, displays/display/display.cpp,
	  renderer/render/texturemap.cpp: Add some checking for the
	  requested compression type for TIFF files.

2005-12-12 14:25  pgregory

	* build_check.py, platform/win32/SConscript: Add a check for FLTK

2005-12-12 10:34  pgregory

	* SConstruct: Add FLTK include and lib paths to the compile
	  settings.

2005-12-11 20:32  pgregory

	* aqsistypes/MultiTimer.cpp, aqsistypes/MultiTimer.h,
	  aqsistypes/aqerror.h, aqsistypes/aqsis_types.h,
	  aqsistypes/bitvector.cpp, aqsistypes/bitvector.h,
	  aqsistypes/cellnoise.cpp, aqsistypes/cellnoise.h,
	  aqsistypes/color.cpp, aqsistypes/color.h, aqsistypes/exception.h,
	  aqsistypes/file.cpp, aqsistypes/file.h, aqsistypes/list.h,
	  aqsistypes/logging.cpp, aqsistypes/logging_streambufs.h,
	  aqsistypes/lowdiscrep.cpp, aqsistypes/lowdiscrep.h,
	  aqsistypes/matrix.cpp, aqsistypes/matrix.h, aqsistypes/noise.cpp,
	  aqsistypes/noise.h, aqsistypes/noise1234.cpp,
	  aqsistypes/noise1234.h, aqsistypes/plugins.cpp,
	  aqsistypes/plugins.h, aqsistypes/pool.h,
	  aqsistypes/posix/file_system.cpp, aqsistypes/random.cpp,
	  aqsistypes/random.h, aqsistypes/refcount.cpp,
	  aqsistypes/refcount.h, aqsistypes/spline.cpp,
	  aqsistypes/spline.h, aqsistypes/sstring.cpp,
	  aqsistypes/sstring.h, aqsistypes/validate.h,
	  aqsistypes/vector2d.cpp, aqsistypes/vector2d.h,
	  aqsistypes/vector3d.cpp, aqsistypes/vector3d.h,
	  aqsistypes/vector4d.h, aqsistypes/win32/file_system.cpp,
	  argparse/aptest.cpp, argparse/argparse.cpp, argparse/argparse.h,
	  displays/d_exr/dspyhlpr.c, displays/d_exr/dspyhlpr.h,
	  displays/display/display.cpp, displays/display/display.h,
	  displays/display/displayhelpers.c, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/ddmanager/ndspy.h, renderer/raytrace/raytrace.cpp,
	  renderer/raytrace/raytrace.h, renderer/render/attributes.cpp,
	  renderer/render/attributes.h, renderer/render/bilinear.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/clippingvolume.h, renderer/render/condition.cpp,
	  renderer/render/converter.cpp, renderer/render/converter.h,
	  renderer/render/csgtree.cpp, renderer/render/csgtree.h,
	  renderer/render/curves.cpp, renderer/render/curves.h,
	  renderer/render/environment.cpp, renderer/render/focus.h,
	  renderer/render/forwarddiff.h, renderer/render/genpoly.cpp,
	  renderer/render/genpoly.h, renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/iattributes.h,
	  renderer/render/iddmanager.h, renderer/render/idsoshadeops.h,
	  renderer/render/ilightsource.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/imagers.cpp,
	  renderer/render/imagers.h, renderer/render/inlineparse.cpp,
	  renderer/render/inlineparse.h, renderer/render/iraytrace.h,
	  renderer/render/irenderer.h, renderer/render/ishader.h,
	  renderer/render/ishaderdata.h, renderer/render/ishaderexecenv.h,
	  renderer/render/isurface.h, renderer/render/itexturemap.h,
	  renderer/render/itransform.h, renderer/render/kdtree.h,
	  renderer/render/lath.cpp, renderer/render/lath.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/motion.h, renderer/render/mpdump.cpp,
	  renderer/render/mpdump.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/objectinstance.h,
	  renderer/render/occlusion.cpp, renderer/render/occlusion.h,
	  renderer/render/options.cpp, renderer/render/options.h,
	  renderer/render/parameters.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/plane.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.cpp,
	  renderer/render/procedural.h, renderer/render/quadrics.cpp,
	  renderer/render/quadrics.h, renderer/render/render.cpp,
	  renderer/render/render.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/ri.h, renderer/render/ri_cache.h,
	  renderer/render/rifile.h, renderer/render/shadeop.h,
	  renderer/render/shaders.h, renderer/render/shadowmap.cpp,
	  renderer/render/stats.cpp, renderer/render/stats.h,
	  renderer/render/subdivision2.cpp, renderer/render/subdivision2.h,
	  renderer/render/surface.cpp, renderer/render/surface.h,
	  renderer/render/symbols.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h, renderer/render/transform.cpp,
	  renderer/render/transform.h, renderer/render/trimcurve.cpp,
	  renderer/render/trimcurve.h, rib/ri2rib/ascii.cpp,
	  rib/ri2rib/ascii.h, rib/ri2rib/binary.cpp, rib/ri2rib/binary.h,
	  rib/ri2rib/context.cpp, rib/ri2rib/context.h,
	  rib/ri2rib/dictionary.cpp, rib/ri2rib/dictionary.h,
	  rib/ri2rib/error.cpp, rib/ri2rib/error.h,
	  rib/ri2rib/inlineparse.cpp, rib/ri2rib/inlineparse.h,
	  rib/ri2rib/options.h, rib/ri2rib/output.cpp, rib/ri2rib/output.h,
	  rib/ri2rib/outstream.cpp, rib/ri2rib/outstream.h,
	  rib/ri2rib/plstore.cpp, rib/ri2rib/plstore.h, rib/ri2rib/ri.cpp,
	  rib/ri2rib/tokens.cpp, rib/rib2/bdec.cpp, rib/rib2/bdec.h,
	  rib/rib2/genkeywords.cpp, rib/rib2/librib.cpp, rib/rib2/librib.h,
	  rib/rib2/libribtypes.h, rib/rib2/parserstate.h,
	  rib/rib2ri/librib2ri.cpp, rib/rib2ri/librib2ri.h,
	  rib/rib2stream/librib2stream.cpp, rib/rib2stream/librib2stream.h,
	  shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/aqsltell/aqsltell.cpp,
	  shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/dsoshadeops.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/funcdef.h,
	  shadercompiler/slparse/icodegen.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/optimise.cpp,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/typecheck.cpp,
	  shadercompiler/slparse/vardef.cpp,
	  shadercompiler/slparse/vardef.h, shadercompiler/slpp/pp.h,
	  shadercompiler/slpp/pp1.c, shadercompiler/slpp/pp2.c,
	  shadercompiler/slpp/pp3.c, shadercompiler/slpp/pp4.c,
	  shadercompiler/slpp/pp5.c, shadercompiler/slpp/pp6.c,
	  shadercompiler/slpp/pp7.c, shadercompiler/slpp/pp8.c,
	  shadercompiler/slxargs/rcdummy.cpp,
	  shadercompiler/slxargs/slx.cpp, shadercompiler/slxargs/slx.h,
	  testing/systemtests/dsotest/bbox.c,
	  testing/systemtests/runprogramtest/proc-runprogram.c,
	  texturing/plugins/bake2tif/bake2tif.c,
	  texturing/plugins/bmp2tif/bmp2tif.c,
	  texturing/plugins/common/pixelsave.c,
	  texturing/plugins/common/pixelsave.h,
	  texturing/plugins/exr2tif/exr2tif.cpp,
	  texturing/plugins/gif2tif/gif2tif.c,
	  texturing/plugins/jpg2tif/jpg2tif.c,
	  texturing/plugins/pcx2tif/pcx2tif.c,
	  texturing/plugins/png2tif/png2tif.c,
	  texturing/plugins/ppm2tif/ppm2tif.c,
	  texturing/plugins/tga2tif/tga2tif.c, texturing/teqser/teqser.cpp,
	  thirdparty/tinyxml/tinystr.cpp, thirdparty/tinyxml/tinystr.h,
	  thirdparty/tinyxml/tinyxml.cpp, thirdparty/tinyxml/tinyxml.h,
	  thirdparty/tinyxml/tinyxmlerror.cpp,
	  thirdparty/tinyxml/tinyxmlparser.cpp: Apply Artistic Style to
	  bring the source layout back into line.

2005-12-07 18:11  minty

	* aqsistypes/SConscript: Help building on Solaris

2005-12-03 12:57  minty

	* .astylerc: re-import the .astylerc

2005-11-23 22:58  pgregory

	* SConstruct, build_support.py, displays/display/display.cpp,
	  shadercompiler/aqsl/aqslcomp.cpp,
	  shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmoutput.cpp, version.h.in, version.py:
	  Update version information to use version.h, and build version.h
	  from version.h.in and version.py at build time.

2005-11-23 20:14  pgregory

	* content/ribs/scenes/vase, content/ribs/scenes/vase/vase.rib:
	  Added vase scene example.

2005-11-23 11:55  pgregory

	* renderer/aqsis/aqsis.cpp: Remove some accidental debug stuff.

2005-11-23 11:34  pgregory

	* SConstruct: Fix some small problems with the 'dist' build.

2005-11-23 11:26  pgregory

	* shadercompiler/slpp/PP.DOC: Added file missed during refactor.

2005-11-23 11:18  pgregory

	* renderer/render/libaqsis.def: Added file missed during refactor.

2005-11-22 23:40  pgregory

	* ., AUTHORS, COPYING, Doxyfile, INSTALL, README, ReleaseNotes,
	  SConstruct, aqsisrc.in, aqsistypes, aqsistypes/MultiTimer.cpp,
	  aqsistypes/MultiTimer.h, aqsistypes/SConscript,
	  aqsistypes/aqerror.h, aqsistypes/aqsis.h,
	  aqsistypes/aqsis_types.h, aqsistypes/bitvector.cpp,
	  aqsistypes/bitvector.h, aqsistypes/cellnoise.cpp,
	  aqsistypes/cellnoise.h, aqsistypes/color.cpp, aqsistypes/color.h,
	  aqsistypes/exception.h, aqsistypes/file.cpp, aqsistypes/file.h,
	  aqsistypes/list.h, aqsistypes/logging.cpp, aqsistypes/logging.h,
	  aqsistypes/logging_streambufs.h, aqsistypes/lowdiscrep.cpp,
	  aqsistypes/lowdiscrep.h, aqsistypes/matrix.cpp,
	  aqsistypes/matrix.h, aqsistypes/noise.cpp, aqsistypes/noise.h,
	  aqsistypes/noise1234.cpp, aqsistypes/noise1234.h,
	  aqsistypes/plugins.cpp, aqsistypes/plugins.h, aqsistypes/pool.h,
	  aqsistypes/posix, aqsistypes/posix/SConscript,
	  aqsistypes/posix/aqsis_compiler.h,
	  aqsistypes/posix/file_system.cpp, aqsistypes/random.cpp,
	  aqsistypes/random.h, aqsistypes/refcount.cpp,
	  aqsistypes/refcount.h, aqsistypes/spline.cpp,
	  aqsistypes/spline.h, aqsistypes/sstring.cpp,
	  aqsistypes/sstring.h, aqsistypes/validate.h,
	  aqsistypes/vector2d.cpp, aqsistypes/vector2d.h,
	  aqsistypes/vector3d.cpp, aqsistypes/vector3d.h,
	  aqsistypes/vector4d.cpp, aqsistypes/vector4d.h, aqsistypes/win32,
	  aqsistypes/win32/SConscript, aqsistypes/win32/aqsis_compiler.h,
	  aqsistypes/win32/file_system.cpp, aqsistypes/win32/unistd.h,
	  argparse, argparse/SConscript, argparse/aptest.cpp,
	  argparse/argparse.cpp, argparse/argparse.h, build_check.py,
	  build_support.py, content, content/ribs, content/ribs/features,
	  content/ribs/features/aov, content/ribs/features/aov/aov.rib,
	  content/ribs/features/aov/myval.sl,
	  content/ribs/features/deformation_mb,
	  content/ribs/features/deformation_mb/primitives1.rib,
	  content/ribs/features/layeredshaders,
	  content/ribs/features/layeredshaders/grid.tif,
	  content/ribs/features/layeredshaders/layered.rib,
	  content/ribs/features/layeredshaders/texmap.sl,
	  content/ribs/features/occlusion,
	  content/ribs/features/occlusion/envlight.rib,
	  content/ribs/features/occlusion/envlight.sl,
	  content/ribs/features/occlusion/occlmap.py,
	  content/ribs/features/occlusion/occlmap.rib,
	  content/ribs/features/occlusion/world.rib,
	  content/ribs/features/subdivision,
	  content/ribs/features/subdivision/creases.rib,
	  content/ribs/scenes, content/ribs/scenes/microbe,
	  content/ribs/scenes/microbe/microbe.rib, content/shaders,
	  content/shaders/displacement,
	  content/shaders/displacement/AqDMap.sl,
	  content/shaders/displacement/borg_metal.sl,
	  content/shaders/displacement/dented.sl,
	  content/shaders/displacement/micro_bumps.sl,
	  content/shaders/displacement/wavy.sl, content/shaders/imager,
	  content/shaders/imager/bluescreen.sl,
	  content/shaders/imager/exposure.sl,
	  content/shaders/imager/fakesky.sl,
	  content/shaders/imager/filmgrain.sl,
	  content/shaders/imager/iramp.sl, content/shaders/light,
	  content/shaders/light/shadowdistant.sl,
	  content/shaders/light/shadowpoint.sl,
	  content/shaders/light/shadowspot.sl, content/shaders/surface,
	  content/shaders/surface/AqSMap.sl,
	  content/shaders/surface/DPBlueMarble.sl,
	  content/shaders/surface/DPProctext.h,
	  content/shaders/surface/SpaceTest.sl,
	  content/shaders/surface/cd.sl,
	  content/shaders/surface/cddiffract.h,
	  content/shaders/surface/cellnoisetest.sl,
	  content/shaders/surface/curvetube.sl,
	  content/shaders/surface/debug.sl,
	  content/shaders/surface/expensive.sl,
	  content/shaders/surface/face_plastic.sl,
	  content/shaders/surface/microscope.sl,
	  content/shaders/surface/randgrid.sl,
	  content/shaders/surface/show_N.sl,
	  content/shaders/surface/show_st.sl,
	  content/shaders/surface/showuser.sl,
	  content/shaders/surface/sticky_texture.sl,
	  content/shaders/surface/uvtest.sl, displays, displays/d_exr,
	  displays/d_exr/d_exr.cpp, displays/d_exr/dspyhlpr.c,
	  displays/d_exr/dspyhlpr.h, displays/display,
	  displays/display/SConscript, displays/display/display.cpp,
	  displays/display/display.h, displays/display/displayhelpers.c,
	  platform, platform/darwin, platform/darwin/SConscript,
	  platform/default, platform/default/SConscript, platform/win32,
	  platform/win32/SConscript, renderer, renderer/aqsis,
	  renderer/aqsis/SConscript, renderer/aqsis/aqsis.cpp,
	  renderer/ddmanager, renderer/ddmanager/SConscript,
	  renderer/ddmanager/ddmanager.cpp, renderer/ddmanager/ddmanager.h,
	  renderer/ddmanager/ndspy.h, renderer/raytrace,
	  renderer/raytrace/SConscript, renderer/raytrace/raytrace.cpp,
	  renderer/raytrace/raytrace.h, renderer/render,
	  renderer/render/SConscript, renderer/render/attributes.cpp,
	  renderer/render/attributes.h, renderer/render/bilinear.h,
	  renderer/render/bound.cpp, renderer/render/bound.h,
	  renderer/render/bucket.cpp, renderer/render/bucket.h,
	  renderer/render/clippingvolume.h, renderer/render/condition.cpp,
	  renderer/render/condition.h, renderer/render/converter.cpp,
	  renderer/render/converter.h, renderer/render/csgtree.cpp,
	  renderer/render/csgtree.h, renderer/render/curves.cpp,
	  renderer/render/curves.h, renderer/render/environment.cpp,
	  renderer/render/focus.h, renderer/render/forwarddiff.h,
	  renderer/render/genpoly.cpp, renderer/render/genpoly.h,
	  renderer/render/graphicsstate.cpp,
	  renderer/render/graphicsstate.h, renderer/render/iattributes.h,
	  renderer/render/iddmanager.h, renderer/render/idsoshadeops.h,
	  renderer/render/ilightsource.h, renderer/render/imagebuffer.cpp,
	  renderer/render/imagebuffer.h, renderer/render/imagepixel.cpp,
	  renderer/render/imagepixel.h, renderer/render/imagers.cpp,
	  renderer/render/imagers.h, renderer/render/inlineparse.cpp,
	  renderer/render/inlineparse.h, renderer/render/iraytrace.h,
	  renderer/render/irenderer.h, renderer/render/ishader.h,
	  renderer/render/ishaderdata.h, renderer/render/ishaderexecenv.h,
	  renderer/render/isurface.h, renderer/render/itexturemap.h,
	  renderer/render/itransform.h, renderer/render/kdtree.h,
	  renderer/render/lath.cpp, renderer/render/lath.h,
	  renderer/render/lights.cpp, renderer/render/lights.h,
	  renderer/render/micropolygon.cpp, renderer/render/micropolygon.h,
	  renderer/render/motion.h, renderer/render/mpdump.cpp,
	  renderer/render/mpdump.h, renderer/render/nurbs.cpp,
	  renderer/render/nurbs.h, renderer/render/objectinstance.h,
	  renderer/render/occlusion.cpp, renderer/render/occlusion.h,
	  renderer/render/options.cpp, renderer/render/options.h,
	  renderer/render/parameters.cpp, renderer/render/parameters.h,
	  renderer/render/patch.cpp, renderer/render/patch.h,
	  renderer/render/plane.h, renderer/render/points.cpp,
	  renderer/render/points.h, renderer/render/polygon.cpp,
	  renderer/render/polygon.h, renderer/render/procedural.cpp,
	  renderer/render/procedural.h, renderer/render/quadrics.cpp,
	  renderer/render/quadrics.h, renderer/render/render.cpp,
	  renderer/render/render.h, renderer/render/renderer.cpp,
	  renderer/render/renderer.h, renderer/render/ri.cpp,
	  renderer/render/ri.h, renderer/render/ri_cache.h,
	  renderer/render/rifile.h, renderer/render/shadeop.h,
	  renderer/render/shaders.cpp, renderer/render/shaders.h,
	  renderer/render/shadowmap.cpp, renderer/render/stats.cpp,
	  renderer/render/stats.h, renderer/render/subdivision2.cpp,
	  renderer/render/subdivision2.h, renderer/render/surface.cpp,
	  renderer/render/surface.h, renderer/render/symbols.cpp,
	  renderer/render/symbols.h, renderer/render/teapot.cpp,
	  renderer/render/teapot.h, renderer/render/texturemap.cpp,
	  renderer/render/texturemap.h, renderer/render/transform.cpp,
	  renderer/render/transform.h, renderer/render/trimcurve.cpp,
	  renderer/render/trimcurve.h, rib, rib/api, rib/api/SConscript,
	  rib/api/api.xml, rib/api/apicache.xsl, rib/api/apiheader.xsl,
	  rib/api/apivalidate.xsl, rib/ri2rib, rib/ri2rib/SConscript,
	  rib/ri2rib/ascii.cpp, rib/ri2rib/ascii.h, rib/ri2rib/binary.cpp,
	  rib/ri2rib/binary.h, rib/ri2rib/context.cpp,
	  rib/ri2rib/context.h, rib/ri2rib/dictionary.cpp,
	  rib/ri2rib/dictionary.h, rib/ri2rib/error.cpp,
	  rib/ri2rib/error.h, rib/ri2rib/inlineparse.cpp,
	  rib/ri2rib/inlineparse.h, rib/ri2rib/options.h,
	  rib/ri2rib/output.cpp, rib/ri2rib/output.h,
	  rib/ri2rib/outstream.cpp, rib/ri2rib/outstream.h,
	  rib/ri2rib/plstore.cpp, rib/ri2rib/plstore.h, rib/ri2rib/ri.cpp,
	  rib/ri2rib/tokens.cpp, rib/rib2, rib/rib2/SConscript,
	  rib/rib2/bdec.cpp, rib/rib2/bdec.h, rib/rib2/genkeywords.cpp,
	  rib/rib2/librib.cpp, rib/rib2/librib.h, rib/rib2/libribtypes.h,
	  rib/rib2/parser.yy, rib/rib2/parserstate.h, rib/rib2/scanner.ll,
	  rib/rib2ri, rib/rib2ri/SConscript, rib/rib2ri/librib2ri.cpp,
	  rib/rib2ri/librib2ri.h, rib/rib2stream,
	  rib/rib2stream/SConscript, rib/rib2stream/librib2stream.cpp,
	  rib/rib2stream/librib2stream.h, shadercompiler,
	  shadercompiler/aqsl, shadercompiler/aqsl/SConscript,
	  shadercompiler/aqsl/aqslcomp.cpp, shadercompiler/aqsltell,
	  shadercompiler/aqsltell/SConscript,
	  shadercompiler/aqsltell/aqsltell.cpp, shadercompiler/codegenvm,
	  shadercompiler/codegenvm/SConscript,
	  shadercompiler/codegenvm/codegenvm.cpp,
	  shadercompiler/codegenvm/codegenvm.h,
	  shadercompiler/codegenvm/vmdatagather.cpp,
	  shadercompiler/codegenvm/vmdatagather.h,
	  shadercompiler/codegenvm/vmoutput.cpp,
	  shadercompiler/codegenvm/vmoutput.h,
	  shadercompiler/shaderexecenv,
	  shadercompiler/shaderexecenv/SConscript,
	  shadercompiler/shaderexecenv/shadeops.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.cpp,
	  shadercompiler/shaderexecenv/shaderexecenv.h,
	  shadercompiler/shadervm, shadercompiler/shadervm/SConscript,
	  shadercompiler/shadervm/dsoshadeops.cpp,
	  shadercompiler/shadervm/dsoshadeops.h,
	  shadercompiler/shadervm/shaderstack.cpp,
	  shadercompiler/shadervm/shaderstack.h,
	  shadercompiler/shadervm/shadervariable.cpp,
	  shadercompiler/shadervm/shadervariable.h,
	  shadercompiler/shadervm/shadervm.cpp,
	  shadercompiler/shadervm/shadervm.h,
	  shadercompiler/shadervm/shadervm1.cpp,
	  shadercompiler/shadervm/shadervm2.cpp, shadercompiler/slparse,
	  shadercompiler/slparse/SConscript,
	  shadercompiler/slparse/funcdef.cpp,
	  shadercompiler/slparse/funcdef.h,
	  shadercompiler/slparse/icodegen.h,
	  shadercompiler/slparse/ifuncdef.h,
	  shadercompiler/slparse/iparsenode.h,
	  shadercompiler/slparse/ivardef.h,
	  shadercompiler/slparse/libslparse.cpp,
	  shadercompiler/slparse/libslparse.h,
	  shadercompiler/slparse/optimise.cpp,
	  shadercompiler/slparse/parsenode.cpp,
	  shadercompiler/slparse/parsenode.h,
	  shadercompiler/slparse/parser.yy,
	  shadercompiler/slparse/scanner.ll,
	  shadercompiler/slparse/typecheck.cpp,
	  shadercompiler/slparse/vardef.cpp,
	  shadercompiler/slparse/vardef.h, shadercompiler/slpp,
	  shadercompiler/slpp/SConscript, shadercompiler/slpp/pp.h,
	  shadercompiler/slpp/pp1.c, shadercompiler/slpp/pp2.c,
	  shadercompiler/slpp/pp3.c, shadercompiler/slpp/pp4.c,
	  shadercompiler/slpp/pp5.c, shadercompiler/slpp/pp6.c,
	  shadercompiler/slpp/pp7.c, shadercompiler/slpp/pp8.c,
	  shadercompiler/slpp/ppext.h, shadercompiler/slxargs,
	  shadercompiler/slxargs/SConscript,
	  shadercompiler/slxargs/rcdummy.cpp,
	  shadercompiler/slxargs/slx.cpp, shadercompiler/slxargs/slx.h,
	  shaders, shaders/SConscript, shaders/ambientlight.sl,
	  shaders/background.sl, shaders/bumpy.sl, shaders/constant.sl,
	  shaders/depthcue.sl, shaders/distantlight.sl, shaders/fog.sl,
	  shaders/matte.sl, shaders/metal.sl, shaders/paintedplastic.sl,
	  shaders/plastic.sl, shaders/pointlight.sl, shaders/shinymetal.sl,
	  shaders/spotlight.sl, testing, testing/regression,
	  testing/regression/RIBs, testing/regression/RIBs/Bugs,
	  testing/regression/RIBs/Bugs/Bug1013736,
	  testing/regression/RIBs/Bugs/Bug1013736/Bug1013736.rib,
	  testing/regression/RIBs/Bugs/Bug1013736/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1014043,
	  testing/regression/RIBs/Bugs/Bug1014043/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1014043/bug1014043.rib,
	  testing/regression/RIBs/Bugs/Bug1014043/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1023260,
	  testing/regression/RIBs/Bugs/Bug1023260/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1023260/Bug1023260.rib,
	  testing/regression/RIBs/Bugs/Bug1023260/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1030593,
	  testing/regression/RIBs/Bugs/Bug1030593/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1030593/bug1030593.rib,
	  testing/regression/RIBs/Bugs/Bug1030593/empty.rib,
	  testing/regression/RIBs/Bugs/Bug1030593/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1049628,
	  testing/regression/RIBs/Bugs/Bug1049628/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1049628/Bug1049628.rib,
	  testing/regression/RIBs/Bugs/Bug1049628/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1049839,
	  testing/regression/RIBs/Bugs/Bug1049839/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1049839/Bug1049839.rib,
	  testing/regression/RIBs/Bugs/Bug1049839/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1052918,
	  testing/regression/RIBs/Bugs/Bug1052918/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1052918/Bug1052918.rib,
	  testing/regression/RIBs/Bugs/Bug1052918/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1063660,
	  testing/regression/RIBs/Bugs/Bug1063660/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1063660/Bug1063660.rib,
	  testing/regression/RIBs/Bugs/Bug1063660/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1066350,
	  testing/regression/RIBs/Bugs/Bug1066350/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1066350/Bug1066350.rib,
	  testing/regression/RIBs/Bugs/Bug1066350/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1073845,
	  testing/regression/RIBs/Bugs/Bug1073845/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1073845/Bug1073845.rib,
	  testing/regression/RIBs/Bugs/Bug1073845/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1073845/mesh.rib,
	  testing/regression/RIBs/Bugs/Bug1102605,
	  testing/regression/RIBs/Bugs/Bug1102605/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1102605/Bug1102605.rib,
	  testing/regression/RIBs/Bugs/Bug1102605/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1104545,
	  testing/regression/RIBs/Bugs/Bug1104545/Bug1104545.rib,
	  testing/regression/RIBs/Bugs/Bug1104545/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1144077,
	  testing/regression/RIBs/Bugs/Bug1144077/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1144077/Bug1144077.rib,
	  testing/regression/RIBs/Bugs/Bug1144077/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1175571,
	  testing/regression/RIBs/Bugs/Bug1175571/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1175571/Bug1175571.rib,
	  testing/regression/RIBs/Bugs/Bug1175571/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1184401,
	  testing/regression/RIBs/Bugs/Bug1184401/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug1184401/Bug1184401.rib,
	  testing/regression/RIBs/Bugs/Bug1184401/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug1220286,
	  testing/regression/RIBs/Bugs/Bug1220286/bug1220286.rib,
	  testing/regression/RIBs/Bugs/Bug1220286/bug1220286.sl,
	  testing/regression/RIBs/Bugs/Bug1220286/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug771953,
	  testing/regression/RIBs/Bugs/Bug771953/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug771953/bug771953.rib,
	  testing/regression/RIBs/Bugs/Bug771953/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug830790,
	  testing/regression/RIBs/Bugs/Bug830790/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug830790/bug830790.rib,
	  testing/regression/RIBs/Bugs/Bug830790/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug878587,
	  testing/regression/RIBs/Bugs/Bug878587/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug878587/bug878587.rib,
	  testing/regression/RIBs/Bugs/Bug878587/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug900120,
	  testing/regression/RIBs/Bugs/Bug900120/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug900120/bug900120.rib,
	  testing/regression/RIBs/Bugs/Bug900120/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug902510,
	  testing/regression/RIBs/Bugs/Bug902510/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug902510/bug902510.rib,
	  testing/regression/RIBs/Bugs/Bug902510/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug902510/texture,
	  testing/regression/RIBs/Bugs/Bug906365,
	  testing/regression/RIBs/Bugs/Bug906365/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug906365/bug906365.rib,
	  testing/regression/RIBs/Bugs/Bug906365/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug925879,
	  testing/regression/RIBs/Bugs/Bug925879/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug925879/bug925879.rib,
	  testing/regression/RIBs/Bugs/Bug925879/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug931713,
	  testing/regression/RIBs/Bugs/Bug931713/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug931713/bug931713.rib,
	  testing/regression/RIBs/Bugs/Bug931713/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug938755,
	  testing/regression/RIBs/Bugs/Bug938755/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug938755/bug938755.rib,
	  testing/regression/RIBs/Bugs/Bug938755/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug938941,
	  testing/regression/RIBs/Bugs/Bug938941/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug938941/bug938941.rib,
	  testing/regression/RIBs/Bugs/Bug938941/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug942508,
	  testing/regression/RIBs/Bugs/Bug942508/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug942508/bug942508.rib,
	  testing/regression/RIBs/Bugs/Bug942508/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug942638,
	  testing/regression/RIBs/Bugs/Bug942638/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug942638/bug942638.rib,
	  testing/regression/RIBs/Bugs/Bug942638/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug946045,
	  testing/regression/RIBs/Bugs/Bug946045/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug946045/bug946045.rib,
	  testing/regression/RIBs/Bugs/Bug946045/jobs.cfg,
	  testing/regression/RIBs/Bugs/Bug948827,
	  testing/regression/RIBs/Bugs/Bug948827/.cvsignore,
	  testing/regression/RIBs/Bugs/Bug948827/bug948827.rib,
	  testing/regression/RIBs/Bugs/Bug948827/jobs.cfg,
	  testing/regression/RIBs/Bugs/BugThreeLights,
	  testing/regression/RIBs/Bugs/BugThreeLights/.cvsignore,
	  testing/regression/RIBs/Bugs/BugThreeLights/BugThreeLights.rib,
	  testing/regression/RIBs/Bugs/BugThreeLights/jobs.cfg,
	  testing/regression/RIBs/Curves,
	  testing/regression/RIBs/Curves/.cvsignore,
	  testing/regression/RIBs/Curves/bezier.rib,
	  testing/regression/RIBs/Curves/catmull-rom.rib,
	  testing/regression/RIBs/Curves/jobs.cfg,
	  testing/regression/RIBs/Curves/lincurve_test1.rib,
	  testing/regression/RIBs/Curves/lincurve_test2.rib,
	  testing/regression/RIBs/Curves/lincurve_test3.rib,
	  testing/regression/RIBs/Curves/lincurve_test4.rib,
	  testing/regression/RIBs/Curves/linear.rib,
	  testing/regression/RIBs/DepthOfField,
	  testing/regression/RIBs/DepthOfField/.cvsignore,
	  testing/regression/RIBs/DepthOfField/dof.rib,
	  testing/regression/RIBs/DepthOfField/dofmb.rib,
	  testing/regression/RIBs/DepthOfField/jobs.cfg,
	  testing/regression/RIBs/Misc,
	  testing/regression/RIBs/Misc/.cvsignore,
	  testing/regression/RIBs/Misc/anim.rib,
	  testing/regression/RIBs/Misc/coordsys_test.rib,
	  testing/regression/RIBs/Misc/croptest.rib,
	  testing/regression/RIBs/Misc/defsurf.rib,
	  testing/regression/RIBs/Misc/detail.rib,
	  testing/regression/RIBs/Misc/eyeplanetest.rib,
	  testing/regression/RIBs/Misc/jobs.cfg,
	  testing/regression/RIBs/Misc/matte.rib,
	  testing/regression/RIBs/MotionBlur,
	  testing/regression/RIBs/MotionBlur/.cvsignore,
	  testing/regression/RIBs/MotionBlur/cam_mb.rib,
	  testing/regression/RIBs/MotionBlur/jobs.cfg,
	  testing/regression/RIBs/MotionBlur/mblur.rib,
	  testing/regression/RIBs/MotionBlur/mblur2a.rib,
	  testing/regression/RIBs/MotionBlur/mblur2b.rib,
	  testing/regression/RIBs/MotionBlur/mblur_1x1.rib,
	  testing/regression/RIBs/NURBS,
	  testing/regression/RIBs/NURBS/.cvsignore,
	  testing/regression/RIBs/NURBS/complexnurbs1.rib,
	  testing/regression/RIBs/NURBS/jobs.cfg,
	  testing/regression/RIBs/ObjectInstance,
	  testing/regression/RIBs/ObjectInstance/.cvsignore,
	  testing/regression/RIBs/ObjectInstance/NuPatch.rib,
	  testing/regression/RIBs/ObjectInstance/PointsGeneralPolygons.rib,
	  testing/regression/RIBs/ObjectInstance/Sphere.rib,
	  testing/regression/RIBs/ObjectInstance/jobs.cfg,
	  testing/regression/RIBs/Points,
	  testing/regression/RIBs/Points/.cvsignore,
	  testing/regression/RIBs/Points/jobs.cfg,
	  testing/regression/RIBs/Points/points1.rib,
	  testing/regression/RIBs/Polygons,
	  testing/regression/RIBs/Polygons/.cvsignore,
	  testing/regression/RIBs/Polygons/genpoly_test.rib,
	  testing/regression/RIBs/Polygons/jobs.cfg,
	  testing/regression/RIBs/Polygons/poly_test.rib,
	  testing/regression/RIBs/Primitives,
	  testing/regression/RIBs/Primitives/.cvsignore,
	  testing/regression/RIBs/Primitives/colpervertex_test.rib,
	  testing/regression/RIBs/Primitives/coneparams1.py,
	  testing/regression/RIBs/Primitives/jobs.cfg,
	  testing/regression/RIBs/Primitives/periodic_test.rib,
	  testing/regression/RIBs/Primitives/quads_test.rib,
	  testing/regression/RIBs/Primitives/simplecone.rib,
	  testing/regression/RIBs/Primitives/simplecylinder.rib,
	  testing/regression/RIBs/Primitives/simplenurbs.rib,
	  testing/regression/RIBs/Primitives/simplesphere.rib,
	  testing/regression/RIBs/Primitives/sphereparams1.py,
	  testing/regression/RIBs/Primitives/teapotgeom.rib,
	  testing/regression/RIBs/Primitives/torusparams1.py,
	  testing/regression/RIBs/Primitives/trim_test.rib,
	  testing/regression/RIBs/Procedurals,
	  testing/regression/RIBs/Procedurals/.cvsignore,
	  testing/regression/RIBs/Procedurals/constanttex.sl,
	  testing/regression/RIBs/Procedurals/delayed_archive.rib,
	  testing/regression/RIBs/Procedurals/delayedproc.rib,
	  testing/regression/RIBs/Procedurals/detailproc.py,
	  testing/regression/RIBs/Procedurals/jobs.cfg,
	  testing/regression/RIBs/Procedurals/rundetailproc.rib,
	  testing/regression/RIBs/Procedurals/runsphereproc.rib,
	  testing/regression/RIBs/Procedurals/sphereproc.py,
	  testing/regression/RIBs/RIBProcessing,
	  testing/regression/RIBs/RIBProcessing/.cvsignore,
	  testing/regression/RIBs/RIBProcessing/jobs.cfg,
	  testing/regression/RIBs/RIBProcessing/readarchive.rib,
	  testing/regression/RIBs/RIBProcessing/simple_archive.rib,
	  testing/regression/RIBs/RIBProcessing/torus.rib.gz,
	  testing/regression/RIBs/RIBProcessing/torus_bin.rib,
	  testing/regression/RIBs/RIBProcessing/torus_bin.rib.gz,
	  testing/regression/RIBs/Scenes,
	  testing/regression/RIBs/Scenes/.cvsignore,
	  testing/regression/RIBs/Scenes/jobs.cfg,
	  testing/regression/RIBs/Scenes/vase.rib,
	  testing/regression/RIBs/Shading,
	  testing/regression/RIBs/Shading/.cvsignore,
	  testing/regression/RIBs/Shading/SLFunctions,
	  testing/regression/RIBs/Shading/SLFunctions/.cvsignore,
	  testing/regression/RIBs/Shading/SLFunctions/func_common.rib,
	  testing/regression/RIBs/Shading/SLFunctions/func_maketexture.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcs.sl,
	  testing/regression/RIBs/Shading/SLFunctions/funcset1.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset10.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset11.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset2.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset3.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset4.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset5.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset6.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset7.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset8.rib,
	  testing/regression/RIBs/Shading/SLFunctions/funcset9.rib,
	  testing/regression/RIBs/Shading/SLFunctions/invtrig.rib,
	  testing/regression/RIBs/Shading/SLFunctions/jobs.cfg,
	  testing/regression/RIBs/Shading/SLFunctions/test_func_setup.rib,
	  testing/regression/RIBs/Shading/SLFunctions/trig.rib,
	  testing/regression/RIBs/Shading/cellnoise.rib,
	  testing/regression/RIBs/Shading/jobs.cfg,
	  testing/regression/RIBs/Shadows,
	  testing/regression/RIBs/Shadows/.cvsignore,
	  testing/regression/RIBs/Shadows/jobs.cfg,
	  testing/regression/RIBs/Shadows/shadtest.rib,
	  testing/regression/RIBs/Shadows/softshadow.rib,
	  testing/regression/RIBs/Sidedness,
	  testing/regression/RIBs/Sidedness/.cvsignore,
	  testing/regression/RIBs/Sidedness/jobs.cfg,
	  testing/regression/RIBs/Sidedness/orientation.rib,
	  testing/regression/RIBs/Sidedness/orientation_onesided.rib,
	  testing/regression/RIBs/Sidedness/reverseorientation.rib,
	  testing/regression/RIBs/SolidModeling,
	  testing/regression/RIBs/SolidModeling/.cvsignore,
	  testing/regression/RIBs/SolidModeling/csg_test.rib,
	  testing/regression/RIBs/SolidModeling/csg_test2.rib,
	  testing/regression/RIBs/SolidModeling/jobs.cfg,
	  testing/regression/RIBs/Subdivision,
	  testing/regression/RIBs/Subdivision/.cvsignore,
	  testing/regression/RIBs/Subdivision/jobs.cfg,
	  testing/regression/RIBs/Subdivision/sds_displacement.rib,
	  testing/regression/RIBs/Subdivision/subdiv1.rib,
	  testing/regression/RIBs/Subdivision/subdiv2.rib,
	  testing/regression/RIBs/Subdivision/subdiv3.rib,
	  testing/regression/RIBs/Subdivision/subdiv4.rib,
	  testing/regression/RIBs/SurfaceParameters,
	  testing/regression/RIBs/SurfaceParameters/.cvsignore,
	  testing/regression/RIBs/SurfaceParameters/jobs.cfg,
	  testing/regression/RIBs/SurfaceParameters/mesh_uniform.rib,
	  testing/regression/RIBs/SurfaceParameters/mod_st2_test.rib,
	  testing/regression/RIBs/SurfaceParameters/mod_st_test.rib,
	  testing/regression/RIBs/SurfaceParameters/polyuser.rib,
	  testing/regression/RIBs/SurfaceParameters/std_st_test.rib,
	  testing/regression/RIBs/SurfaceParameters/userparams.rib,
	  testing/regression/RIBs/SurfaceParameters/uv_test.rib,
	  testing/regression/RIBs/Texturing,
	  testing/regression/RIBs/Texturing/.cvsignore,
	  testing/regression/RIBs/Texturing/env_test.rib,
	  testing/regression/RIBs/Texturing/grid.tex,
	  testing/regression/RIBs/Texturing/jobs.cfg,
	  testing/regression/RIBs/Texturing/real_env_lights,
	  testing/regression/RIBs/Texturing/real_env_test.rib,
	  testing/regression/RIBs/Texturing/real_env_world,
	  testing/regression/RIBs/Texturing/sticky_patch.rib,
	  testing/regression/RIBs/Texturing/sticky_texture.sl,
	  testing/regression/RIBs/Texturing/tmap_test.rib,
	  testing/regression/RIBs/Transformations,
	  testing/regression/RIBs/Transformations/.cvsignore,
	  testing/regression/RIBs/Transformations/jobs.cfg,
	  testing/regression/RIBs/Transformations/skew1.rib,
	  testing/regression/clean.py, testing/regression/createrefs.cfg,
	  testing/regression/jobs.cfg, testing/regression/maps,
	  testing/regression/maps/Image1.tif,
	  testing/regression/maps/gridtile.tif,
	  testing/regression/maps/nx.tif, testing/regression/maps/ny.tif,
	  testing/regression/maps/nz.tif, testing/regression/maps/px.tif,
	  testing/regression/maps/py.tif, testing/regression/maps/pz.tif,
	  testing/regression/maps/range.tif, testing/regression/reference,
	  testing/regression/reference/Bug1049839.tif,
	  testing/regression/reference/Bug1102605.tif,
	  testing/regression/reference/Bug1144077.tif,
	  testing/regression/reference/Bug1175571.tif,
	  testing/regression/reference/Bug1184401.tif,
	  testing/regression/reference/BugThreeLights.tif,
	  testing/regression/reference/NuPatch.tif,
	  testing/regression/reference/PointsGeneralPolygons.tif,
	  testing/regression/reference/Sphere.tif,
	  testing/regression/reference/anim00.tif,
	  testing/regression/reference/anim01.tif,
	  testing/regression/reference/anim02.tif,
	  testing/regression/reference/anim03.tif,
	  testing/regression/reference/anim04.tif,
	  testing/regression/reference/anim05.tif,
	  testing/regression/reference/anim06.tif,
	  testing/regression/reference/anim07.tif,
	  testing/regression/reference/anim08.tif,
	  testing/regression/reference/anim09.tif,
	  testing/regression/reference/anim10.tif,
	  testing/regression/reference/anim11.tif,
	  testing/regression/reference/anim12.tif,
	  testing/regression/reference/anim13.tif,
	  testing/regression/reference/anim14.tif,
	  testing/regression/reference/anim15.tif,
	  testing/regression/reference/anim16.tif,
	  testing/regression/reference/anim17.tif,
	  testing/regression/reference/anim18.tif,
	  testing/regression/reference/anim19.tif,
	  testing/regression/reference/anim20.tif,
	  testing/regression/reference/anim21.tif,
	  testing/regression/reference/anim22.tif,
	  testing/regression/reference/anim23.tif,
	  testing/regression/reference/anim24.tif,
	  testing/regression/reference/anim25.tif,
	  testing/regression/reference/anim26.tif,
	  testing/regression/reference/anim27.tif,
	  testing/regression/reference/anim28.tif,
	  testing/regression/reference/anim29.tif,
	  testing/regression/reference/anim30.tif,
	  testing/regression/reference/anim31.tif,
	  testing/regression/reference/anim32.tif,
	  testing/regression/reference/anim33.tif,
	  testing/regression/reference/anim34.tif,
	  testing/regression/reference/anim35.tif,
	  testing/regression/reference/anim36.tif,
	  testing/regression/reference/anim37.tif,
	  testing/regression/reference/anim38.tif,
	  testing/regression/reference/anim39.tif,
	  testing/regression/reference/anim40.tif,
	  testing/regression/reference/anim41.tif,
	  testing/regression/reference/anim42.tif,
	  testing/regression/reference/anim43.tif,
	  testing/regression/reference/anim44.tif,
	  testing/regression/reference/anim45.tif,
	  testing/regression/reference/anim46.tif,
	  testing/regression/reference/anim47.tif,
	  testing/regression/reference/anim48.tif,
	  testing/regression/reference/anim49.tif,
	  testing/regression/reference/bezier.tif,
	  testing/regression/reference/bug1013736.tif,
	  testing/regression/reference/bug1014043.tif,
	  testing/regression/reference/bug1023260.tif,
	  testing/regression/reference/bug1030593.tif,
	  testing/regression/reference/bug1049628.tif,
	  testing/regression/reference/bug1052918.tif,
	  testing/regression/reference/bug1063660.tif,
	  testing/regression/reference/bug1066350.tif,
	  testing/regression/reference/bug1073845.tif,
	  testing/regression/reference/bug1104545.tif,
	  testing/regression/reference/bug771953.tif,
	  testing/regression/reference/bug830790.tif,
	  testing/regression/reference/bug878587.tif,
	  testing/regression/reference/bug900120.tif,
	  testing/regression/reference/bug902510.tif,
	  testing/regression/reference/bug906365.tif,
	  testing/regression/reference/bug925879.tif,
	  testing/regression/reference/bug931713.tif,
	  testing/regression/reference/bug938755.tif,
	  testing/regression/reference/bug942508.tif,
	  testing/regression/reference/bug942638.tif,
	  testing/regression/reference/bug948827.tif,
	  testing/regression/reference/cam_mb.tif,
	  testing/regression/reference/catmull-rom.tif,
	  testing/regression/reference/cellnoise.tif,
	  testing/regression/reference/colpervertex_test.tif,
	  testing/regression/reference/complexnurbs1.tif,
	  testing/regression/reference/coneparams1.tif,
	  testing/regression/reference/coordsys_test.tif,
	  testing/regression/reference/croptest.tif,
	  testing/regression/reference/csg_test.tif,
	  testing/regression/reference/csg_test2.tif,
	  testing/regression/reference/defsurf.tif,
	  testing/regression/reference/delayedproc.tif,
	  testing/regression/reference/detail.tif,
	  testing/regression/reference/disp1.tif,
	  testing/regression/reference/disp_poly.tif,
	  testing/regression/reference/dof.tif,
	  testing/regression/reference/dofmb.tif,
	  testing/regression/reference/env_test.tif,
	  testing/regression/reference/eyeplanetest.tif,
	  testing/regression/reference/funcset1.tif,
	  testing/regression/reference/funcset10.tif,
	  testing/regression/reference/funcset11.tif,
	  testing/regression/reference/funcset2.tif,
	  testing/regression/reference/funcset3.tif,
	  testing/regression/reference/funcset4.tif,
	  testing/regression/reference/funcset5.tif,
	  testing/regression/reference/funcset6.tif,
	  testing/regression/reference/funcset7.tif,
	  testing/regression/reference/funcset8.tif,
	  testing/regression/reference/funcset9.tif,
	  testing/regression/reference/genpoly_test.tif,
	  testing/regression/reference/invtrig.tif,
	  testing/regression/reference/lincurve_test3.tif,
	  testing/regression/reference/lincurve_test4.tif,
	  testing/regression/reference/linear.tif,
	  testing/regression/reference/matte.tif,
	  testing/regression/reference/mblur.tif,
	  testing/regression/reference/mblur2a.tif,
	  testing/regression/reference/mblur2b.tif,
	  testing/regression/reference/mblur_1x1.tif,
	  testing/regression/reference/mesh_uniform.tif,
	  testing/regression/reference/mod_st2_test.tif,
	  testing/regression/reference/mod_st_test.tif,
	  testing/regression/reference/orientation.tif,
	  testing/regression/reference/orientation_onesided.tif,
	  testing/regression/reference/periodic_test.tif,
	  testing/regression/reference/points1.tif,
	  testing/regression/reference/poly_test.tif,
	  testing/regression/reference/polyuser.tif,
	  testing/regression/reference/quads_test.tif,
	  testing/regression/reference/readarchive.tif,
	  testing/regression/reference/real_env_test.tif,
	  testing/regression/reference/reverseorientation.tif,
	  testing/regression/reference/rundetailproc.tif,
	  testing/regression/reference/runsphereproc.tif,
	  testing/regression/reference/sds_displacement.tif,
	  testing/regression/reference/shadtest.tif,
	  testing/regression/reference/simplecone.tif,
	  testing/regression/reference/simplecylinder.tif,
	  testing/regression/reference/simplenurbs.tif,
	  testing/regression/reference/simplesphere.tif,
	  testing/regression/reference/skew1.tif,
	  testing/regression/reference/softshadow.tif,
	  testing/regression/reference/sphereparams1.tif,
	  testing/regression/reference/std_st_test.tif,
	  testing/regression/reference/sticky_patch.tif,
	  testing/regression/reference/subdiv1.tif,
	  testing/regression/reference/subdiv2.tif,
	  testing/regression/reference/subdiv3.tif,
	  testing/regression/reference/subdiv4.tif,
	  testing/regression/reference/teapotgeom.tif,
	  testing/regression/reference/test_func_setup.tif,
	  testing/regression/reference/tmap_test.tif,
	  testing/regression/reference/torus_bin.tif,
	  testing/regression/reference/torus_bin_gzip.tif,
	  testing/regression/reference/torus_gzip.tif,
	  testing/regression/reference/torusparams1.tif,
	  testing/regression/reference/trig.tif,
	  testing/regression/reference/trim_test.tif,
	  testing/regression/reference/userparams.tif,
	  testing/regression/reference/uv_test.tif,
	  testing/regression/reference/vase.tif,
	  testing/regression/renderers.cfg,
	  testing/regression/rendertester.py, testing/regression/shaders,
	  testing/regression/shaders/.cvsignore,
	  testing/regression/shaders/cellnoisetest.sl,
	  testing/regression/shaders/curvetube.sl,
	  testing/regression/shaders/dented.sl,
	  testing/regression/shaders/face_plastic.sl,
	  testing/regression/shaders/map.sl,
	  testing/regression/shaders/paintedconstant.sl,
	  testing/regression/shaders/paintedplastic.sl,
	  testing/regression/shaders/sample_buster.sl,
	  testing/regression/shaders/shadowspot.sl,
	  testing/regression/shaders/shinymetal.sl,
	  testing/regression/shaders/show_N.sl,
	  testing/regression/shaders/show_dpdu.sl,
	  testing/regression/shaders/show_side.sl,
	  testing/regression/shaders/show_sphere_st.sl,
	  testing/regression/shaders/show_st.sl,
	  testing/regression/shaders/showuser.sl,
	  testing/regression/shaders/uvtest.sl,
	  testing/regression/shaders/wavy.sl, testing/regression/tasks.cfg,
	  testing/systemtests, testing/systemtests/dsotest,
	  testing/systemtests/dsotest/bbox.c,
	  testing/systemtests/dsotest/bbox.sl,
	  testing/systemtests/dsotest/dsotest.rib,
	  testing/systemtests/runprogramtest,
	  testing/systemtests/runprogramtest/proc-runprogram.c,
	  testing/systemtests/runprogramtest/test.rib, texturing,
	  texturing/plugins, texturing/plugins/SConscript,
	  texturing/plugins/bake2tif,
	  texturing/plugins/bake2tif/SConscript,
	  texturing/plugins/bake2tif/bake2tif.c, texturing/plugins/bmp2tif,
	  texturing/plugins/bmp2tif/SConscript,
	  texturing/plugins/bmp2tif/bmp2tif.c, texturing/plugins/common,
	  texturing/plugins/common/pixelsave.c,
	  texturing/plugins/common/pixelsave.h, texturing/plugins/exr2tif,
	  texturing/plugins/exr2tif/exr2tif.cpp, texturing/plugins/gif2tif,
	  texturing/plugins/gif2tif/SConscript,
	  texturing/plugins/gif2tif/gif2tif.c, texturing/plugins/jpg2tif,
	  texturing/plugins/jpg2tif/SConscript,
	  texturing/plugins/jpg2tif/jpg2save.c,
	  texturing/plugins/jpg2tif/jpg2tif.c, texturing/plugins/pcx2tif,
	  texturing/plugins/pcx2tif/SConscript,
	  texturing/plugins/pcx2tif/pcx2tif.c, texturing/plugins/png2tif,
	  texturing/plugins/png2tif/png2tif.c, texturing/plugins/ppm2tif,
	  texturing/plugins/ppm2tif/SConscript,
	  texturing/plugins/ppm2tif/ppm2tif.c, texturing/plugins/tga2tif,
	  texturing/plugins/tga2tif/SConscript,
	  texturing/plugins/tga2tif/tga2tif.c, texturing/teqser,
	  texturing/teqser/SConscript, texturing/teqser/teqser.cpp,
	  thirdparty, thirdparty/tinyxml, thirdparty/tinyxml/SConscript,
	  thirdparty/tinyxml/changes.txt, thirdparty/tinyxml/readme.txt,
	  thirdparty/tinyxml/tinystr.cpp, thirdparty/tinyxml/tinystr.h,
	  thirdparty/tinyxml/tinyxml.cpp, thirdparty/tinyxml/tinyxml.h,
	  thirdparty/tinyxml/tinyxmlerror.cpp,
	  thirdparty/tinyxml/tinyxmlparser.cpp, tools, tools/mpdump,
	  tools/mpdump/mpanalyse.py, tools/neqsus, tools/neqsus/neqsus.wxg,
	  tools/neqsus/neqsus.xrc: Initial revision

