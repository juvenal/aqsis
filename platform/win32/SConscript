Import('env opts')

opts.Add(EnumOption('MSVS_VERSION', 'MS Visual C++ Version', '6.0', allowed_values=('6.0', '7.1')))
opts.Add('bison', 'Point to the bison executable', env.File('#/../win32libs/GnuWin32/bin/bison'))
opts.Add('flex', 'Point to the flex executable', env.File('#/../win32libs/GnuWin32/bin/flex'))
opts.Update(env)

# If the tiff include path isn't specified as an option, choose the default, of the 
# win32libs project from CVS checked out to the same folder as 'renderer'
if env['tiff_include_path'] == "":
	env.Replace(tiff_include_path = env.Dir('#/../win32libs/libtiff/include'))
if env['tiff_lib_path'] == "":
	env.Replace(tiff_lib_path = env.Dir('#/../win32libs/libtiff/lib/vc6'))

if env['debug']:
	env.Replace(tiff_lib = 'libtiff_d')
else:
	env.Replace(tiff_lib = 'libtiff')

# If the zlib include path isn't specified as an option, choose the default, of the 
# win32libs project from CVS checked out to the same folder as 'renderer'
if env['zlib_include_path'] == "":
	env.Replace(zlib_include_path = env.Dir('#/../win32libs/zlib/include'))
if env['zlib_lib_path'] == "":
	env.Replace(zlib_lib_path = env.Dir('#/../win32libs/zlib/lib/vc6'))

if env['debug']:
	env.Replace(z_lib = 'zlibstat_d')
else:
	env.Replace(z_lib = 'zlibstat')

env.Replace(fltk_lib = 'fltk')

if env['debug']:
	env.AppendUnique(CCFLAGS=['/GX', '/MDd', '/GR', '/Zm200', '/Od', '/Zi'])
	env.AppendUnique(CPPDEFINES=[('_DEBUG', 1)])
else:
	env.AppendUnique(CCFLAGS=['/GX', '/MD', '/GR', '/Zm200', '/O2'])

env.AppendUnique(CPPDEFINES=['NO_SYSLOG', 'WIN32', 'PLUGINS', ('_qBUILDING', 'CORE'), ('CORE', '1'), 'ZLIB_WINAPI'])
env.AppendUnique(CPPPATH = ['#/aqsistypes/win32'])

env.Replace(YACC = '${bison}')
env.Replace(LEX = '${flex}')
env.Replace(YACCFLAGS = '--no-lines -d')
env.Replace(XSLTPROC = env.File('#/../win32libs/GnuWin32/bin/xsltproc'))

env.Replace(display_libs = ['ws2_32', 'user32', 'gdi32', 'ole32', 'shell32', 'comctl32', '$fltk_lib'])
env.Replace(aqsis_libs = ['ws2_32', 'user32'])
env.Replace(libaqsis_libs = ['ws2_32', 'user32'])
